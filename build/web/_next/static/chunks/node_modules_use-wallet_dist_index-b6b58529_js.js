(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_use-wallet_dist_index-b6b58529_js"],{

/***/ "../../node_modules/ethereum-cryptography/hash-utils.js":
/*!**************************************************************!*\
  !*** ../../node_modules/ethereum-cryptography/hash-utils.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];

Object.defineProperty(exports, "__esModule", ({ value: true }));
function createHashFunction(hashConstructor) {
    return function (msg) {
        var hash = hashConstructor();
        hash.update(msg);
        return Buffer.from(hash.digest());
    };
}
exports.createHashFunction = createHashFunction;
//# sourceMappingURL=hash-utils.js.map

/***/ }),

/***/ "../../node_modules/ethereum-cryptography/keccak.js":
/*!**********************************************************!*\
  !*** ../../node_modules/ethereum-cryptography/keccak.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
var hash_utils_1 = __webpack_require__(/*! ./hash-utils */ "../../node_modules/ethereum-cryptography/hash-utils.js");
var createKeccakHash = __webpack_require__(/*! keccak */ "../../node_modules/keccak/js.js");
exports.keccak224 = hash_utils_1.createHashFunction(function () {
    return createKeccakHash("keccak224");
});
exports.keccak256 = hash_utils_1.createHashFunction(function () {
    return createKeccakHash("keccak256");
});
exports.keccak384 = hash_utils_1.createHashFunction(function () {
    return createKeccakHash("keccak384");
});
exports.keccak512 = hash_utils_1.createHashFunction(function () {
    return createKeccakHash("keccak512");
});
//# sourceMappingURL=keccak.js.map

/***/ }),

/***/ "../../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js ***!
  \***********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib */ "../../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js")(__webpack_require__(/*! ./lib/elliptic */ "../../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js"))


/***/ }),

/***/ "../../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js ***!
  \***************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

const EC = __webpack_require__(/*! elliptic */ "../../node_modules/elliptic/lib/elliptic.js").ec

const ec = new EC('secp256k1')
const ecparams = ec.curve

// Hack, we can not use bn.js@5, while elliptic uses bn.js@4
// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758
const BN = ecparams.n.constructor

function loadCompressedPublicKey (first, xbuf) {
  let x = new BN(xbuf)

  // overflow
  if (x.cmp(ecparams.p) >= 0) return null
  x = x.toRed(ecparams.red)

  // compute corresponding Y
  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()
  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()

  return ec.keyPair({ pub: { x: x, y: y } })
}

function loadUncompressedPublicKey (first, xbuf, ybuf) {
  let x = new BN(xbuf)
  let y = new BN(ybuf)

  // overflow
  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null

  x = x.toRed(ecparams.red)
  y = y.toRed(ecparams.red)

  // is odd flag
  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null

  // x*x*x + b = y*y
  const x3 = x.redSqr().redIMul(x)
  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null

  return ec.keyPair({ pub: { x: x, y: y } })
}

function loadPublicKey (pubkey) {
  // length should be validated in interface
  const first = pubkey[0]
  switch (first) {
    case 0x02:
    case 0x03:
      if (pubkey.length !== 33) return null
      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))
    case 0x04:
    case 0x06:
    case 0x07:
      if (pubkey.length !== 65) return null
      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))
    default:
      return null
  }
}

function savePublicKey (output, point) {
  const pubkey = point.encode(null, output.length === 33)
  // Loop should be faster because we do not need create extra Uint8Array
  // output.set(new Uint8Array(pubkey))
  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]
}

module.exports = {
  contextRandomize () {
    return 0
  },

  privateKeyVerify (seckey) {
    const bn = new BN(seckey)
    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1
  },

  privateKeyNegate (seckey) {
    const bn = new BN(seckey)
    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)
    seckey.set(negate)
    return 0
  },

  privateKeyTweakAdd (seckey, tweak) {
    const bn = new BN(tweak)
    if (bn.cmp(ecparams.n) >= 0) return 1

    bn.iadd(new BN(seckey))
    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)
    if (bn.isZero()) return 1

    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)
    seckey.set(tweaked)

    return 0
  },

  privateKeyTweakMul (seckey, tweak) {
    let bn = new BN(tweak)
    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1

    bn.imul(new BN(seckey))
    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)

    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)
    seckey.set(tweaked)

    return 0
  },

  publicKeyVerify (pubkey) {
    const pair = loadPublicKey(pubkey)
    return pair === null ? 1 : 0
  },

  publicKeyCreate (output, seckey) {
    const bn = new BN(seckey)
    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1

    const point = ec.keyFromPrivate(seckey).getPublic()
    savePublicKey(output, point)

    return 0
  },

  publicKeyConvert (output, pubkey) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    const point = pair.getPublic()
    savePublicKey(output, point)

    return 0
  },

  publicKeyNegate (output, pubkey) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    const point = pair.getPublic()
    point.y = point.y.redNeg()
    savePublicKey(output, point)

    return 0
  },

  publicKeyCombine (output, pubkeys) {
    const pairs = new Array(pubkeys.length)
    for (let i = 0; i < pubkeys.length; ++i) {
      pairs[i] = loadPublicKey(pubkeys[i])
      if (pairs[i] === null) return 1
    }

    let point = pairs[0].getPublic()
    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)
    if (point.isInfinity()) return 2

    savePublicKey(output, point)

    return 0
  },

  publicKeyTweakAdd (output, pubkey, tweak) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    tweak = new BN(tweak)
    if (tweak.cmp(ecparams.n) >= 0) return 2

    const point = pair.getPublic().add(ecparams.g.mul(tweak))
    if (point.isInfinity()) return 2

    savePublicKey(output, point)

    return 0
  },

  publicKeyTweakMul (output, pubkey, tweak) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    tweak = new BN(tweak)
    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2

    const point = pair.getPublic().mul(tweak)
    savePublicKey(output, point)

    return 0
  },

  signatureNormalize (sig) {
    const r = new BN(sig.subarray(0, 32))
    const s = new BN(sig.subarray(32, 64))
    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1

    if (s.cmp(ec.nh) === 1) {
      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)
    }

    return 0
  },

  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js
  // Adapted for Uint8Array instead Buffer
  signatureExport (obj, sig) {
    const sigR = sig.subarray(0, 32)
    const sigS = sig.subarray(32, 64)
    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1
    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1

    const { output } = obj

    // Prepare R
    let r = output.subarray(4, 4 + 33)
    r[0] = 0x00
    r.set(sigR, 1)

    let lenR = 33
    let posR = 0
    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);

    r = r.subarray(posR)
    if (r[0] & 0x80) return 1
    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1

    // Prepare S
    let s = output.subarray(6 + 33, 6 + 33 + 33)
    s[0] = 0x00
    s.set(sigS, 1)

    let lenS = 33
    let posS = 0
    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);

    s = s.subarray(posS)
    if (s[0] & 0x80) return 1
    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1

    // Set output length for return
    obj.outputlen = 6 + lenR + lenS

    // Output in specified format
    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
    output[0] = 0x30
    output[1] = obj.outputlen - 2
    output[2] = 0x02
    output[3] = r.length
    output.set(r, 4)
    output[4 + lenR] = 0x02
    output[5 + lenR] = s.length
    output.set(s, 6 + lenR)

    return 0
  },

  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js
  // Adapted for Uint8Array instead Buffer
  signatureImport (output, sig) {
    if (sig.length < 8) return 1
    if (sig.length > 72) return 1
    if (sig[0] !== 0x30) return 1
    if (sig[1] !== sig.length - 2) return 1
    if (sig[2] !== 0x02) return 1

    const lenR = sig[3]
    if (lenR === 0) return 1
    if (5 + lenR >= sig.length) return 1
    if (sig[4 + lenR] !== 0x02) return 1

    const lenS = sig[5 + lenR]
    if (lenS === 0) return 1
    if ((6 + lenR + lenS) !== sig.length) return 1

    if (sig[4] & 0x80) return 1
    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1

    if (sig[lenR + 6] & 0x80) return 1
    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1

    let sigR = sig.subarray(4, 4 + lenR)
    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)
    if (sigR.length > 32) return 1

    let sigS = sig.subarray(6 + lenR)
    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)
    if (sigS.length > 32) throw new Error('S length is too long')

    let r = new BN(sigR)
    if (r.cmp(ecparams.n) >= 0) r = new BN(0)

    let s = new BN(sig.subarray(6 + lenR))
    if (s.cmp(ecparams.n) >= 0) s = new BN(0)

    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)
    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)

    return 0
  },

  ecdsaSign (obj, message, seckey, data, noncefn) {
    if (noncefn) {
      const _noncefn = noncefn
      noncefn = (counter) => {
        const nonce = _noncefn(message, seckey, null, data, counter)

        const isValid = nonce instanceof Uint8Array && nonce.length === 32
        if (!isValid) throw new Error('This is the way')

        return new BN(nonce)
      }
    }

    const d = new BN(seckey)
    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1

    let sig
    try {
      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })
    } catch (err) {
      return 1
    }

    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)
    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)
    obj.recid = sig.recoveryParam

    return 0
  },

  ecdsaVerify (sig, msg32, pubkey) {
    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }

    const sigr = new BN(sigObj.r)
    const sigs = new BN(sigObj.s)
    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1
    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3

    const pair = loadPublicKey(pubkey)
    if (pair === null) return 2

    const point = pair.getPublic()
    const isValid = ec.verify(msg32, sigObj, point)
    return isValid ? 0 : 3
  },

  ecdsaRecover (output, sig, recid, msg32) {
    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }

    const sigr = new BN(sigObj.r)
    const sigs = new BN(sigObj.s)
    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1

    if (sigr.isZero() || sigs.isZero()) return 2

    // Can throw `throw new Error('Unable to find sencond key candinate');`
    let point
    try {
      point = ec.recoverPubKey(msg32, sigObj, recid)
    } catch (err) {
      return 2
    }

    savePublicKey(output, point)

    return 0
  },

  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {
    const pair = loadPublicKey(pubkey)
    if (pair === null) return 1

    const scalar = new BN(seckey)
    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2

    const point = pair.getPublic().mul(scalar)

    if (hashfn === undefined) {
      const data = point.encode(null, true)
      const sha256 = ec.hash().update(data).digest()
      for (let i = 0; i < 32; ++i) output[i] = sha256[i]
    } else {
      if (!xbuf) xbuf = new Uint8Array(32)
      const x = point.getX().toArray('be', 32)
      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]

      if (!ybuf) ybuf = new Uint8Array(32)
      const y = point.getY().toArray('be', 32)
      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]

      const hash = hashfn(xbuf, ybuf, data)

      const isValid = hash instanceof Uint8Array && hash.length === output.length
      if (!isValid) return 2

      output.set(hash)
    }

    return 0
  }
}


/***/ }),

/***/ "../../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js ***!
  \************************************************************************************/
/***/ (function(module) {

const errors = {
  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',
  TWEAK_ADD:
    'The tweak was out of range or the resulted private key is invalid',
  TWEAK_MUL: 'The tweak was out of range or equal to zero',
  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',
  SECKEY_INVALID: 'Private Key is invalid',
  PUBKEY_PARSE: 'Public Key could not be parsed',
  PUBKEY_SERIALIZE: 'Public Key serialization error',
  PUBKEY_COMBINE: 'The sum of the public keys is not valid',
  SIG_PARSE: 'Signature could not be parsed',
  SIGN: 'The nonce generation function failed, or the private key was invalid',
  RECOVER: 'Public key could not be recover',
  ECDH: 'Scalar was invalid (zero or overflow)'
}

function assert (cond, msg) {
  if (!cond) throw new Error(msg)
}

function isUint8Array (name, value, length) {
  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)

  if (length !== undefined) {
    if (Array.isArray(length)) {
      const numbers = length.join(', ')
      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`
      assert(length.includes(value.length), msg)
    } else {
      const msg = `Expected ${name} to be an Uint8Array with length ${length}`
      assert(value.length === length, msg)
    }
  }
}

function isCompressed (value) {
  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')
}

function getAssertedOutput (output = (len) => new Uint8Array(len), length) {
  if (typeof output === 'function') output = output(length)
  isUint8Array('output', output, length)
  return output
}

function toTypeString (value) {
  return Object.prototype.toString.call(value).slice(8, -1)
}

module.exports = (secp256k1) => {
  return {
    contextRandomize (seed) {
      assert(
        seed === null || seed instanceof Uint8Array,
        'Expected seed to be an Uint8Array or null'
      )
      if (seed !== null) isUint8Array('seed', seed, 32)

      switch (secp256k1.contextRandomize(seed)) {
        case 1:
          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)
      }
    },

    privateKeyVerify (seckey) {
      isUint8Array('private key', seckey, 32)

      return secp256k1.privateKeyVerify(seckey) === 0
    },

    privateKeyNegate (seckey) {
      isUint8Array('private key', seckey, 32)

      switch (secp256k1.privateKeyNegate(seckey)) {
        case 0:
          return seckey
        case 1:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    privateKeyTweakAdd (seckey, tweak) {
      isUint8Array('private key', seckey, 32)
      isUint8Array('tweak', tweak, 32)

      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {
        case 0:
          return seckey
        case 1:
          throw new Error(errors.TWEAK_ADD)
      }
    },

    privateKeyTweakMul (seckey, tweak) {
      isUint8Array('private key', seckey, 32)
      isUint8Array('tweak', tweak, 32)

      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {
        case 0:
          return seckey
        case 1:
          throw new Error(errors.TWEAK_MUL)
      }
    },

    publicKeyVerify (pubkey) {
      isUint8Array('public key', pubkey, [33, 65])

      return secp256k1.publicKeyVerify(pubkey) === 0
    },

    publicKeyCreate (seckey, compressed = true, output) {
      isUint8Array('private key', seckey, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyCreate(output, seckey)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.SECKEY_INVALID)
        case 2:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyConvert (pubkey, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyConvert(output, pubkey)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyNegate (pubkey, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyNegate(output, pubkey)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
        case 3:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyCombine (pubkeys, compressed = true, output) {
      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')
      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')
      for (const pubkey of pubkeys) {
        isUint8Array('public key', pubkey, [33, 65])
      }
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyCombine(output, pubkeys)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.PUBKEY_COMBINE)
        case 3:
          throw new Error(errors.PUBKEY_SERIALIZE)
      }
    },

    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isUint8Array('tweak', tweak, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.TWEAK_ADD)
      }
    },

    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isUint8Array('tweak', tweak, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.TWEAK_MUL)
      }
    },

    signatureNormalize (sig) {
      isUint8Array('signature', sig, 64)

      switch (secp256k1.signatureNormalize(sig)) {
        case 0:
          return sig
        case 1:
          throw new Error(errors.SIG_PARSE)
      }
    },

    signatureExport (sig, output) {
      isUint8Array('signature', sig, 64)
      output = getAssertedOutput(output, 72)

      const obj = { output, outputlen: 72 }
      switch (secp256k1.signatureExport(obj, sig)) {
        case 0:
          return output.slice(0, obj.outputlen)
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    signatureImport (sig, output) {
      isUint8Array('signature', sig)
      output = getAssertedOutput(output, 64)

      switch (secp256k1.signatureImport(output, sig)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    ecdsaSign (msg32, seckey, options = {}, output) {
      isUint8Array('message', msg32, 32)
      isUint8Array('private key', seckey, 32)
      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')
      if (options.data !== undefined) isUint8Array('options.data', options.data)
      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')
      output = getAssertedOutput(output, 64)

      const obj = { signature: output, recid: null }
      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {
        case 0:
          return obj
        case 1:
          throw new Error(errors.SIGN)
        case 2:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    ecdsaVerify (sig, msg32, pubkey) {
      isUint8Array('signature', sig, 64)
      isUint8Array('message', msg32, 32)
      isUint8Array('public key', pubkey, [33, 65])

      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {
        case 0:
          return true
        case 3:
          return false
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.PUBKEY_PARSE)
      }
    },

    ecdsaRecover (sig, recid, msg32, compressed = true, output) {
      isUint8Array('signature', sig, 64)
      assert(
        toTypeString(recid) === 'Number' &&
          recid >= 0 &&
          recid <= 3,
        'Expected recovery id to be a Number within interval [0, 3]'
      )
      isUint8Array('message', msg32, 32)
      isCompressed(compressed)
      output = getAssertedOutput(output, compressed ? 33 : 65)

      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.SIG_PARSE)
        case 2:
          throw new Error(errors.RECOVER)
        case 3:
          throw new Error(errors.IMPOSSIBLE_CASE)
      }
    },

    ecdh (pubkey, seckey, options = {}, output) {
      isUint8Array('public key', pubkey, [33, 65])
      isUint8Array('private key', seckey, 32)
      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')
      if (options.data !== undefined) isUint8Array('options.data', options.data)
      if (options.hashfn !== undefined) {
        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')
        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)
        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)
        isUint8Array('output', output)
      } else {
        output = getAssertedOutput(output, 32)
      }

      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {
        case 0:
          return output
        case 1:
          throw new Error(errors.PUBKEY_PARSE)
        case 2:
          throw new Error(errors.ECDH)
      }
    }
  }
}


/***/ }),

/***/ "../../node_modules/ethereum-cryptography/random.js":
/*!**********************************************************!*\
  !*** ../../node_modules/ethereum-cryptography/random.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
var randombytes = __webpack_require__(/*! randombytes */ "../../node_modules/randombytes/browser.js");
function getRandomBytes(bytes) {
    return new Promise(function (resolve, reject) {
        randombytes(bytes, function (err, resp) {
            if (err) {
                reject(err);
                return;
            }
            resolve(resp);
        });
    });
}
exports.getRandomBytes = getRandomBytes;
function getRandomBytesSync(bytes) {
    return randombytes(bytes);
}
exports.getRandomBytesSync = getRandomBytesSync;
//# sourceMappingURL=random.js.map

/***/ }),

/***/ "../../node_modules/ethereum-cryptography/secp256k1.js":
/*!*************************************************************!*\
  !*** ../../node_modules/ethereum-cryptography/secp256k1.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", ({ value: true }));
var secp256k1_1 = __webpack_require__(/*! secp256k1 */ "../../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js");
var random_1 = __webpack_require__(/*! ./random */ "../../node_modules/ethereum-cryptography/random.js");
var SECP256K1_PRIVATE_KEY_SIZE = 32;
function createPrivateKey() {
    return __awaiter(this, void 0, void 0, function () {
        var pk;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (false) {}
                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];
                case 1:
                    pk = _a.sent();
                    if (secp256k1_1.privateKeyVerify(pk)) {
                        return [2 /*return*/, pk];
                    }
                    return [3 /*break*/, 0];
                case 2: return [2 /*return*/];
            }
        });
    });
}
exports.createPrivateKey = createPrivateKey;
function createPrivateKeySync() {
    while (true) {
        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);
        if (secp256k1_1.privateKeyVerify(pk)) {
            return pk;
        }
    }
}
exports.createPrivateKeySync = createPrivateKeySync;
__export(__webpack_require__(/*! secp256k1 */ "../../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js"));
//# sourceMappingURL=secp256k1.js.map

/***/ }),

/***/ "../../node_modules/ethereumjs-util/dist/index.js":
/*!********************************************************!*\
  !*** ../../node_modules/ethereumjs-util/dist/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _require = __webpack_require__(/*! ethereum-cryptography/keccak */ "../../node_modules/ethereum-cryptography/keccak.js"),
    keccak224 = _require.keccak224,
    keccak384 = _require.keccak384,
    k256 = _require.keccak256,
    keccak512 = _require.keccak512;

var secp256k1 = __webpack_require__(/*! ./secp256k1-adapter */ "../../node_modules/ethereumjs-util/dist/secp256k1-adapter.js");
var assert = __webpack_require__(/*! assert */ "../../node_modules/assert/build/assert.js");
var rlp = __webpack_require__(/*! rlp */ "../../node_modules/rlp/dist/index.js");
var BN = __webpack_require__(/*! bn.js */ "../../node_modules/bn.js/lib/bn.js");
var createHash = __webpack_require__(/*! create-hash */ "../../node_modules/create-hash/browser.js");
var Buffer = __webpack_require__(/*! safe-buffer */ "../../node_modules/safe-buffer/index.js").Buffer;
Object.assign(exports, __webpack_require__(/*! ethjs-util */ "../../node_modules/ethjs-util/lib/index.js"));

/**
 * the max integer that this VM can handle (a ```BN```)
 * @var {BN} MAX_INTEGER
 */
exports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);

/**
 * 2^256 (a ```BN```)
 * @var {BN} TWO_POW256
 */
exports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);

/**
 * Keccak-256 hash of null (a ```String```)
 * @var {String} KECCAK256_NULL_S
 */
exports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';
exports.SHA3_NULL_S = exports.KECCAK256_NULL_S;

/**
 * Keccak-256 hash of null (a ```Buffer```)
 * @var {Buffer} KECCAK256_NULL
 */
exports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');
exports.SHA3_NULL = exports.KECCAK256_NULL;

/**
 * Keccak-256 of an RLP of an empty array (a ```String```)
 * @var {String} KECCAK256_RLP_ARRAY_S
 */
exports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';
exports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S;

/**
 * Keccak-256 of an RLP of an empty array (a ```Buffer```)
 * @var {Buffer} KECCAK256_RLP_ARRAY
 */
exports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');
exports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY;

/**
 * Keccak-256 hash of the RLP of null  (a ```String```)
 * @var {String} KECCAK256_RLP_S
 */
exports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';
exports.SHA3_RLP_S = exports.KECCAK256_RLP_S;

/**
 * Keccak-256 hash of the RLP of null (a ```Buffer```)
 * @var {Buffer} KECCAK256_RLP
 */
exports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');
exports.SHA3_RLP = exports.KECCAK256_RLP;

/**
 * [`BN`](https://github.com/indutny/bn.js)
 * @var {Function}
 */
exports.BN = BN;

/**
 * [`rlp`](https://github.com/ethereumjs/rlp)
 * @var {Function}
 */
exports.rlp = rlp;

/**
 * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)
 * @var {Object}
 */
exports.secp256k1 = secp256k1;

/**
 * Returns a buffer filled with 0s
 * @method zeros
 * @param {Number} bytes  the number of bytes the buffer should be
 * @return {Buffer}
 */
exports.zeros = function (bytes) {
  return Buffer.allocUnsafe(bytes).fill(0);
};

/**
  * Returns a zero address
  * @method zeroAddress
  * @return {String}
  */
exports.zeroAddress = function () {
  var addressLength = 20;
  var zeroAddress = exports.zeros(addressLength);
  return exports.bufferToHex(zeroAddress);
};

/**
 * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.
 * Or it truncates the beginning if it exceeds.
 * @method lsetLength
 * @param {Buffer|Array} msg the value to pad
 * @param {Number} length the number of bytes the output should be
 * @param {Boolean} [right=false] whether to start padding form the left or right
 * @return {Buffer|Array}
 */
exports.setLengthLeft = exports.setLength = function (msg, length, right) {
  var buf = exports.zeros(length);
  msg = exports.toBuffer(msg);
  if (right) {
    if (msg.length < length) {
      msg.copy(buf);
      return buf;
    }
    return msg.slice(0, length);
  } else {
    if (msg.length < length) {
      msg.copy(buf, length - msg.length);
      return buf;
    }
    return msg.slice(-length);
  }
};

/**
 * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.
 * Or it truncates the beginning if it exceeds.
 * @param {Buffer|Array} msg the value to pad
 * @param {Number} length the number of bytes the output should be
 * @return {Buffer|Array}
 */
exports.setLengthRight = function (msg, length) {
  return exports.setLength(msg, length, true);
};

/**
 * Trims leading zeros from a `Buffer` or an `Array`
 * @param {Buffer|Array|String} a
 * @return {Buffer|Array|String}
 */
exports.unpad = exports.stripZeros = function (a) {
  a = exports.stripHexPrefix(a);
  var first = a[0];
  while (a.length > 0 && first.toString() === '0') {
    a = a.slice(1);
    first = a[0];
  }
  return a;
};
/**
 * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.
 * @param {*} v the value
 */
exports.toBuffer = function (v) {
  if (!Buffer.isBuffer(v)) {
    if (Array.isArray(v)) {
      v = Buffer.from(v);
    } else if (typeof v === 'string') {
      if (exports.isHexString(v)) {
        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');
      } else {
        v = Buffer.from(v);
      }
    } else if (typeof v === 'number') {
      v = exports.intToBuffer(v);
    } else if (v === null || v === undefined) {
      v = Buffer.allocUnsafe(0);
    } else if (BN.isBN(v)) {
      v = v.toArrayLike(Buffer);
    } else if (v.toArray) {
      // converts a BN to a Buffer
      v = Buffer.from(v.toArray());
    } else {
      throw new Error('invalid type');
    }
  }
  return v;
};

/**
 * Converts a `Buffer` to a `Number`
 * @param {Buffer} buf
 * @return {Number}
 * @throws If the input number exceeds 53 bits.
 */
exports.bufferToInt = function (buf) {
  return new BN(exports.toBuffer(buf)).toNumber();
};

/**
 * Converts a `Buffer` into a hex `String`
 * @param {Buffer} buf
 * @return {String}
 */
exports.bufferToHex = function (buf) {
  buf = exports.toBuffer(buf);
  return '0x' + buf.toString('hex');
};

/**
 * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.
 * @param {Buffer} num
 * @return {BN}
 */
exports.fromSigned = function (num) {
  return new BN(num).fromTwos(256);
};

/**
 * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.
 * @param {BN} num
 * @return {Buffer}
 */
exports.toUnsigned = function (num) {
  return Buffer.from(num.toTwos(256).toArray());
};

/**
 * Creates Keccak hash of the input
 * @param {Buffer|Array|String|Number} a the input data
 * @param {Number} [bits=256] the Keccak width
 * @return {Buffer}
 */
exports.keccak = function (a, bits) {
  a = exports.toBuffer(a);
  if (!bits) bits = 256;

  switch (bits) {
    case 224:
      {
        return keccak224(a);
      }
    case 256:
      {
        return k256(a);
      }
    case 384:
      {
        return keccak384(a);
      }
    case 512:
      {
        return keccak512(a);
      }
    default:
      {
        throw new Error('Invald algorithm: keccak' + bits);
      }
  }
};

/**
 * Creates Keccak-256 hash of the input, alias for keccak(a, 256)
 * @param {Buffer|Array|String|Number} a the input data
 * @return {Buffer}
 */
exports.keccak256 = function (a) {
  return exports.keccak(a);
};

/**
 * Creates SHA-3 (Keccak) hash of the input [OBSOLETE]
 * @param {Buffer|Array|String|Number} a the input data
 * @param {Number} [bits=256] the SHA-3 width
 * @return {Buffer}
 */
exports.sha3 = exports.keccak;

/**
 * Creates SHA256 hash of the input
 * @param {Buffer|Array|String|Number} a the input data
 * @return {Buffer}
 */
exports.sha256 = function (a) {
  a = exports.toBuffer(a);
  return createHash('sha256').update(a).digest();
};

/**
 * Creates RIPEMD160 hash of the input
 * @param {Buffer|Array|String|Number} a the input data
 * @param {Boolean} padded whether it should be padded to 256 bits or not
 * @return {Buffer}
 */
exports.ripemd160 = function (a, padded) {
  a = exports.toBuffer(a);
  var hash = createHash('rmd160').update(a).digest();
  if (padded === true) {
    return exports.setLength(hash, 32);
  } else {
    return hash;
  }
};

/**
 * Creates SHA-3 hash of the RLP encoded version of the input
 * @param {Buffer|Array|String|Number} a the input data
 * @return {Buffer}
 */
exports.rlphash = function (a) {
  return exports.keccak(rlp.encode(a));
};

/**
 * Checks if the private key satisfies the rules of the curve secp256k1.
 * @param {Buffer} privateKey
 * @return {Boolean}
 */
exports.isValidPrivate = function (privateKey) {
  return secp256k1.privateKeyVerify(privateKey);
};

/**
 * Checks if the public key satisfies the rules of the curve secp256k1
 * and the requirements of Ethereum.
 * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled
 * @param {Boolean} [sanitize=false] Accept public keys in other formats
 * @return {Boolean}
 */
exports.isValidPublic = function (publicKey, sanitize) {
  if (publicKey.length === 64) {
    // Convert to SEC1 for secp256k1
    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));
  }

  if (!sanitize) {
    return false;
  }

  return secp256k1.publicKeyVerify(publicKey);
};

/**
 * Returns the ethereum address of a given public key.
 * Accepts "Ethereum public keys" and SEC1 encoded keys.
 * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled
 * @param {Boolean} [sanitize=false] Accept public keys in other formats
 * @return {Buffer}
 */
exports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {
  pubKey = exports.toBuffer(pubKey);
  if (sanitize && pubKey.length !== 64) {
    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);
  }
  assert(pubKey.length === 64);
  // Only take the lower 160bits of the hash
  return exports.keccak(pubKey).slice(-20);
};

/**
 * Returns the ethereum public key of a given private key
 * @param {Buffer} privateKey A private key must be 256 bits wide
 * @return {Buffer}
 */
var privateToPublic = exports.privateToPublic = function (privateKey) {
  privateKey = exports.toBuffer(privateKey);
  // skip the type flag and use the X, Y points
  return secp256k1.publicKeyCreate(privateKey, false).slice(1);
};

/**
 * Converts a public key to the Ethereum format.
 * @param {Buffer} publicKey
 * @return {Buffer}
 */
exports.importPublic = function (publicKey) {
  publicKey = exports.toBuffer(publicKey);
  if (publicKey.length !== 64) {
    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);
  }
  return publicKey;
};

/**
 * ECDSA sign
 * @param {Buffer} msgHash
 * @param {Buffer} privateKey
 * @return {Object}
 */
exports.ecsign = function (msgHash, privateKey) {
  var sig = secp256k1.sign(msgHash, privateKey);

  var ret = {};
  ret.r = sig.signature.slice(0, 32);
  ret.s = sig.signature.slice(32, 64);
  ret.v = sig.recovery + 27;
  return ret;
};

/**
 * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.
 * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`
 * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key
 * used to produce the signature.
 * @param message
 * @returns {Buffer} hash
 */
exports.hashPersonalMessage = function (message) {
  var prefix = exports.toBuffer('\x19Ethereum Signed Message:\n' + message.length.toString());
  return exports.keccak(Buffer.concat([prefix, message]));
};

/**
 * ECDSA public key recovery from signature
 * @param {Buffer} msgHash
 * @param {Number} v
 * @param {Buffer} r
 * @param {Buffer} s
 * @return {Buffer} publicKey
 */
exports.ecrecover = function (msgHash, v, r, s) {
  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);
  var recovery = v - 27;
  if (recovery !== 0 && recovery !== 1) {
    throw new Error('Invalid signature v value');
  }
  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);
  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);
};

/**
 * Convert signature parameters into the format of `eth_sign` RPC method
 * @param {Number} v
 * @param {Buffer} r
 * @param {Buffer} s
 * @return {String} sig
 */
exports.toRpcSig = function (v, r, s) {
  // NOTE: with potential introduction of chainId this might need to be updated
  if (v !== 27 && v !== 28) {
    throw new Error('Invalid recovery id');
  }

  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin
  // FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053
  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));
};

/**
 * Convert signature format of the `eth_sign` RPC method to signature parameters
 * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053
 * @param {String} sig
 * @return {Object}
 */
exports.fromRpcSig = function (sig) {
  sig = exports.toBuffer(sig);

  // NOTE: with potential introduction of chainId this might need to be updated
  if (sig.length !== 65) {
    throw new Error('Invalid signature length');
  }

  var v = sig[64];
  // support both versions of `eth_sign` responses
  if (v < 27) {
    v += 27;
  }

  return {
    v: v,
    r: sig.slice(0, 32),
    s: sig.slice(32, 64)
  };
};

/**
 * Returns the ethereum address of a given private key
 * @param {Buffer} privateKey A private key must be 256 bits wide
 * @return {Buffer}
 */
exports.privateToAddress = function (privateKey) {
  return exports.publicToAddress(privateToPublic(privateKey));
};

/**
 * Checks if the address is a valid. Accepts checksummed addresses too
 * @param {String} address
 * @return {Boolean}
 */
exports.isValidAddress = function (address) {
  return (/^0x[0-9a-fA-F]{40}$/.test(address)
  );
};

/**
  * Checks if a given address is a zero address
  * @method isZeroAddress
  * @param {String} address
  * @return {Boolean}
  */
exports.isZeroAddress = function (address) {
  var zeroAddress = exports.zeroAddress();
  return zeroAddress === exports.addHexPrefix(address);
};

/**
 * Returns a checksummed address
 * @param {String} address
 * @return {String}
 */
exports.toChecksumAddress = function (address) {
  address = exports.stripHexPrefix(address).toLowerCase();
  var hash = exports.keccak(address).toString('hex');
  var ret = '0x';

  for (var i = 0; i < address.length; i++) {
    if (parseInt(hash[i], 16) >= 8) {
      ret += address[i].toUpperCase();
    } else {
      ret += address[i];
    }
  }

  return ret;
};

/**
 * Checks if the address is a valid checksummed address
 * @param {Buffer} address
 * @return {Boolean}
 */
exports.isValidChecksumAddress = function (address) {
  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;
};

/**
 * Generates an address of a newly created contract
 * @param {Buffer} from the address which is creating this new address
 * @param {Buffer} nonce the nonce of the from account
 * @return {Buffer}
 */
exports.generateAddress = function (from, nonce) {
  from = exports.toBuffer(from);
  nonce = new BN(nonce);

  if (nonce.isZero()) {
    // in RLP we want to encode null in the case of zero nonce
    // read the RLP documentation for an answer if you dare
    nonce = null;
  } else {
    nonce = Buffer.from(nonce.toArray());
  }

  // Only take the lower 160bits of the hash
  return exports.rlphash([from, nonce]).slice(-20);
};

/**
 * Returns true if the supplied address belongs to a precompiled account (Byzantium)
 * @param {Buffer|String} address
 * @return {Boolean}
 */
exports.isPrecompiled = function (address) {
  var a = exports.unpad(address);
  return a.length === 1 && a[0] >= 1 && a[0] <= 8;
};

/**
 * Adds "0x" to a given `String` if it does not already start with "0x"
 * @param {String} str
 * @return {String}
 */
exports.addHexPrefix = function (str) {
  if (typeof str !== 'string') {
    return str;
  }

  return exports.isHexPrefixed(str) ? str : '0x' + str;
};

/**
 * Validate ECDSA signature
 * @method isValidSignature
 * @param {Buffer} v
 * @param {Buffer} r
 * @param {Buffer} s
 * @param {Boolean} [homestead=true]
 * @return {Boolean}
 */

exports.isValidSignature = function (v, r, s, homestead) {
  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);
  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);

  if (r.length !== 32 || s.length !== 32) {
    return false;
  }

  if (v !== 27 && v !== 28) {
    return false;
  }

  r = new BN(r);
  s = new BN(s);

  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {
    return false;
  }

  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {
    return false;
  }

  return true;
};

/**
 * Converts a `Buffer` or `Array` to JSON
 * @param {Buffer|Array} ba
 * @return {Array|String|null}
 */
exports.baToJSON = function (ba) {
  if (Buffer.isBuffer(ba)) {
    return '0x' + ba.toString('hex');
  } else if (ba instanceof Array) {
    var array = [];
    for (var i = 0; i < ba.length; i++) {
      array.push(exports.baToJSON(ba[i]));
    }
    return array;
  }
};

/**
 * Defines properties on a `Object`. It make the assumption that underlying data is binary.
 * @param {Object} self the `Object` to define properties on
 * @param {Array} fields an array fields to define. Fields can contain:
 * * `name` - the name of the properties
 * * `length` - the number of bytes the field can have
 * * `allowLess` - if the field can be less than the length
 * * `allowEmpty`
 * @param {*} data data to be validated against the definitions
 */
exports.defineProperties = function (self, fields, data) {
  self.raw = [];
  self._fields = [];

  // attach the `toJSON`
  self.toJSON = function (label) {
    if (label) {
      var obj = {};
      self._fields.forEach(function (field) {
        obj[field] = '0x' + self[field].toString('hex');
      });
      return obj;
    }
    return exports.baToJSON(this.raw);
  };

  self.serialize = function serialize() {
    return rlp.encode(self.raw);
  };

  fields.forEach(function (field, i) {
    self._fields.push(field.name);
    function getter() {
      return self.raw[i];
    }
    function setter(v) {
      v = exports.toBuffer(v);

      if (v.toString('hex') === '00' && !field.allowZero) {
        v = Buffer.allocUnsafe(0);
      }

      if (field.allowLess && field.length) {
        v = exports.stripZeros(v);
        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');
      } else if (!(field.allowZero && v.length === 0) && field.length) {
        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);
      }

      self.raw[i] = v;
    }

    Object.defineProperty(self, field.name, {
      enumerable: true,
      configurable: true,
      get: getter,
      set: setter
    });

    if (field.default) {
      self[field.name] = field.default;
    }

    // attach alias
    if (field.alias) {
      Object.defineProperty(self, field.alias, {
        enumerable: false,
        configurable: true,
        set: setter,
        get: getter
      });
    }
  });

  // if the constuctor is passed data
  if (data) {
    if (typeof data === 'string') {
      data = Buffer.from(exports.stripHexPrefix(data), 'hex');
    }

    if (Buffer.isBuffer(data)) {
      data = rlp.decode(data);
    }

    if (Array.isArray(data)) {
      if (data.length > self._fields.length) {
        throw new Error('wrong number of fields in data');
      }

      // make sure all the items are buffers
      data.forEach(function (d, i) {
        self[self._fields[i]] = exports.toBuffer(d);
      });
    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {
      var keys = Object.keys(data);
      fields.forEach(function (field) {
        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];
        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];
      });
    } else {
      throw new Error('invalid data');
    }
  }
};

/***/ }),

/***/ "../../node_modules/ethereumjs-util/dist/secp256k1-adapter.js":
/*!********************************************************************!*\
  !*** ../../node_modules/ethereumjs-util/dist/secp256k1-adapter.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];


var secp256k1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ "../../node_modules/ethereum-cryptography/secp256k1.js");

var secp256k1v3 = __webpack_require__(/*! ./secp256k1-lib/index */ "../../node_modules/ethereumjs-util/dist/secp256k1-lib/index.js");
var der = __webpack_require__(/*! ./secp256k1-lib/der */ "../../node_modules/ethereumjs-util/dist/secp256k1-lib/der.js");

/**
 * Verify an ECDSA privateKey
 * @method privateKeyVerify
 * @param {Buffer} privateKey
 * @return {boolean}
 */
var privateKeyVerify = function privateKeyVerify(privateKey) {
  // secp256k1 v4 version throws when privateKey length is not 32
  if (privateKey.length !== 32) {
    return false;
  }

  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));
};

/**
 * Export a privateKey in DER format
 * @method privateKeyExport
 * @param {Buffer} privateKey
 * @param {boolean} compressed
 * @return {boolean}
 */
var privateKeyExport = function privateKeyExport(privateKey, compressed) {
  // privateKeyExport method is not part of secp256k1 v4 package
  // this implementation is based on v3
  if (privateKey.length !== 32) {
    throw new RangeError('private key length is invalid');
  }

  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);

  return der.privateKeyExport(privateKey, publicKey, compressed);
};

/**
 * Import a privateKey in DER format
 * @method privateKeyImport
 * @param {Buffer} privateKey
 * @return {Buffer}
 */

var privateKeyImport = function privateKeyImport(privateKey) {
  // privateKeyImport method is not part of secp256k1 v4 package
  // this implementation is based on v3
  privateKey = der.privateKeyImport(privateKey);
  if (privateKey !== null && privateKey.length === 32 && privateKeyVerify(privateKey)) {
    return privateKey;
  }

  throw new Error("couldn't import from DER format");
};

/**
 * Negate a privateKey by subtracting it from the order of the curve's base point
 * @method privateKeyNegate
 * @param {Buffer} privateKey
 * @return {Buffer}
 */
var privateKeyNegate = function privateKeyNegate(privateKey) {
  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));
};

/**
 * Compute the inverse of a privateKey (modulo the order of the curve's base point).
 * @method privateKeyModInverse
 * @param {Buffer} privateKey
 * @return {Buffer}
 */
var privateKeyModInverse = function privateKeyModInverse(privateKey) {
  if (privateKey.length !== 32) {
    throw new Error('private key length is invalid');
  }

  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));
};

/**
 * Tweak a privateKey by adding tweak to it.
 * @method privateKeyTweakAdd
 * @param {Buffer} privateKey
 * @param {Buffer} tweak
 * @return {Buffer}
 */
var privateKeyTweakAdd = function privateKeyTweakAdd(privateKey, tweak) {
  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));
};

/**
 * Tweak a privateKey by multiplying it by a tweak.
 * @method privateKeyTweakMul
 * @param {Buffer} privateKey
 * @param {Buffer} tweak
 * @return {Buffer}
 */
var privateKeyTweakMul = function privateKeyTweakMul(privateKey, tweak) {
  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));
};

/**
 * Compute the public key for a privateKey.
 * @method publicKeyCreate
 * @param {Buffer} privateKey
 * @param {boolean} compressed
 * @return {Buffer}
 */
var publicKeyCreate = function publicKeyCreate(privateKey, compressed) {
  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));
};

/**
 * Convert a publicKey to compressed or uncompressed form.
 * @method publicKeyConvert
 * @param {Buffer} publicKey
 * @param {boolean} compressed
 * @return {Buffer}
 */
var publicKeyConvert = function publicKeyConvert(publicKey, compressed) {
  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));
};

/**
 * Verify an ECDSA publicKey.
 * @method publicKeyVerify
 * @param {Buffer} publicKey
 * @return {boolean}
 */
var publicKeyVerify = function publicKeyVerify(publicKey) {
  // secp256k1 v4 version throws when publicKey length is not 33 or 65
  if (publicKey.length !== 33 && publicKey.length !== 65) {
    return false;
  }

  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));
};

/**
 * Tweak a publicKey by adding tweak times the generator to it.
 * @method publicKeyTweakAdd
 * @param {Buffer} publicKey
 * @param {Buffer} tweak
 * @param {boolean} compressed
 * @return {Buffer}
 */
var publicKeyTweakAdd = function publicKeyTweakAdd(publicKey, tweak, compressed) {
  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));
};

/**
 * Tweak a publicKey by multiplying it by a tweak value
 * @method publicKeyTweakMul
 * @param {Buffer} publicKey
 * @param {Buffer} tweak
 * @param {boolean} compressed
 * @return {Buffer}
 */
var publicKeyTweakMul = function publicKeyTweakMul(publicKey, tweak, compressed) {
  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));
};

/**
 * Add a given publicKeys together.
 * @method publicKeyCombine
 * @param {Array<Buffer>} publicKeys
 * @param {boolean} compressed
 * @return {Buffer}
 */
var publicKeyCombine = function publicKeyCombine(publicKeys, compressed) {
  var keys = [];
  publicKeys.forEach(function (publicKey) {
    keys.push(Uint8Array.from(publicKey));
  });

  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));
};

/**
 * Convert a signature to a normalized lower-S form.
 * @method signatureNormalize
 * @param {Buffer} signature
 * @return {Buffer}
 */
var signatureNormalize = function signatureNormalize(signature) {
  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));
};

/**
 * Serialize an ECDSA signature in DER format.
 * @method signatureExport
 * @param {Buffer} signature
 * @return {Buffer}
 */
var signatureExport = function signatureExport(signature) {
  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));
};

/**
 * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).
 * @method signatureImport
 * @param {Buffer} signature
 * @return {Buffer}
 */
var signatureImport = function signatureImport(signature) {
  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));
};

/**
 * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).
 * @method signatureImportLax
 * @param {Buffer} signature
 * @return {Buffer}
 */
var signatureImportLax = function signatureImportLax(signature) {
  // signatureImportLax method is not part of secp256k1 v4 package
  // this implementation is based on v3
  // ensure that signature is greater than 0
  if (signature.length === 0) {
    throw new RangeError('signature length is invalid');
  }

  var sigObj = der.signatureImportLax(signature);
  if (sigObj === null) {
    throw new Error("couldn't parse DER signature");
  }

  return secp256k1v3.signatureImport(sigObj);
};

/**
 * Create an ECDSA signature. Always return low-S signature.
 * @method sign
 * @param {Buffer} message
 * @param {Buffer} privateKey
 * @param {Object} options
 * @return {Buffer}
 */
var sign = function sign(message, privateKey, options) {
  if (options === null) {
    throw new TypeError('options should be an Object');
  }

  var signOptions = void 0;

  if (options) {
    signOptions = {};

    if (options.data === null) {
      throw new TypeError('options.data should be a Buffer');
    }

    if (options.data) {
      // validate option.data length
      if (options.data.length !== 32) {
        throw new RangeError('options.data length is invalid');
      }

      signOptions.data = new Uint8Array(options.data);
    }

    if (options.noncefn === null) {
      throw new TypeError('options.noncefn should be a Function');
    }

    if (options.noncefn) {
      //  convert option.noncefn function signature
      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {
        var bufferAlgo = algo != null ? Buffer.from(algo) : null;
        var bufferData = data != null ? Buffer.from(data) : null;

        var buffer = Buffer.from('');

        if (options.noncefn) {
          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);
        }

        return Uint8Array.from(buffer);
      };
    }
  }

  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);

  return {
    signature: Buffer.from(sig.signature),
    recovery: sig.recid
  };
};

/**
 * Verify an ECDSA signature.
 * @method verify
 * @param {Buffer} message
 * @param {Buffer} signature
 * @param {Buffer} publicKey
 * @return {boolean}
 */
var verify = function verify(message, signature, publicKey) {
  // note: secp256k1 v4 verify method has a different argument order
  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);
};

/**
 * Recover an ECDSA public key from a signature.
 * @method recover
 * @param {Buffer} message
 * @param {Buffer} signature
 * @param {Number} recid
 * @param {boolean} compressed
 * @return {Buffer}
 */
var recover = function recover(message, signature, recid, compressed) {
  // note: secp256k1 v4 recover method has a different argument order
  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));
};

/**
 * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.
 * @method ecdh
 * @param {Buffer} publicKey
 * @param {Buffer} privateKey
 * @return {Buffer}
 */
var ecdh = function ecdh(publicKey, privateKey) {
  // note: secp256k1 v3 doesn't allow optional parameter
  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));
};

/**
 * Compute an EC Diffie-Hellman secret and return public key as result
 * @method ecdhUnsafe
 * @param {Buffer} publicKey
 * @param {Buffer} privateKey
 * @param {boolean} compressed
 * @return {Buffer}
 */
var ecdhUnsafe = function ecdhUnsafe(publicKey, privateKey, compressed) {
  // ecdhUnsafe method is not part of secp256k1 v4 package
  // this implementation is based on v3
  // ensure valid publicKey length
  if (publicKey.length !== 33 && publicKey.length !== 65) {
    throw new RangeError('public key length is invalid');
  }

  // ensure valid privateKey length
  if (privateKey.length !== 32) {
    throw new RangeError('private key length is invalid');
  }

  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));
};

module.exports = {
  privateKeyVerify: privateKeyVerify,
  privateKeyExport: privateKeyExport,
  privateKeyImport: privateKeyImport,
  privateKeyNegate: privateKeyNegate,
  privateKeyModInverse: privateKeyModInverse,
  privateKeyTweakAdd: privateKeyTweakAdd,
  privateKeyTweakMul: privateKeyTweakMul,

  publicKeyCreate: publicKeyCreate,
  publicKeyConvert: publicKeyConvert,
  publicKeyVerify: publicKeyVerify,
  publicKeyTweakAdd: publicKeyTweakAdd,
  publicKeyTweakMul: publicKeyTweakMul,
  publicKeyCombine: publicKeyCombine,

  signatureNormalize: signatureNormalize,
  signatureExport: signatureExport,
  signatureImport: signatureImport,
  signatureImportLax: signatureImportLax,

  sign: sign,
  verify: verify,
  recover: recover,

  ecdh: ecdh,
  ecdhUnsafe: ecdhUnsafe
};

/***/ }),

/***/ "../../node_modules/ethereumjs-util/dist/secp256k1-lib/der.js":
/*!********************************************************************!*\
  !*** ../../node_modules/ethereumjs-util/dist/secp256k1-lib/der.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];


// This file is imported from secp256k1 v3
// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE

var EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([
// begin
0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,
// private key
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
// middle
0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,
// public key
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);

var EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([
// begin
0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,
// private key
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
// middle
0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,
// public key
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);

exports.privateKeyExport = function (privateKey, publicKey, compressed) {
  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);
  privateKey.copy(result, compressed ? 8 : 9);
  publicKey.copy(result, compressed ? 181 : 214);
  return result;
};

exports.privateKeyImport = function (privateKey) {
  var length = privateKey.length;

  // sequence header
  var index = 0;
  if (length < index + 1 || privateKey[index] !== 0x30) return null;
  index += 1;

  // sequence length constructor
  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;

  var lenb = privateKey[index] & 0x7f;
  index += 1;
  if (lenb < 1 || lenb > 2) return null;
  if (length < index + lenb) return null;

  // sequence length
  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);
  index += lenb;
  if (length < index + len) return null;

  // sequence element 0: version number (=1)
  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {
    return null;
  }
  index += 3;

  // sequence element 1: octet string, up to 32 bytes
  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {
    return null;
  }

  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);
};

exports.signatureImportLax = function (signature) {
  var r = Buffer.alloc(32, 0);
  var s = Buffer.alloc(32, 0);

  var length = signature.length;
  var index = 0;

  // sequence tag byte
  if (signature[index++] !== 0x30) {
    return null;
  }

  // sequence length byte
  var lenbyte = signature[index++];
  if (lenbyte & 0x80) {
    index += lenbyte - 0x80;
    if (index > length) {
      return null;
    }
  }

  // sequence tag byte for r
  if (signature[index++] !== 0x02) {
    return null;
  }

  // length for r
  var rlen = signature[index++];
  if (rlen & 0x80) {
    lenbyte = rlen - 0x80;
    if (index + lenbyte > length) {
      return null;
    }
    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}
    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {
      rlen = (rlen << 8) + signature[index];
    }
  }
  if (rlen > length - index) {
    return null;
  }
  var rindex = index;
  index += rlen;

  // sequence tag byte for s
  if (signature[index++] !== 0x02) {
    return null;
  }

  // length for s
  var slen = signature[index++];
  if (slen & 0x80) {
    lenbyte = slen - 0x80;
    if (index + lenbyte > length) {
      return null;
    }
    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}
    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {
      slen = (slen << 8) + signature[index];
    }
  }
  if (slen > length - index) {
    return null;
  }
  var sindex = index;
  index += slen;

  // ignore leading zeros in r
  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {}
  // copy r value
  if (rlen > 32) {
    return null;
  }
  var rvalue = signature.slice(rindex, rindex + rlen);
  rvalue.copy(r, 32 - rvalue.length);

  // ignore leading zeros in s
  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {}
  // copy s value
  if (slen > 32) {
    return null;
  }
  var svalue = signature.slice(sindex, sindex + slen);
  svalue.copy(s, 32 - svalue.length);

  return { r: r, s: s };
};

/***/ }),

/***/ "../../node_modules/ethereumjs-util/dist/secp256k1-lib/index.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/ethereumjs-util/dist/secp256k1-lib/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];


// This file is imported from secp256k1 v3
// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE

var BN = __webpack_require__(/*! bn.js */ "../../node_modules/bn.js/lib/bn.js");
var EC = __webpack_require__(/*! elliptic */ "../../node_modules/elliptic/lib/elliptic.js").ec;

var ec = new EC('secp256k1');
var ecparams = ec.curve;

exports.privateKeyExport = function (privateKey, compressed) {
  var d = new BN(privateKey);
  if (d.ucmp(ecparams.n) >= 0) {
    throw new Error('couldn\'t export to DER format');
  }

  var point = ec.g.mul(d);
  return toPublicKey(point.getX(), point.getY(), compressed);
};

exports.privateKeyModInverse = function (privateKey) {
  var bn = new BN(privateKey);
  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {
    throw new Error('private key range is invalid');
  }

  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);
};

exports.signatureImport = function (sigObj) {
  var r = new BN(sigObj.r);
  if (r.ucmp(ecparams.n) >= 0) {
    r = new BN(0);
  }

  var s = new BN(sigObj.s);
  if (s.ucmp(ecparams.n) >= 0) {
    s = new BN(0);
  }

  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);
};

exports.ecdhUnsafe = function (publicKey, privateKey, compressed) {
  var point = ec.keyFromPublic(publicKey);

  var scalar = new BN(privateKey);
  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {
    throw new Error('scalar was invalid (zero or overflow)');
  }

  var shared = point.pub.mul(scalar);
  return toPublicKey(shared.getX(), shared.getY(), compressed);
};

var toPublicKey = function toPublicKey(x, y, compressed) {
  var publicKey = void 0;

  if (compressed) {
    publicKey = Buffer.alloc(33);
    publicKey[0] = y.isOdd() ? 0x03 : 0x02;
    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);
  } else {
    publicKey = Buffer.alloc(65);
    publicKey[0] = 0x04;
    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);
    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);
  }

  return publicKey;
};

/***/ }),

/***/ "../../node_modules/ethjs-util/lib/index.js":
/*!**************************************************!*\
  !*** ../../node_modules/ethjs-util/lib/index.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];


var isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ "../../node_modules/is-hex-prefixed/src/index.js");
var stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ "../../node_modules/strip-hex-prefix/src/index.js");

/**
 * Pads a `String` to have an even length
 * @param {String} value
 * @return {String} output
 */
function padToEven(value) {
  var a = value; // eslint-disable-line

  if (typeof a !== 'string') {
    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');
  }

  if (a.length % 2) {
    a = '0' + a;
  }

  return a;
}

/**
 * Converts a `Number` into a hex `String`
 * @param {Number} i
 * @return {String}
 */
function intToHex(i) {
  var hex = i.toString(16); // eslint-disable-line

  return '0x' + hex;
}

/**
 * Converts an `Number` to a `Buffer`
 * @param {Number} i
 * @return {Buffer}
 */
function intToBuffer(i) {
  var hex = intToHex(i);

  return new Buffer(padToEven(hex.slice(2)), 'hex');
}

/**
 * Get the binary size of a string
 * @param {String} str
 * @return {Number}
 */
function getBinarySize(str) {
  if (typeof str !== 'string') {
    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \'str\' to be type String, got \'' + typeof str + '\'.');
  }

  return Buffer.byteLength(str, 'utf8');
}

/**
 * Returns TRUE if the first specified array contains all elements
 * from the second one. FALSE otherwise.
 *
 * @param {array} superset
 * @param {array} subset
 *
 * @returns {boolean}
 */
function arrayContainsArray(superset, subset, some) {
  if (Array.isArray(superset) !== true) {
    throw new Error('[ethjs-util] method arrayContainsArray requires input \'superset\' to be an array got type \'' + typeof superset + '\'');
  }
  if (Array.isArray(subset) !== true) {
    throw new Error('[ethjs-util] method arrayContainsArray requires input \'subset\' to be an array got type \'' + typeof subset + '\'');
  }

  return subset[Boolean(some) && 'some' || 'every'](function (value) {
    return superset.indexOf(value) >= 0;
  });
}

/**
 * Should be called to get utf8 from it's hex representation
 *
 * @method toUtf8
 * @param {String} string in hex
 * @returns {String} ascii string representation of hex value
 */
function toUtf8(hex) {
  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');

  return bufferValue.toString('utf8');
}

/**
 * Should be called to get ascii from it's hex representation
 *
 * @method toAscii
 * @param {String} string in hex
 * @returns {String} ascii string representation of hex value
 */
function toAscii(hex) {
  var str = ''; // eslint-disable-line
  var i = 0,
      l = hex.length; // eslint-disable-line

  if (hex.substring(0, 2) === '0x') {
    i = 2;
  }

  for (; i < l; i += 2) {
    var code = parseInt(hex.substr(i, 2), 16);
    str += String.fromCharCode(code);
  }

  return str;
}

/**
 * Should be called to get hex representation (prefixed by 0x) of utf8 string
 *
 * @method fromUtf8
 * @param {String} string
 * @param {Number} optional padding
 * @returns {String} hex representation of input string
 */
function fromUtf8(stringValue) {
  var str = new Buffer(stringValue, 'utf8');

  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');
}

/**
 * Should be called to get hex representation (prefixed by 0x) of ascii string
 *
 * @method fromAscii
 * @param {String} string
 * @param {Number} optional padding
 * @returns {String} hex representation of input string
 */
function fromAscii(stringValue) {
  var hex = ''; // eslint-disable-line
  for (var i = 0; i < stringValue.length; i++) {
    // eslint-disable-line
    var code = stringValue.charCodeAt(i);
    var n = code.toString(16);
    hex += n.length < 2 ? '0' + n : n;
  }

  return '0x' + hex;
}

/**
 * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]
 *
 * @method getKeys get specific key from inner object array of objects
 * @param {String} params
 * @param {String} key
 * @param {Boolean} allowEmpty
 * @returns {Array} output just a simple array of output keys
 */
function getKeys(params, key, allowEmpty) {
  if (!Array.isArray(params)) {
    throw new Error('[ethjs-util] method getKeys expecting type Array as \'params\' input, got \'' + typeof params + '\'');
  }
  if (typeof key !== 'string') {
    throw new Error('[ethjs-util] method getKeys expecting type String for input \'key\' got \'' + typeof key + '\'.');
  }

  var result = []; // eslint-disable-line

  for (var i = 0; i < params.length; i++) {
    // eslint-disable-line
    var value = params[i][key]; // eslint-disable-line
    if (allowEmpty && !value) {
      value = '';
    } else if (typeof value !== 'string') {
      throw new Error('invalid abi');
    }
    result.push(value);
  }

  return result;
}

/**
 * Is the string a hex string.
 *
 * @method check if string is hex string of specific length
 * @param {String} value
 * @param {Number} length
 * @returns {Boolean} output the string is a hex string
 */
function isHexString(value, length) {
  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }

  if (length && value.length !== 2 + 2 * length) {
    return false;
  }

  return true;
}

module.exports = {
  arrayContainsArray: arrayContainsArray,
  intToBuffer: intToBuffer,
  getBinarySize: getBinarySize,
  isHexPrefixed: isHexPrefixed,
  stripHexPrefix: stripHexPrefix,
  padToEven: padToEven,
  intToHex: intToHex,
  fromAscii: fromAscii,
  fromUtf8: fromUtf8,
  toAscii: toAscii,
  toUtf8: toUtf8,
  getKeys: getKeys,
  isHexString: isHexString
};

/***/ }),

/***/ "../../node_modules/is-hex-prefixed/src/index.js":
/*!*******************************************************!*\
  !*** ../../node_modules/is-hex-prefixed/src/index.js ***!
  \*******************************************************/
/***/ (function(module) {

/**
 * Returns a `Boolean` on whether or not the a `String` starts with '0x'
 * @param {String} str the string input value
 * @return {Boolean} a boolean if it is or is not hex prefixed
 * @throws if the str input is not a string
 */
module.exports = function isHexPrefixed(str) {
  if (typeof str !== 'string') {
    throw new Error("[is-hex-prefixed] value must be type 'string', is currently type " + (typeof str) + ", while checking isHexPrefixed.");
  }

  return str.slice(0, 2) === '0x';
}


/***/ }),

/***/ "../../node_modules/rlp/dist/index.js":
/*!********************************************!*\
  !*** ../../node_modules/rlp/dist/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLength = exports.decode = exports.encode = void 0;
var BN = __webpack_require__(/*! bn.js */ "../../node_modules/bn.js/lib/bn.js");
/**
 * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP
 * This function takes in a data, convert it to buffer if not, and a length for recursion
 * @param input - will be converted to buffer
 * @returns returns buffer of encoded data
 **/
function encode(input) {
    if (Array.isArray(input)) {
        var output = [];
        for (var i = 0; i < input.length; i++) {
            output.push(encode(input[i]));
        }
        var buf = Buffer.concat(output);
        return Buffer.concat([encodeLength(buf.length, 192), buf]);
    }
    else {
        var inputBuf = toBuffer(input);
        return inputBuf.length === 1 && inputBuf[0] < 128
            ? inputBuf
            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);
    }
}
exports.encode = encode;
/**
 * Parse integers. Check if there is no leading zeros
 * @param v The value to parse
 * @param base The base to parse the integer into
 */
function safeParseInt(v, base) {
    if (v.slice(0, 2) === '00') {
        throw new Error('invalid RLP: extra zeros');
    }
    return parseInt(v, base);
}
function encodeLength(len, offset) {
    if (len < 56) {
        return Buffer.from([len + offset]);
    }
    else {
        var hexLength = intToHex(len);
        var lLength = hexLength.length / 2;
        var firstByte = intToHex(offset + 55 + lLength);
        return Buffer.from(firstByte + hexLength, 'hex');
    }
}
function decode(input, stream) {
    if (stream === void 0) { stream = false; }
    if (!input || input.length === 0) {
        return Buffer.from([]);
    }
    var inputBuffer = toBuffer(input);
    var decoded = _decode(inputBuffer);
    if (stream) {
        return decoded;
    }
    if (decoded.remainder.length !== 0) {
        throw new Error('invalid remainder');
    }
    return decoded.data;
}
exports.decode = decode;
/**
 * Get the length of the RLP input
 * @param input
 * @returns The length of the input or an empty Buffer if no input
 */
function getLength(input) {
    if (!input || input.length === 0) {
        return Buffer.from([]);
    }
    var inputBuffer = toBuffer(input);
    var firstByte = inputBuffer[0];
    if (firstByte <= 0x7f) {
        return inputBuffer.length;
    }
    else if (firstByte <= 0xb7) {
        return firstByte - 0x7f;
    }
    else if (firstByte <= 0xbf) {
        return firstByte - 0xb6;
    }
    else if (firstByte <= 0xf7) {
        // a list between  0-55 bytes long
        return firstByte - 0xbf;
    }
    else {
        // a list  over 55 bytes long
        var llength = firstByte - 0xf6;
        var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);
        return llength + length;
    }
}
exports.getLength = getLength;
/** Decode an input with RLP */
function _decode(input) {
    var length, llength, data, innerRemainder, d;
    var decoded = [];
    var firstByte = input[0];
    if (firstByte <= 0x7f) {
        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.
        return {
            data: input.slice(0, 1),
            remainder: input.slice(1),
        };
    }
    else if (firstByte <= 0xb7) {
        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string
        // The range of the first byte is [0x80, 0xb7]
        length = firstByte - 0x7f;
        // set 0x80 null to 0
        if (firstByte === 0x80) {
            data = Buffer.from([]);
        }
        else {
            data = input.slice(1, length);
        }
        if (length === 2 && data[0] < 0x80) {
            throw new Error('invalid rlp encoding: byte must be less 0x80');
        }
        return {
            data: data,
            remainder: input.slice(length),
        };
    }
    else if (firstByte <= 0xbf) {
        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),
        // followed by the length, followed by the string
        llength = firstByte - 0xb6;
        if (input.length - 1 < llength) {
            throw new Error('invalid RLP: not enough bytes for string length');
        }
        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);
        if (length <= 55) {
            throw new Error('invalid RLP: expected string length to be greater than 55');
        }
        data = input.slice(llength, length + llength);
        if (data.length < length) {
            throw new Error('invalid RLP: not enough bytes for string');
        }
        return {
            data: data,
            remainder: input.slice(length + llength),
        };
    }
    else if (firstByte <= 0xf7) {
        // a list between  0-55 bytes long
        length = firstByte - 0xbf;
        innerRemainder = input.slice(1, length);
        while (innerRemainder.length) {
            d = _decode(innerRemainder);
            decoded.push(d.data);
            innerRemainder = d.remainder;
        }
        return {
            data: decoded,
            remainder: input.slice(length),
        };
    }
    else {
        // a list  over 55 bytes long
        llength = firstByte - 0xf6;
        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);
        var totalLength = llength + length;
        if (totalLength > input.length) {
            throw new Error('invalid rlp: total length is larger than the data');
        }
        innerRemainder = input.slice(llength, totalLength);
        if (innerRemainder.length === 0) {
            throw new Error('invalid rlp, List has a invalid length');
        }
        while (innerRemainder.length) {
            d = _decode(innerRemainder);
            decoded.push(d.data);
            innerRemainder = d.remainder;
        }
        return {
            data: decoded,
            remainder: input.slice(totalLength),
        };
    }
}
/** Check if a string is prefixed by 0x */
function isHexPrefixed(str) {
    return str.slice(0, 2) === '0x';
}
/** Removes 0x from a given String */
function stripHexPrefix(str) {
    if (typeof str !== 'string') {
        return str;
    }
    return isHexPrefixed(str) ? str.slice(2) : str;
}
/** Transform an integer into its hexadecimal value */
function intToHex(integer) {
    if (integer < 0) {
        throw new Error('Invalid integer as argument, must be unsigned!');
    }
    var hex = integer.toString(16);
    return hex.length % 2 ? "0" + hex : hex;
}
/** Pad a string to be even */
function padToEven(a) {
    return a.length % 2 ? "0" + a : a;
}
/** Transform an integer into a Buffer */
function intToBuffer(integer) {
    var hex = intToHex(integer);
    return Buffer.from(hex, 'hex');
}
/** Transform anything into a Buffer */
function toBuffer(v) {
    if (!Buffer.isBuffer(v)) {
        if (typeof v === 'string') {
            if (isHexPrefixed(v)) {
                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');
            }
            else {
                return Buffer.from(v);
            }
        }
        else if (typeof v === 'number' || typeof v === 'bigint') {
            if (!v) {
                return Buffer.from([]);
            }
            else {
                return intToBuffer(v);
            }
        }
        else if (v === null || v === undefined) {
            return Buffer.from([]);
        }
        else if (v instanceof Uint8Array) {
            return Buffer.from(v);
        }
        else if (BN.isBN(v)) {
            // converts a BN to a Buffer
            return Buffer.from(v.toArray());
        }
        else {
            throw new Error('invalid type');
        }
    }
    return v;
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../../node_modules/strip-hex-prefix/src/index.js":
/*!********************************************************!*\
  !*** ../../node_modules/strip-hex-prefix/src/index.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ "../../node_modules/is-hex-prefixed/src/index.js");

/**
 * Removes '0x' from a given `String` is present
 * @param {String} str the string value
 * @return {String|Optional} a string by pass if necessary
 */
module.exports = function stripHexPrefix(str) {
  if (typeof str !== 'string') {
    return str;
  }

  return isHexPrefixed(str) ? str.slice(2) : str;
}


/***/ }),

/***/ "../../node_modules/use-wallet/dist/_crypto_commonjs-external-1a228943.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/use-wallet/dist/_crypto_commonjs-external-1a228943.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": function() { return /* reexport default export from named module */ buffer__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   "b": function() { return /* reexport default from dynamic */ stream__WEBPACK_IMPORTED_MODULE_1___default.a; },
/* harmony export */   "r": function() { return /* reexport default export from named module */ crypto__WEBPACK_IMPORTED_MODULE_2__; }
/* harmony export */ });
/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stream */ "../../node_modules/stream-browserify/index.js");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ "../../node_modules/crypto-browserify/index.js");

//# sourceMappingURL=_crypto_commonjs-external-1a228943.js.map


/***/ }),

/***/ "../../node_modules/use-wallet/dist/_util_commonjs-external-6c254708.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/use-wallet/dist/_util_commonjs-external-6c254708.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": function() { return /* reexport default export from named module */ string_decoder__WEBPACK_IMPORTED_MODULE_0__; },
/* harmony export */   "b": function() { return /* reexport default from dynamic */ assert__WEBPACK_IMPORTED_MODULE_1___default.a; },
/* harmony export */   "r": function() { return /* reexport default from dynamic */ util__WEBPACK_IMPORTED_MODULE_2___default.a; }
/* harmony export */ });
/* harmony import */ var string_decoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! string_decoder */ "../../node_modules/string_decoder/lib/string_decoder.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! assert */ "../../node_modules/assert/build/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! util */ "../../node_modules/util/util.js");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_2__);

//# sourceMappingURL=_util_commonjs-external-6c254708.js.map


/***/ }),

/***/ "../../node_modules/use-wallet/dist/index-77f376c4.js":
/*!************************************************************!*\
  !*** ../../node_modules/use-wallet/dist/index-77f376c4.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "r": function() { return /* binding */ h; }
/* harmony export */ });
var r,t,n,e,f={'"':'"',"\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"},o=function(t){throw{name:"SyntaxError",message:t,at:r,text:n}},i=function(e){return e&&e!==t&&o("Expected '"+e+"' instead of '"+t+"'"),t=n.charAt(r),r+=1,t},u=function(){var r,n="";for("-"===t&&(n="-",i("-"));t>="0"&&t<="9";)n+=t,i();if("."===t)for(n+=".";i()&&t>="0"&&t<="9";)n+=t;if("e"===t||"E"===t)for(n+=t,i(),"-"!==t&&"+"!==t||(n+=t,i());t>="0"&&t<="9";)n+=t,i();if(r=+n,isFinite(r))return r;o("Bad number")},c=function(){var r,n,e,u="";if('"'===t)for(;i();){if('"'===t)return i(),u;if("\\"===t)if(i(),"u"===t){for(e=0,n=0;n<4&&(r=parseInt(i(),16),isFinite(r));n+=1)e=16*e+r;u+=String.fromCharCode(e)}else{if("string"!=typeof f[t])break;u+=f[t]}else u+=t}o("Bad string")},a=function(){for(;t&&t<=" ";)i()};e=function(){switch(a(),t){case"{":return function(){var r,n={};if("{"===t){if(i("{"),a(),"}"===t)return i("}"),n;for(;t;){if(r=c(),a(),i(":"),Object.hasOwnProperty.call(n,r)&&o('Duplicate key "'+r+'"'),n[r]=e(),a(),"}"===t)return i("}"),n;i(","),a()}}o("Bad object")}();case"[":return function(){var r=[];if("["===t){if(i("["),a(),"]"===t)return i("]"),r;for(;t;){if(r.push(e()),a(),"]"===t)return i("]"),r;i(","),a()}}o("Bad array")}();case'"':return c();case"-":return u();default:return t>="0"&&t<="9"?u():function(){switch(t){case"t":return i("t"),i("r"),i("u"),i("e"),!0;case"f":return i("f"),i("a"),i("l"),i("s"),i("e"),!1;case"n":return i("n"),i("u"),i("l"),i("l"),null}o("Unexpected '"+t+"'")}()}};var s,l,p,y=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,b={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function g(r){return y.lastIndex=0,y.test(r)?'"'+r.replace(y,(function(r){var t=b[r];return"string"==typeof t?t:"\\u"+("0000"+r.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+r+'"'}var v="undefined"!=typeof JSON?JSON:{parse:function(f,i){var u;return n=f,r=0,t=" ",u=e(),a(),t&&o("Syntax error"),"function"==typeof i?function r(t,n){var e,f,o=t[n];if(o&&"object"==typeof o)for(e in o)Object.prototype.hasOwnProperty.call(o,e)&&(void 0!==(f=r(o,e))?o[e]=f:delete o[e]);return i.call(t,n,o)}({"":u},""):u},stringify:function(r,t,n){var e;if(s="",l="","number"==typeof n)for(e=0;e<n;e+=1)l+=" ";else"string"==typeof n&&(l=n);if(p=t,t&&"function"!=typeof t&&("object"!=typeof t||"number"!=typeof t.length))throw new Error("JSON.stringify");return function r(t,n){var e,f,o,i,u,c=s,a=n[t];switch(a&&"object"==typeof a&&"function"==typeof a.toJSON&&(a=a.toJSON(t)),"function"==typeof p&&(a=p.call(n,t,a)),typeof a){case"string":return g(a);case"number":return isFinite(a)?String(a):"null";case"boolean":case"null":return String(a);case"object":if(!a)return"null";if(s+=l,u=[],"[object Array]"===Object.prototype.toString.apply(a)){for(i=a.length,e=0;e<i;e+=1)u[e]=r(e,a)||"null";return o=0===u.length?"[]":s?"[\n"+s+u.join(",\n"+s)+"\n"+c+"]":"["+u.join(",")+"]",s=c,o}if(p&&"object"==typeof p)for(i=p.length,e=0;e<i;e+=1)"string"==typeof(f=p[e])&&(o=r(f,a))&&u.push(g(f)+(s?": ":":")+o);else for(f in a)Object.prototype.hasOwnProperty.call(a,f)&&(o=r(f,a))&&u.push(g(f)+(s?": ":":")+o);return o=0===u.length?"{}":s?"{\n"+s+u.join(",\n"+s)+"\n"+c+"}":"{"+u.join(",")+"}",s=c,o}}("",{"":r})}},h=function(r,t){t||(t={}),"function"==typeof t&&(t={cmp:t});var n=t.space||"";"number"==typeof n&&(n=Array(n+1).join(" "));var e,f="boolean"==typeof t.cycles&&t.cycles,o=t.replacer||function(r,t){return t},i=t.cmp&&(e=t.cmp,function(r){return function(t,n){var f={key:t,value:r[t]},o={key:n,value:r[n]};return e(f,o)}}),u=[];return function r(t,e,c,a){var s=n?"\n"+new Array(a+1).join(n):"",l=n?": ":":";if(c&&c.toJSON&&"function"==typeof c.toJSON&&(c=c.toJSON()),void 0!==(c=o.call(t,e,c))){if("object"!=typeof c||null===c)return v.stringify(c);if(j(c)){for(var p=[],y=0;y<c.length;y++){var b=r(c,y,c[y],a+1)||v.stringify(null);p.push(s+n+b)}return"["+p.join(",")+s+"]"}if(-1!==u.indexOf(c)){if(f)return v.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}u.push(c);var g=O(c).sort(i&&i(c));for(p=[],y=0;y<g.length;y++){var h=r(c,e=g[y],c[e],a+1);if(h){var d=v.stringify(e)+l+h;p.push(s+n+d)}}return u.splice(u.indexOf(c),1),"{"+p.join(",")+s+"}"}}({"":r},"",r,0)},j=Array.isArray||function(r){return"[object Array]"==={}.toString.call(r)},O=Object.keys||function(r){var t=Object.prototype.hasOwnProperty||function(){return!0},n=[];for(var e in r)t.call(r,e)&&n.push(e);return n};
//# sourceMappingURL=index-77f376c4.js.map


/***/ }),

/***/ "../../node_modules/use-wallet/dist/index-b6b58529.js":
/*!************************************************************!*\
  !*** ../../node_modules/use-wallet/dist/index-b6b58529.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index-d3bd4678.js */ "../../node_modules/use-wallet/dist/index-d3bd4678.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aragon_provided_connector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aragon/provided-connector */ "../../node_modules/@aragon/provided-connector/dist/provided-connector.esm.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events */ "../../node_modules/events/events.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js");
/* harmony import */ var _subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./subscriptionManager-0493518a.js */ "../../node_modules/use-wallet/dist/subscriptionManager-0493518a.js");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! stream */ "../../node_modules/stream-browserify/index.js");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var string_decoder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! string_decoder */ "../../node_modules/string_decoder/lib/string_decoder.js");
/* harmony import */ var _util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./_util_commonjs-external-6c254708.js */ "../../node_modules/use-wallet/dist/_util_commonjs-external-6c254708.js");
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! crypto */ "../../node_modules/crypto-browserify/index.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! assert */ "../../node_modules/assert/build/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! util */ "../../node_modules/util/util.js");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _index_77f376c4_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./index-77f376c4.js */ "../../node_modules/use-wallet/dist/index-77f376c4.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];
/* provided dependency */ var process = __webpack_require__(/*! process */ "../../node_modules/process/browser.js");
const y=_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_9__.r.EventEmitter,w=_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_10__.r.inherits;var b=_;function _(){y.call(this),this.isLocked=!0}w(_,y),_.prototype.go=function(){this.isLocked=!1,this.emit("unlock")},_.prototype.stop=function(){this.isLocked=!0,this.emit("lock")},_.prototype.await=function(e){const t=this;t.isLocked?t.once("unlock",e):setTimeout(e)};var k=function(e){var t=E(e);if(t>=e.params.length)return null;return e.params[t]};function E(e){switch(e.method){case"eth_getStorageAt":return 2;case"eth_getBalance":case"eth_getCode":case"eth_getTransactionCount":case"eth_call":case"eth_estimateGas":return 1;case"eth_getBlockByNumber":return 0;default:return}}var T=function(){var e=(new Date).getTime()*Math.pow(10,3),t=Math.floor(Math.random()*Math.pow(10,3));return e+t};var P=function(e){return (0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.e)({id:T(),jsonrpc:"2.0",params:[]},e)};const R=_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_9__.r.EventEmitter,x=_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_10__.r.inherits,C=function(){};var S=B;function B(e){R.call(this),this.setMaxListeners(30),e=e||{};const t={sendAsync:this._handleAsync.bind(this)},n=e.blockTrackerProvider||t;this._blockTracker=e.blockTracker||new _subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.E({provider:n,pollingInterval:e.pollingInterval||4e3,setSkipCacheFlag:!0}),this._ready=new b,this.currentBlock=null,this._providers=[]}x(B,R),Object.defineProperty(B,"name",{value:"HttpProvider"}),B.prototype.start=function(e=C){const t=this;t._ready.go(),t._blockTracker.on("latest",e=>{t._getBlockByNumber(e,(e,n)=>{if(e)return void this.emit("error",e);if(!n)return;const r=(o=n,{number:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.number),hash:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.hash),parentHash:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.parentHash),nonce:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.nonce),mixHash:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.mixHash),sha3Uncles:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.sha3Uncles),logsBloom:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.logsBloom),transactionsRoot:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.transactionsRoot),stateRoot:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.stateRoot),receiptsRoot:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.receiptRoot||o.receiptsRoot),miner:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.miner),difficulty:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.difficulty),totalDifficulty:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.totalDifficulty),size:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.size),extraData:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.extraData),gasLimit:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.gasLimit),gasUsed:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.gasUsed),timestamp:_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.toBuffer(o.timestamp),transactions:o.transactions});var o;t._setCurrentBlock(r),t.emit("rawBlock",n),t.emit("latest",n)})}),t._blockTracker.on("sync",t.emit.bind(t,"sync")),t._blockTracker.on("error",t.emit.bind(t,"error")),t._running=!0,t.emit("start")},B.prototype.stop=function(){this._blockTracker.removeAllListeners(),this._running=!1,this.emit("stop")},B.prototype.isRunning=function(){return this._running},B.prototype.addProvider=function(e,t){const n=this;"number"==typeof t?n._providers.splice(t,0,e):n._providers.push(e),e.setEngine(this)},B.prototype.removeProvider=function(e){const t=this._providers.indexOf(e);if(t<0)throw new Error("Provider not found.");this._providers.splice(t,1)},B.prototype.send=function(e){throw new Error("Web3ProviderEngine does not support synchronous requests.")},B.prototype.sendAsync=function(e,t){const n=this;n._ready.await((function(){Array.isArray(e)?(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.m)(e,n._handleAsync.bind(n),t):n._handleAsync(e,t)}))},B.prototype._getBlockByNumber=function(e,t){const n=P({method:"eth_getBlockByNumber",params:[e,!1],skipCache:!0});this._handleAsync(n,(e,n)=>e?t(e):t(null,n.result))},B.prototype._handleAsync=function(e,t){var n=this,r=-1,o=null,i=null,a=[];function s(n,r){i=n,o=r,(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.b)(a,(function(e,t){e?e(i,o,t):t()}),(function(){var n={id:e.id,jsonrpc:e.jsonrpc,result:o};null!=i?(n.error={message:i.stack||i.message||i,code:-32e3},t(i,n)):t(null,n)}))}!function t(o){if(r+=1,a.unshift(o),r>=n._providers.length)s(new Error('Request for method "'+e.method+'" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'));else try{n._providers[r].handleRequest(e,t,s)}catch(e){s(e)}}()},B.prototype._setCurrentBlock=function(e){this.currentBlock=e,this.emit("block",e)};var N=A;function A(){}A.prototype.setEngine=function(e){const t=this;t.engine||(t.engine=e,e.on("block",(function(e){t.currentBlock=e})),e.on("start",(function(){t.start()})),e.on("stop",(function(){t.stop()})))},A.prototype.handleRequest=function(e,t,n){throw new Error("Subproviders should override `handleRequest`.")},A.prototype.emitPayload=function(e,t){this.engine.sendAsync(P(e),t)},A.prototype.stop=function(){},A.prototype.start=function(){};var I=class extends N{constructor(e){if(super(),!e)throw new Error("JsonRpcEngineMiddlewareSubprovider - no constructorFn specified");this._constructorFn=e}setEngine(e){if(this.middleware)throw new Error("JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice");const t=e._blockTracker,n=this._constructorFn({engine:e,provider:e,blockTracker:t});if(!n)throw new Error("JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware");if("function"!=typeof n)throw new Error("JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function");this.middleware=n}handleRequest(e,t,n){const r={id:e.id};this.middleware(e,r,(function(e){t((t,n,o)=>{t?(delete r.result,r.error={message:t.message||t}):r.result=n,e?e(o):o()})}),(function(e){if(e)return n(e);n(null,r.result)}))}},D={cacheIdentifierForPayload:function(e,t){const n=t?L(e):e.params;return O(e)?e.method+":"+(0,_index_77f376c4_js__WEBPACK_IMPORTED_MODULE_12__.r)(n):null},canCache:O,blockTagForPayload:function(e){let t=M(e);if(t>=e.params.length)return null;return e.params[t]},paramsWithoutBlockTag:L,blockTagParamIndex:M,cacheTypeForPayload:G};function O(e){return"never"!==G(e)}function L(e){const t=M(e);return t>=e.params.length?e.params:"eth_getBlockByNumber"===e.method?e.params.slice(1):e.params.slice(0,t)}function M(e){switch(e.method){case"eth_getStorageAt":return 2;case"eth_getBalance":case"eth_getCode":case"eth_getTransactionCount":case"eth_call":return 1;case"eth_getBlockByNumber":return 0;default:return}}function G(e){switch(e.method){case"web3_clientVersion":case"web3_sha3":case"eth_protocolVersion":case"eth_getBlockTransactionCountByHash":case"eth_getUncleCountByBlockHash":case"eth_getCode":case"eth_getBlockByHash":case"eth_getTransactionByHash":case"eth_getTransactionByBlockHashAndIndex":case"eth_getTransactionReceipt":case"eth_getUncleByBlockHashAndIndex":case"eth_getCompilers":case"eth_compileLLL":case"eth_compileSolidity":case"eth_compileSerpent":case"shh_version":case"test_permaCache":return"perma";case"eth_getBlockByNumber":case"eth_getBlockTransactionCountByNumber":case"eth_getUncleCountByBlockNumber":case"eth_getTransactionByBlockNumberAndIndex":case"eth_getUncleByBlockNumberAndIndex":case"test_forkCache":return"fork";case"eth_gasPrice":case"eth_blockNumber":case"eth_getBalance":case"eth_getStorageAt":case"eth_getTransactionCount":case"eth_call":case"eth_estimateGas":case"eth_getFilterLogs":case"eth_getLogs":case"test_blockCache":return"block";case"net_version":case"net_peerCount":case"net_listening":case"eth_syncing":case"eth_sign":case"eth_coinbase":case"eth_mining":case"eth_hashrate":case"eth_accounts":case"eth_sendTransaction":case"eth_sendRawTransaction":case"eth_newFilter":case"eth_newBlockFilter":case"eth_newPendingTransactionFilter":case"eth_uninstallFilter":case"eth_getFilterChanges":case"eth_getWork":case"eth_submitWork":case"eth_submitHashrate":case"db_putString":case"db_getString":case"db_putHex":case"db_getHex":case"shh_post":case"shh_newIdentity":case"shh_hasIdentity":case"shh_newGroup":case"shh_addToGroup":case"shh_newFilter":case"shh_uninstallFilter":case"shh_getFilterChanges":case"shh_getMessages":case"test_neverCache":return"never"}}const F=[void 0,null,"<nil>"];var U=function(e={}){const{blockTracker:t}=e;if(!t)throw new Error("createBlockCacheMiddleware - No BlockTracker specified");const n=new q,r={perma:n,block:n,fork:n};return (0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.j)(async(e,o,i)=>{if(e.skipCache)return i();const a=D.cacheTypeForPayload(e),s=r[a];if(!s)return i();if(!s.canCacheRequest(e))return i();let c,u=D.blockTagForPayload(e);if(u||(u="latest"),"earliest"===u)c="0x00";else if("latest"===u){const e=await t.getLatestBlock();n.clearBefore(e),c=e}else c=u;const d=await s.get(e,c);void 0===d?(await i(),await s.set(e,c,o.result)):o.result=d})};class q{constructor(){this.cache={}}getBlockCacheForPayload(e,t){const n=Number.parseInt(t,16);let r=this.cache[n];if(!r){const e={};this.cache[n]=e,r=e}return r}async get(e,t){const n=this.getBlockCacheForPayload(e,t);if(n)return n[D.cacheIdentifierForPayload(e,!0)]}async set(e,t,n){this.canCacheResult(e,n)&&(this.getBlockCacheForPayload(e,t)[D.cacheIdentifierForPayload(e,!0)]=n)}canCacheRequest(e){if(!D.canCache(e))return!1;return"pending"!==D.blockTagForPayload(e)}canCacheResult(e,t){if(!F.includes(t))return!!(!["eth_getTransactionByHash","eth_getTransactionReceipt"].includes(e.method)||t&&t.blockHash&&"0x0000000000000000000000000000000000000000000000000000000000000000"!==t.blockHash)}clearBefore(e){const t=this,n=Number.parseInt(e,16);Object.keys(t.cache).map(Number).filter(e=>e<n).forEach(e=>delete t.cache[e])}}var j=class extends I{constructor(e){super(({blockTracker:t})=>U(Object.assign({blockTracker:t},e)))}};const H=_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_10__.r.inherits;var V=W;function W(e){e=e||{},this.staticResponses=e}H(W,N),W.prototype.handleRequest=function(e,t,n){var r=this.staticResponses[e.method];"function"==typeof r?r(e,t,n):void 0!==r?setTimeout(()=>n(null,r)):t()};var z=class extends I{constructor(){super(({blockTracker:e,provider:t,engine:n})=>(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.d)({blockTracker:e,provider:t}))}},J=function(e,t,n){e.sendAsync(P({method:"eth_estimateGas",params:[t]}),(function(e,t){if(e)return"no contract code at given address"===e.message?n(null,"0xcf08"):n(e);n(null,t.result)}))};const K=_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_10__.r.inherits,$=/^[0-9A-Fa-f]+$/g;var Z=X;function X(e){this.nonceLock=(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.S)(1),e.getAccounts&&(this.getAccounts=e.getAccounts),e.processTransaction&&(this.processTransaction=e.processTransaction),e.processMessage&&(this.processMessage=e.processMessage),e.processPersonalMessage&&(this.processPersonalMessage=e.processPersonalMessage),e.processTypedMessage&&(this.processTypedMessage=e.processTypedMessage),e.processTypedMessageV3&&(this.processTypedMessageV3=e.processTypedMessageV3),this.approveTransaction=e.approveTransaction||this.autoApprove,this.approveMessage=e.approveMessage||this.autoApprove,this.approvePersonalMessage=e.approvePersonalMessage||this.autoApprove,this.approveTypedMessage=e.approveTypedMessage||this.autoApprove,this.approveTypedMessageV3=e.approveTypedMessageV3||this.autoApprove,e.signTransaction&&(this.signTransaction=e.signTransaction||ne("signTransaction")),e.signMessage&&(this.signMessage=e.signMessage||ne("signMessage")),e.signPersonalMessage&&(this.signPersonalMessage=e.signPersonalMessage||ne("signPersonalMessage")),e.signTypedMessage&&(this.signTypedMessage=e.signTypedMessage||ne("signTypedMessage")),e.signTypedMessageV3&&(this.signTypedMessageV3=e.signTypedMessageV3||ne("signTypedMessageV3")),e.recoverPersonalSignature&&(this.recoverPersonalSignature=e.recoverPersonalSignature),e.publishTransaction&&(this.publishTransaction=e.publishTransaction),this.estimateGas=e.estimateGas||this.estimateGas,this.getGasPrice=e.getGasPrice||this.getGasPrice}function Y(e){return e.toLowerCase()}function Q(e){const t=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.addHexPrefix(e);return _subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.isValidAddress(t)}function ee(e){const t=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.addHexPrefix(e);return!_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.isValidAddress(t)&&te(e)}function te(e){return"string"==typeof e&&("0x"===e.slice(0,2)&&e.slice(2).match($))}function ne(e){return function(t,n){n(new Error('ProviderEngine - HookedWalletSubprovider - Must provide "'+e+'" fn in constructor options'))}}K(X,N),X.prototype.handleRequest=function(e,t,n){const r=this;let i,a,s,c,u;switch(r._parityRequests={},r._parityRequestCount=0,e.method){case"eth_coinbase":return void r.getAccounts((function(e,t){if(e)return n(e);let r=t[0]||null;n(null,r)}));case"eth_accounts":return void r.getAccounts((function(e,t){if(e)return n(e);n(null,t)}));case"eth_sendTransaction":return i=e.params[0],void (0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([e=>r.validateTransaction(i,e),e=>r.processTransaction(i,e)],n);case"eth_signTransaction":return i=e.params[0],void (0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([e=>r.validateTransaction(i,e),e=>r.processSignTransaction(i,e)],n);case"eth_sign":return ee(e.params[1])&&Q(e.params[0])?(u=e.params[0],c=e.params[1]):(c=e.params[0],u=e.params[1]),s=e.params[2]||{},a=(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.e)(s,{from:u,data:c}),void (0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([e=>r.validateMessage(a,e),e=>r.processMessage(a,e)],n);case"personal_sign":return function(){const t=e.params[0];if(ee(e.params[1])&&Q(t)){let t="The eth_personalSign method requires params ordered ";t+="[message, address]. This was previously handled incorrectly, ",t+="and has been corrected automatically. ",t+="Please switch this param order for smooth behavior in the future.",console.warn(t),u=e.params[0],c=e.params[1]}else c=e.params[0],u=e.params[1];s=e.params[2]||{},a=(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.e)(s,{from:u,data:c}),(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([e=>r.validatePersonalMessage(a,e),e=>r.processPersonalMessage(a,e)],n)}();case"personal_ecRecover":return function(){c=e.params[0];let t=e.params[1];s=e.params[2]||{},a=(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.e)(s,{sig:t,data:c}),r.recoverPersonalSignature(a,n)}();case"eth_signTypedData":return!Q(e.params[1])&&Q(e.params[0])?(u=e.params[0],c=e.params[1]):(c=e.params[0],u=e.params[1]),s=e.params[2]||{},a=(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.e)(s,{from:u,data:c}),void (0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([e=>r.validateTypedMessage(a,e),e=>r.processTypedMessage(a,e)],n);case"eth_signTypedData_v3":return!Q(e.params[1])&&Q(e.params[0])?(u=e.params[0],c=e.params[1]):(c=e.params[0],u=e.params[1]),s=e.params[2]||{},a=(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.e)(s,{from:u,data:c}),void (0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([e=>r.validateTypedMessageV3(a,e),e=>r.processTypedMessageV3(a,e)],n);case"parity_postTransaction":return i=e.params[0],void r.parityPostTransaction(i,n);case"parity_postSign":return u=e.params[0],c=e.params[1],void r.parityPostSign(u,c,n);case"parity_checkRequest":return function(){const t=e.params[0];r.parityCheckRequest(t,n)}();case"parity_defaultAccount":return void r.getAccounts((function(e,t){if(e)return n(e);const r=t[0]||null;n(null,r)}));default:return void t()}},X.prototype.getAccounts=function(e){e(null,[])},X.prototype.processTransaction=function(e,t){const n=this;(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([t=>n.approveTransaction(e,t),(e,t)=>n.checkApproval("transaction",e,t),t=>n.finalizeAndSubmitTx(e,t)],t)},X.prototype.processSignTransaction=function(e,t){const n=this;(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([t=>n.approveTransaction(e,t),(e,t)=>n.checkApproval("transaction",e,t),t=>n.finalizeTx(e,t)],t)},X.prototype.processMessage=function(e,t){const n=this;(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([t=>n.approveMessage(e,t),(e,t)=>n.checkApproval("message",e,t),t=>n.signMessage(e,t)],t)},X.prototype.processPersonalMessage=function(e,t){const n=this;(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([t=>n.approvePersonalMessage(e,t),(e,t)=>n.checkApproval("message",e,t),t=>n.signPersonalMessage(e,t)],t)},X.prototype.processTypedMessage=function(e,t){const n=this;(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([t=>n.approveTypedMessage(e,t),(e,t)=>n.checkApproval("message",e,t),t=>n.signTypedMessage(e,t)],t)},X.prototype.processTypedMessageV3=function(e,t){const n=this;(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([t=>n.approveTypedMessageV3(e,t),(e,t)=>n.checkApproval("message",e,t),t=>n.signTypedMessageV3(e,t)],t)},X.prototype.autoApprove=function(e,t){t(null,!0)},X.prototype.checkApproval=function(e,t,n){n(t?null:new Error("User denied "+e+" signature."))},X.prototype.parityPostTransaction=function(e,t){const n=this,r=`0x${n._parityRequestCount.toString(16)}`;n._parityRequestCount++,n.emitPayload({method:"eth_sendTransaction",params:[e]},(function(e,t){if(e)return void(n._parityRequests[r]={error:e});const o=t.result;n._parityRequests[r]=o})),t(null,r)},X.prototype.parityPostSign=function(e,t,n){const r=this,o=`0x${r._parityRequestCount.toString(16)}`;r._parityRequestCount++,r.emitPayload({method:"eth_sign",params:[e,t]},(function(e,t){if(e)return void(r._parityRequests[o]={error:e});const n=t.result;r._parityRequests[o]=n})),n(null,o)},X.prototype.parityCheckRequest=function(e,t){const n=this._parityRequests[e]||null;return n?n.error?t(n.error):void t(null,n):t(null,null)},X.prototype.recoverPersonalSignature=function(e,t){let n;try{n=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.s.recoverPersonalSignature(e)}catch(e){return t(e)}t(null,n)},X.prototype.validateTransaction=function(e,t){if(void 0===e.from)return t(new Error("Undefined address - from address required to sign transaction."));this.validateSender(e.from,(function(n,r){return n?t(n):r?void t():t(new Error(`Unknown address - unable to sign transaction for this address: "${e.from}"`))}))},X.prototype.validateMessage=function(e,t){if(void 0===e.from)return t(new Error("Undefined address - from address required to sign message."));this.validateSender(e.from,(function(n,r){return n?t(n):r?void t():t(new Error(`Unknown address - unable to sign message for this address: "${e.from}"`))}))},X.prototype.validatePersonalMessage=function(e,t){return void 0===e.from?t(new Error("Undefined address - from address required to sign personal message.")):void 0===e.data?t(new Error("Undefined message - message required to sign personal message.")):te(e.data)?void this.validateSender(e.from,(function(n,r){return n?t(n):r?void t():t(new Error(`Unknown address - unable to sign message for this address: "${e.from}"`))})):t(new Error("HookedWalletSubprovider - validateMessage - message was not encoded as hex."))},X.prototype.validateTypedMessage=function(e,t){return void 0===e.from?t(new Error("Undefined address - from address required to sign typed data.")):void 0===e.data?t(new Error("Undefined data - message required to sign typed data.")):void this.validateSender(e.from,(function(n,r){return n?t(n):r?void t():t(new Error(`Unknown address - unable to sign message for this address: "${e.from}"`))}))},X.prototype.validateTypedMessageV3=function(e,t){return void 0===e.from?t(new Error("Undefined address - from address required to sign typed data.")):void 0===e.data?t(new Error("Undefined data - message required to sign typed data.")):void this.validateSender(e.from,(function(n,r){return n?t(n):r?void t():t(new Error(`Unknown address - unable to sign message for this address: "${e.from}"`))}))},X.prototype.validateSender=function(e,t){if(!e)return t(null,!1);this.getAccounts((function(n,r){if(n)return t(n);const o=-1!==r.map(Y).indexOf(e.toLowerCase());t(null,o)}))},X.prototype.finalizeAndSubmitTx=function(e,t){const n=this;n.nonceLock.take((function(){(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([n.fillInTxExtras.bind(n,e),n.signTransaction.bind(n),n.publishTransaction.bind(n)],(function(e,r){if(n.nonceLock.leave(),e)return t(e);t(null,r)}))}))},X.prototype.finalizeTx=function(e,t){const n=this;n.nonceLock.take((function(){(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.w)([n.fillInTxExtras.bind(n,e),n.signTransaction.bind(n)],(function(r,o){if(n.nonceLock.leave(),r)return t(r);t(null,{raw:o,tx:e})}))}))},X.prototype.publishTransaction=function(e,t){this.emitPayload({method:"eth_sendRawTransaction",params:[e]},(function(e,n){if(e)return t(e);t(null,n.result)}))},X.prototype.estimateGas=function(e,t){J(this.engine,e,t)},X.prototype.getGasPrice=function(e){this.emitPayload({method:"eth_gasPrice",params:[]},(function(t,n){if(t)return e(t);e(null,n.result)}))},X.prototype.fillInTxExtras=function(e,t){const n=this,r=e.from,i={};void 0===e.gasPrice&&(i.gasPrice=n.getGasPrice.bind(n)),void 0===e.nonce&&(i.nonce=n.emitPayload.bind(n,{method:"eth_getTransactionCount",params:[r,"pending"]})),void 0===e.gas&&(i.gas=n.estimateGas.bind(n,function(e){return{from:e.from,to:e.to,value:e.value,data:e.data,gas:e.gas,gasPrice:e.gasPrice,nonce:e.nonce}}(e))),(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.p)(i,(function(n,r){if(n)return t(n);const i={};r.gasPrice&&(i.gasPrice=r.gasPrice),r.nonce&&(i.nonce=r.nonce.result),r.gas&&(i.gas=r.gas),t(null,(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.e)(e,i))}))};var re={v:5e3,d:"Gas limit of the Genesis block."},oe={v:17179869184,d:"Difficulty of the Genesis block."},ie={v:"0x0000000000000042",d:"the geneis nonce"},ae={v:"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa",d:"extra data "},se={v:"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",d:"genesis hash"},ce={v:"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544",d:"the genesis state root"},ue={v:5e3,d:"Minimum the gas limit may ever be."},de={v:1024,d:"The bound divisor of the gas limit, used in update calculations."},le={v:131072,d:"The minimum that the difficulty may ever be."},he={v:2048,d:"The bound divisor of the difficulty, used in the update calculations."},fe={v:13,d:"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not."},pe={v:32,d:"Maximum size extra data may be after Genesis."},ge={v:3e4,d:"Duration between proof-of-work epochs."},me={v:1024,d:"Maximum size of VM stack allowed."},ve={v:1024,d:"Maximum depth of call/create stack."},ye={v:[0,2,3,5,8,10,20],d:"Once per operation, for a selection of them."},we={v:10,d:"Once per EXP instuction."},be={v:10,d:"Times ceil(log256(exponent)) for the EXP instruction."},_e={v:30,d:"Once per SHA3 operation."},ke={v:6,d:"Once per word of the SHA3 operation's data."},Ee={v:50,d:"Once per SLOAD operation."},Te={v:2e4,d:"Once per SSTORE operation if the zeroness changes from zero."},Pe={v:5e3,d:"Once per SSTORE operation if the zeroness does not change from zero."},Re={v:15e3,d:"Once per SSTORE operation if the zeroness changes to zero."},xe={v:1,d:"Refunded gas, once per SSTORE operation if the zeroness changes to zero."},Ce={v:375,d:"Per LOG* operation."},Se={v:8,d:"Per byte in a LOG* operation's data."},Be={v:375,d:"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas."},Ne={v:32e3,d:"Once per CREATE operation & contract-creation transaction."},Ae={v:40,d:"Once per CALL operation & message call transaction."},Ie={v:2300,d:"Free gas given at beginning of call."},De={v:9e3,d:"Paid for CALL when the value transfor is non-zero."},Oe={v:25e3,d:"Paid for CALL when the destination address didn't exist prior."},Le={v:24e3,d:"Refunded following a suicide operation."},Me={v:3,d:"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL."},Ge={v:512,d:"Divisor for the quadratic particle of the memory cost equation."},Fe={v:200,d:""},Ue={v:21e3,d:"Per transaction. NOTE: Not payable on data of calls between transactions."},qe={v:32e3,d:"the cost of creating a contract via tx"},je={v:4,d:"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions."},He={v:68,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions."},Ve={v:3,d:"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added."},We={v:3e3,d:""},ze={v:60,d:""},Je={v:12,d:""},Ke={v:600,d:""},$e={v:120,d:""},Ze={v:15,d:""},Xe={v:3,d:""},Ye={v:"5000000000000000000",d:"the amount a miner get rewarded for mining a block"},Qe={v:"625000000000000000",d:"The amount of wei a miner of an uncle block gets for being inculded in the blockchain"},et={v:"156250000000000000",d:"the amount a miner gets for inculding a uncle"},tt={v:115e4,d:"the block that the Homestead fork started at"},nt={v:2463e3,d:"the block that the Homestead Reprice (EIP150) fork started at"},rt={v:1e5,d:"Exponential difficulty timebomb period"},ot={v:2},it={genesisGasLimit:re,genesisDifficulty:oe,genesisNonce:ie,genesisExtraData:ae,genesisHash:se,genesisStateRoot:ce,minGasLimit:ue,gasLimitBoundDivisor:de,minimumDifficulty:le,difficultyBoundDivisor:he,durationLimit:fe,maximumExtraDataSize:pe,epochDuration:ge,stackLimit:me,callCreateDepth:ve,tierStepGas:ye,expGas:we,expByteGas:be,sha3Gas:_e,sha3WordGas:ke,sloadGas:Ee,sstoreSetGas:Te,sstoreResetGas:Pe,sstoreRefundGas:Re,jumpdestGas:xe,logGas:Ce,logDataGas:Se,logTopicGas:Be,createGas:Ne,callGas:Ae,callStipend:Ie,callValueTransferGas:De,callNewAccountGas:Oe,suicideRefundGas:Le,memoryGas:Me,quadCoeffDiv:Ge,createDataGas:Fe,txGas:Ue,txCreation:qe,txDataZeroGas:je,txDataNonZeroGas:He,copyGas:Ve,ecrecoverGas:We,sha256Gas:ze,sha256WordGas:Je,ripemd160Gas:Ke,ripemd160WordGas:$e,identityGas:Ze,identityWordGas:Xe,minerReward:Ye,ommerReward:Qe,niblingReward:et,homeSteadForkNumber:tt,homesteadRepriceForkNumber:nt,timebombPeriod:rt,freeBlockPeriod:ot},at=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_9__.h)(Object.freeze({__proto__:null,genesisGasLimit:re,genesisDifficulty:oe,genesisNonce:ie,genesisExtraData:ae,genesisHash:se,genesisStateRoot:ce,minGasLimit:ue,gasLimitBoundDivisor:de,minimumDifficulty:le,difficultyBoundDivisor:he,durationLimit:fe,maximumExtraDataSize:pe,epochDuration:ge,stackLimit:me,callCreateDepth:ve,tierStepGas:ye,expGas:we,expByteGas:be,sha3Gas:_e,sha3WordGas:ke,sloadGas:Ee,sstoreSetGas:Te,sstoreResetGas:Pe,sstoreRefundGas:Re,jumpdestGas:xe,logGas:Ce,logDataGas:Se,logTopicGas:Be,createGas:Ne,callGas:Ae,callStipend:Ie,callValueTransferGas:De,callNewAccountGas:Oe,suicideRefundGas:Le,memoryGas:Me,quadCoeffDiv:Ge,createDataGas:Fe,txGas:Ue,txCreation:qe,txDataZeroGas:je,txDataNonZeroGas:He,copyGas:Ve,ecrecoverGas:We,sha256Gas:ze,sha256WordGas:Je,ripemd160Gas:Ke,ripemd160WordGas:$e,identityGas:Ze,identityWordGas:Xe,minerReward:Ye,ommerReward:Qe,niblingReward:et,homeSteadForkNumber:tt,homesteadRepriceForkNumber:nt,timebombPeriod:rt,freeBlockPeriod:ot,default:it}));var st=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.BN,ct=new st("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),ut=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),t=t||{};var n=[{name:"nonce",length:32,allowLess:!0,default:new Buffer([])},{name:"gasPrice",length:32,allowLess:!0,default:new Buffer([])},{name:"gasLimit",alias:"gas",length:32,allowLess:!0,default:new Buffer([])},{name:"to",allowZero:!0,length:20,default:new Buffer([])},{name:"value",length:32,allowLess:!0,default:new Buffer([])},{name:"data",alias:"input",allowZero:!0,default:new Buffer([])},{name:"v",allowZero:!0,default:new Buffer([28])},{name:"r",length:32,allowZero:!0,allowLess:!0,default:new Buffer([])},{name:"s",length:32,allowZero:!0,allowLess:!0,default:new Buffer([])}];_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.defineProperties(this,n,t),Object.defineProperty(this,"from",{enumerable:!0,configurable:!0,get:this.getSenderAddress.bind(this)});var r=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.bufferToInt(this.v),o=Math.floor((r-35)/2);o<0&&(o=0),this._chainId=o||t.chainId||0,this._homestead=!0}return e.prototype.toCreationAddress=function(){return""===this.to.toString("hex")},e.prototype.hash=function(e){void 0===e&&(e=!0);var t=void 0;if(e)t=this.raw;else if(this._chainId>0){var n=this.raw.slice();this.v=this._chainId,this.r=0,this.s=0,t=this.raw,this.raw=n}else t=this.raw.slice(0,6);return _subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.rlphash(t)},e.prototype.getChainId=function(){return this._chainId},e.prototype.getSenderAddress=function(){if(this._from)return this._from;var e=this.getSenderPublicKey();return this._from=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.publicToAddress(e),this._from},e.prototype.getSenderPublicKey=function(){if(!(this._senderPubKey&&this._senderPubKey.length||this.verifySignature()))throw new Error("Invalid Signature");return this._senderPubKey},e.prototype.verifySignature=function(){var e=this.hash(!1);if(this._homestead&&1===new st(this.s).cmp(ct))return!1;try{var t=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.bufferToInt(this.v);this._chainId>0&&(t-=2*this._chainId+8),this._senderPubKey=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.ecrecover(e,t,this.r,this.s)}catch(e){return!1}return!!this._senderPubKey},e.prototype.sign=function(e){var t=this.hash(!1),n=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.ecsign(t,e);this._chainId>0&&(n.v+=2*this._chainId+8),Object.assign(this,n)},e.prototype.getDataFee=function(){for(var e=this.raw[5],t=new st(0),n=0;n<e.length;n++)0===e[n]?t.iaddn(at.txDataZeroGas.v):t.iaddn(at.txDataNonZeroGas.v);return t},e.prototype.getBaseFee=function(){var e=this.getDataFee().iaddn(at.txGas.v);return this._homestead&&this.toCreationAddress()&&e.iaddn(at.txCreation.v),e},e.prototype.getUpfrontCost=function(){return new st(this.gasLimit).imul(new st(this.gasPrice)).iadd(new st(this.value))},e.prototype.validate=function(e){var t=[];return this.verifySignature()||t.push("Invalid Signature"),this.getBaseFee().cmp(new st(this.gasLimit))>0&&t.push(["gas limit is too low. Need at least "+this.getBaseFee()]),void 0===e||!1===e?0===t.length:t.join(" ")},e}();const dt=_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_10__.r.inherits,lt=k;var ht=ft;function ft(e){this.nonceCache={}}dt(ft,N),ft.prototype.handleRequest=function(e,t,n){const r=this;switch(e.method){case"eth_getTransactionCount":var o=lt(e),i=e.params[0].toLowerCase(),s=r.nonceCache[i];return void("pending"===o?s?n(null,s):t((function(e,t,n){if(e)return n();void 0===r.nonceCache[i]&&(r.nonceCache[i]=t),n()})):t());case"eth_sendRawTransaction":return void t((function(t,n,o){if(t)return o();var i=e.params[0],s=(_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.stripHexPrefix(i),Buffer.from(_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.stripHexPrefix(i),"hex"),new ut(Buffer.from(_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.stripHexPrefix(i),"hex"))),c="0x"+s.getSenderAddress().toString("hex").toLowerCase(),u=_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.a.bufferToInt(s.nonce),d=(++u).toString(16);d.length%2&&(d="0"+d),d="0x"+d,r.nonceCache[c]=d,o()}));case"evm_revert":return r.nonceCache={},void t();default:return void t()}};var pt=class extends I{constructor(){super(({blockTracker:e,provider:t,engine:n})=>{const{events:r,middleware:o}=(0,_subscriptionManager_0493518a_js__WEBPACK_IMPORTED_MODULE_11__.c)({blockTracker:e,provider:t});return r.on("notification",e=>n.emit("data",null,e)),o})}},gt=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_9__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.ERR_NOT_IN_IFRAME=t.ERR_CONNECTION_TIMEOUT=t.ERR_CONNECTION_DESTROYED=void 0;var n="message";t.ERR_CONNECTION_DESTROYED="ConnectionDestroyed";t.ERR_CONNECTION_TIMEOUT="ConnectionTimeout";t.ERR_NOT_IN_IFRAME="NotInIframe";var r,o={"http:":"80","https:":"443"},i=/^(https?:)?\/\/([^/:]+)(:(\d+))?/,a={ERR_CONNECTION_DESTROYED:"ConnectionDestroyed",ERR_CONNECTION_TIMEOUT:"ConnectionTimeout",ERR_NOT_IN_IFRAME:"NotInIframe",Promise:function(){try{return window?window.Promise:null}catch(e){return null}}(),debug:!1},s=(r=0,function(){return++r}),c=function(){if(a.debug){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];(e=console).log.apply(e,["[Penpal]"].concat(n))}},u=function(e){var t=[];return e((function(){t.forEach((function(e){e()}))})),{then:function(e){t.push(e)}}},d=function(e){return{name:e.name,message:e.message,stack:e.stack}},l=function(e){var t=new Error;return Object.keys(e).forEach((function(n){return t[n]=e[n]})),t},h=function(e,t,r,o){var i=t.localName,u=t.local,d=t.remote,h=t.remoteOrigin,f=!1;c("".concat(i,": Connecting call sender"));o.then((function(){f=!0})),r.reduce((function(e,t){return e[t]=function(e){return function(){for(var t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];if(c("".concat(i,": Sending ").concat(e,"() call")),f){var p=new Error("Unable to send ".concat(e,"() call due ")+"to destroyed connection");throw p.code="ConnectionDestroyed",p}return new a.Promise((function(t,o){var a=s();u.addEventListener(n,(function r(s){if(s.source===d&&s.origin===h&&"reply"===s.data.penpal&&s.data.id===a){c("".concat(i,": Received ").concat(e,"() reply")),u.removeEventListener(n,r);var f=s.data.returnValue;s.data.returnValueIsError&&(f=l(f)),("fulfilled"===s.data.resolution?t:o)(f)}})),d.postMessage({penpal:"call",id:a,methodName:e,args:r},h)}))}}(t),e}),e)},f=function(e,t,r){var o=e.localName,i=e.local,s=e.remote,u=e.remoteOrigin,l=!1;c("".concat(o,": Connecting call receiver"));var h=function(e){if(e.source===s&&e.origin===u&&"call"===e.data.penpal){var n=e.data,r=n.methodName,i=n.args,h=n.id;if(c("".concat(o,": Received ").concat(r,"() call")),r in t){var f=function(e){return function(t){if(c("".concat(o,": Sending ").concat(r,"() reply")),l)c("".concat(o,": Unable to send ").concat(r,"() reply due to destroyed connection"));else{var n={penpal:"reply",id:h,resolution:e,returnValue:t};"rejected"===e&&t instanceof Error&&(n.returnValue=d(t),n.returnValueIsError=!0);try{s.postMessage(n,u)}catch(e){throw"DataCloneError"===e.name&&s.postMessage({penpal:"reply",id:h,resolution:"rejected",returnValue:d(e),returnValueIsError:!0},u),e}}}};new a.Promise((function(e){return e(t[r].apply(t,i))})).then(f("fulfilled"),f("rejected"))}}};i.addEventListener(n,h),r.then((function(){l=!0,i.removeEventListener(n,h)}))};a.connectToChild=function(e){var t,r=e.url,s=e.appendTo,d=e.methods,l=void 0===d?{}:d,p=e.timeout,g=new u((function(e){t=e})),m=window,v=document.createElement("iframe");(s||document.body).appendChild(v),g.then((function(){v.parentNode&&v.parentNode.removeChild(v)}));var y=v.contentWindow||v.contentDocument.parentWindow,w=function(e){var t,n,r,a=document.location,s=i.exec(e);s?(t=s[1]?s[1]:a.protocol,n=s[2],r=s[4]):(t=a.protocol,n=a.hostname,r=a.port);var c=r&&r!==o[t]?":".concat(r):"";return"".concat(t,"//").concat(n).concat(c)}(r);return{promise:new a.Promise((function(e,o){var i;void 0!==p&&(i=setTimeout((function(){var e=new Error("Connection to child timed out after ".concat(p,"ms"));e.code="ConnectionTimeout",o(e),t()}),p));var a,s,d={},b=function(t){if(t.source===y&&t.origin===w&&"handshake"===t.data.penpal){c("Parent: Received handshake, sending reply"),t.source.postMessage({penpal:"handshake-reply",methodNames:Object.keys(l)},t.origin);var n={localName:"Parent",local:m,remote:y,remoteOrigin:t.origin};s&&s();var r=new u((function(e){g.then(e),s=e}));f(n,l,r),a&&a.forEach((function(e){delete d[e]})),a=t.data.methodNames,h(d,n,a,g),clearTimeout(i),e(d)}};m.addEventListener(n,b),g.then((function(){m.removeEventListener(n,b);var e=new Error("Connection destroyed");e.code="ConnectionDestroyed",o(e)})),c("Parent: Loading iframe"),v.src=r})),iframe:v,destroy:t}},a.connectToParent=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.parentOrigin,o=void 0===r?"*":r,i=t.methods,s=void 0===i?{}:i,d=t.timeout;if(window===window.top){var l=new Error("connectToParent() must be called within an iframe");throw l.code="NotInIframe",l}var p=new u((function(t){e=t})),g=window,m=g.parent,v=new a.Promise((function(t,r){var i;void 0!==d&&(i=setTimeout((function(){var t=new Error("Connection to parent timed out after ".concat(d,"ms"));t.code="ConnectionTimeout",r(t),e()}),d));var a=function e(r){if(("*"===o||o===r.origin)&&r.source===m&&"handshake-reply"===r.data.penpal){c("Child: Received handshake reply"),g.removeEventListener(n,e);var a={localName:"Child",local:g,remote:m,remoteOrigin:r.origin},u={};f(a,s,p),h(u,a,r.data.methodNames,p),clearTimeout(i),t(u)}};g.addEventListener(n,a),p.then((function(){g.removeEventListener(n,a);var e=new Error("Connection destroyed");e.code="ConnectionDestroyed",r(e)})),c("Child: Sending handshake"),m.postMessage({penpal:"handshake",methodNames:Object.keys(s)},o)}));return{promise:v,destroy:e}};var p=a;t.default=p})),mt=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_9__.e)(gt);gt.ERR_NOT_IN_IFRAME,gt.ERR_CONNECTION_TIMEOUT,gt.ERR_CONNECTION_DESTROYED;function vt(e,t){var n="string"==typeof e?Object.assign({},yt[e]):e;if("object"!=typeof n)throw new Error("[Portis] illegal 'network' parameter. Read more about it here: https://docs.portis.io/#/configuration?id=network");if(!n.nodeUrl)throw new Error("[Portis] 'nodeUrl' is required. Read more about it here: https://docs.portis.io/#/configuration?id=network");if(t&&!n.gasRelayHubAddress)throw new Error("[Portis] can't find default gas relay hub for "+e);return"string"!=typeof e||t||delete n.gasRelayHubAddress,n}var yt={mainnet:{nodeUrl:"https://mainnet.infura.io/v3/faa4639b090f46499f29d894da0551a0",chainId:"1",gasRelayHubAddress:"0xD216153c06E857cD7f72665E0aF1d7D82172F494"},ropsten:{nodeUrl:"https://ropsten.infura.io/v3/faa4639b090f46499f29d894da0551a0",chainId:"3",gasRelayHubAddress:"0xD216153c06E857cD7f72665E0aF1d7D82172F494"},rinkeby:{nodeUrl:"https://rinkeby.infura.io/v3/faa4639b090f46499f29d894da0551a0",chainId:"4",gasRelayHubAddress:"0xD216153c06E857cD7f72665E0aF1d7D82172F494"},goerli:{nodeUrl:"https://goerli.prylabs.net",chainId:"5"},ubiq:{nodeUrl:"https://rpc1.ubiqscan.io",chainId:"8"},thundercoreTestnet:{nodeUrl:"https://testnet-rpc.thundercore.com:8544",chainId:"18"},orchid:{nodeUrl:"https://public-node.rsk.co",chainId:"30"},orchidTestnet:{nodeUrl:"https://public-node.testnet.rsk.co",chainId:"31"},kovan:{nodeUrl:"https://kovan.infura.io/v3/faa4639b090f46499f29d894da0551a0",chainId:"42",gasRelayHubAddress:"0xD216153c06E857cD7f72665E0aF1d7D82172F494"},classic:{nodeUrl:"https://ethereumclassic.network",chainId:"61"},sokol:{nodeUrl:"https://sokol.poa.network",chainId:"77"},core:{nodeUrl:"https://core.poa.network",chainId:"99"},xdai:{nodeUrl:"https://dai.poa.network",chainId:"100",gasRelayHubAddress:"0xD216153c06E857cD7f72665E0aF1d7D82172F494"},thundercore:{nodeUrl:"https://mainnet-rpc.thundercore.com",chainId:"108"},fuse:{nodeUrl:"https://rpc.fusenet.io",chainId:"122"},lightstreams:{nodeUrl:"https://node.mainnet.lightstreams.io",chainId:"163"},maticAlpha:{nodeUrl:"https://alpha.ethereum.matic.network",chainId:"4626"},maticTestnet:{nodeUrl:"https://testnet2.matic.network",chainId:"8995"}},wt=window&&window.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){e.done?o(e.value):new n((function(t){t(e.value)})).then(a,s)}c((r=r.apply(e,t||[])).next())}))},bt=window&&window.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},_t=__webpack_require__(/*! ethereumjs-util */ "../../node_modules/ethereumjs-util/dist/index.js"),kt=_t.addHexPrefix,Et=_t.stripHexPrefix,Tt=_t.BN;function Pt(e,t){return wt(this,void 0,void 0,(function(){var n,r,o,i,a;return bt(this,(function(s){switch(s.label){case 0:return[4,e.getBlockByNumber("latest",!1)];case 1:return n=s.sent(),[4,Rt(e,t,n.gasLimit)];case 2:if(r=s.sent(),o=r.safeGas,i=r.simpleSend,a=r.gasLimitSpecified,i||a)return[2,o];s.label=3;case 3:return s.trys.push([3,5,,6]),[4,xt(e,t,n.gasLimit,o)];case 4:return[2,s.sent()];case 5:return s.sent(),[2,o];case 6:return[2]}}))}))}function Rt(e,t,n){return wt(this,void 0,void 0,(function(){var r,o,i;return bt(this,(function(a){switch(a.label){case 0:return Boolean(t.gas)?[2,{safeGas:t.gas,simpleSend:!1,gasLimitSpecified:!0}]:(r=t.to,Boolean(r)?[4,e.getCode(r)]:[3,2]);case 1:if(o=a.sent(),!o||"0x"===o||"0x0"===o){if(t.data)throw new Error("Trying to call a function on a non-contract address");return[2,{safeGas:"0x5208",simpleSend:!0,gasLimitSpecified:!1}]}a.label=2;case 2:return i=St(n),s=i,c=20,u=new Tt(19),d=new Tt(c),[2,{safeGas:Bt(s.mul(u).div(d)),simpleSend:!1,gasLimitSpecified:!1}]}var s,c,u,d}))}))}function xt(e,t,n,r){return wt(this,void 0,void 0,(function(){var o;return bt(this,(function(i){switch(i.label){case 0:return t.gas=r,o=kt,[4,e.estimateGas(t)];case 1:return[2,Ct(o.apply(void 0,[i.sent()]),n)]}}))}))}function Ct(e,t){var n=St(e),r=St(t).muln(.9),o=n.muln(1.5);return n.gt(r)?Bt(n):o.lt(r)?Bt(o):Bt(r)}function St(e){return new Tt(Et(e),16)}function Bt(e){return kt(e.toString(16))}var Nt=function(){function e(e){this.provider=e}return e.prototype.getBlockByNumber=function(e,t){return this.sendAsync("eth_getBlockByNumber",e,t)},e.prototype.getCode=function(e,t){return void 0===t&&(t="latest"),this.sendAsync("eth_getCode",e,t)},e.prototype.estimateGas=function(e){return this.sendAsync("eth_estimateGas",e)},e.prototype.sendAsync=function(e){for(var t=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return new Promise((function(r,o){t.provider.sendAsync({id:42,jsonrpc:"2.0",method:e,params:n},(function(e,t){e?o(e):r(t.result)}))}))},e}(),At=!1;function It(){return new Promise((function(e){At?e():["loaded","interactive","complete"].indexOf(document.readyState)>-1?(At=!0,e()):window.addEventListener("load",(function(){At=!0,e()}),!1)}))}var Dt={Blockchain:class{constructor(e,t){this.name=e,this.netID=t}toJSON(){return JSON.parse('{ "name":"'+this.name+'", "netID":"'+this.netID+'"}')}}},Ot=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}},Lt=Object.prototype.toString;function Mt(e){return"[object Array]"===Lt.call(e)}function Gt(e){return null!==e&&"object"==typeof e}function Ft(e){return"[object Function]"===Lt.call(e)}function Ut(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),Mt(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}var qt={isArray:Mt,isArrayBuffer:function(e){return"[object ArrayBuffer]"===Lt.call(e)},isBuffer:function(e){return null!=e&&null!=e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:Gt,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===Lt.call(e)},isFile:function(e){return"[object File]"===Lt.call(e)},isBlob:function(e){return"[object Blob]"===Lt.call(e)},isFunction:Ft,isStream:function(e){return Gt(e)&&Ft(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:Ut,merge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]=n}for(var r=0,o=arguments.length;r<o;r++)Ut(arguments[r],n);return t},extend:function(e,t,n){return Ut(t,(function(t,r){e[r]=n&&"function"==typeof t?Ot(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}},jt=function(e,t,n,r,o){return function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e}(new Error(e),t,n,r,o)};function Ht(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var Vt=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],Wt=qt.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function r(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=r(window.location.href),function(t){var n=qt.isString(t)?r(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0},zt=qt.isStandardBrowserEnv()?{write:function(e,t,n,r,o,i){var a=[];a.push(e+"="+encodeURIComponent(t)),qt.isNumber(n)&&a.push("expires="+new Date(n).toGMTString()),qt.isString(r)&&a.push("path="+r),qt.isString(o)&&a.push("domain="+o),!0===i&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},Jt=function(e){return new Promise((function(t,n){var r=e.data,o=e.headers;qt.isFormData(r)&&delete o["Content-Type"];var i=new XMLHttpRequest;if(e.auth){var a=e.auth.username||"",s=e.auth.password||"";o.Authorization="Basic "+btoa(a+":"+s)}if(i.open(e.method.toUpperCase(),function(e,t,n){if(!t)return e;var r;if(n)r=n(t);else if(qt.isURLSearchParams(t))r=t.toString();else{var o=[];qt.forEach(t,(function(e,t){null!=e&&(qt.isArray(e)?t+="[]":e=[e],qt.forEach(e,(function(e){qt.isDate(e)?e=e.toISOString():qt.isObject(e)&&(e=JSON.stringify(e)),o.push(Ht(t)+"="+Ht(e))})))})),r=o.join("&")}return r&&(e+=(-1===e.indexOf("?")?"?":"&")+r),e}(e.url,e.params,e.paramsSerializer),!0),i.timeout=e.timeout,i.onreadystatechange=function(){if(i&&4===i.readyState&&(0!==i.status||i.responseURL&&0===i.responseURL.indexOf("file:"))){var r,o,a,s,c,u="getAllResponseHeaders"in i?(r=i.getAllResponseHeaders(),c={},r?(qt.forEach(r.split("\n"),(function(e){if(s=e.indexOf(":"),o=qt.trim(e.substr(0,s)).toLowerCase(),a=qt.trim(e.substr(s+1)),o){if(c[o]&&Vt.indexOf(o)>=0)return;c[o]="set-cookie"===o?(c[o]?c[o]:[]).concat([a]):c[o]?c[o]+", "+a:a}})),c):c):null,d={data:e.responseType&&"text"!==e.responseType?i.response:i.responseText,status:i.status,statusText:i.statusText,headers:u,config:e,request:i};!function(e,t,n){var r=n.config.validateStatus;n.status&&r&&!r(n.status)?t(jt("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}(t,n,d),i=null}},i.onerror=function(){n(jt("Network Error",e,null,i)),i=null},i.ontimeout=function(){n(jt("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",i)),i=null},qt.isStandardBrowserEnv()){var c=zt,u=(e.withCredentials||Wt(e.url))&&e.xsrfCookieName?c.read(e.xsrfCookieName):void 0;u&&(o[e.xsrfHeaderName]=u)}if("setRequestHeader"in i&&qt.forEach(o,(function(e,t){void 0===r&&"content-type"===t.toLowerCase()?delete o[t]:i.setRequestHeader(t,e)})),e.withCredentials&&(i.withCredentials=!0),e.responseType)try{i.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&i.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&i.upload&&i.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){i&&(i.abort(),n(e),i=null)})),void 0===r&&(r=null),i.send(r)}))},Kt={"Content-Type":"application/x-www-form-urlencoded"};function $t(e,t){!qt.isUndefined(e)&&qt.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var Zt,Xt={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process)&&(Zt=Jt),Zt),transformRequest:[function(e,t){return function(e,t){qt.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}(t,"Content-Type"),qt.isFormData(e)||qt.isArrayBuffer(e)||qt.isBuffer(e)||qt.isStream(e)||qt.isFile(e)||qt.isBlob(e)?e:qt.isArrayBufferView(e)?e.buffer:qt.isURLSearchParams(e)?($t(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):qt.isObject(e)?($t(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};Xt.headers={common:{Accept:"application/json, text/plain, */*"}},qt.forEach(["delete","get","head"],(function(e){Xt.headers[e]={}})),qt.forEach(["post","put","patch"],(function(e){Xt.headers[e]=qt.merge(Kt)}));var Yt=Xt;function Qt(){this.handlers=[]}Qt.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},Qt.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},Qt.prototype.forEach=function(e){qt.forEach(this.handlers,(function(t){null!==t&&e(t)}))};var en=Qt,tn=function(e,t,n){return qt.forEach(n,(function(n){e=n(e,t)})),e},nn=function(e){return!(!e||!e.__CANCEL__)};function rn(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var on=function(e){var t,n,r;return rn(e),e.baseURL&&(r=e.url,!/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(r))&&(e.url=(t=e.baseURL,(n=e.url)?t.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):t)),e.headers=e.headers||{},e.data=tn(e.data,e.headers,e.transformRequest),e.headers=qt.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),qt.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||Yt.adapter)(e).then((function(t){return rn(e),t.data=tn(t.data,t.headers,e.transformResponse),t}),(function(t){return nn(t)||(rn(e),t&&t.response&&(t.response.data=tn(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))};function an(e){this.defaults=e,this.interceptors={request:new en,response:new en}}an.prototype.request=function(e){"string"==typeof e&&(e=qt.merge({url:arguments[0]},arguments[1])),(e=qt.merge(Yt,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var t=[on,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},qt.forEach(["delete","get","head","options"],(function(e){an.prototype[e]=function(t,n){return this.request(qt.merge(n||{},{method:e,url:t}))}})),qt.forEach(["post","put","patch"],(function(e){an.prototype[e]=function(t,n,r){return this.request(qt.merge(r||{},{method:e,url:t,data:n}))}}));var sn=an;function cn(e){this.message=e}cn.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},cn.prototype.__CANCEL__=!0;var un=cn;function dn(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new un(e),t(n.reason))}))}dn.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},dn.source=function(){var e;return{token:new dn((function(t){e=t})),cancel:e}};var ln=dn;function hn(e){var t=new sn(e),n=Ot(sn.prototype.request,t);return qt.extend(n,sn.prototype,t),qt.extend(n,t),n}var fn=hn(Yt);fn.Axios=sn,fn.create=function(e){return hn(qt.merge(Yt,e))},fn.Cancel=un,fn.CancelToken=ln,fn.isCancel=nn,fn.all=function(e){return Promise.all(e)},fn.spread=function(e){return function(t){return e.apply(null,t)}};var pn=fn,gn=fn;pn.default=gn;var mn=pn;var vn="https://dispatch.pokt.network",yn="/v1/dispatch",wn="/v1/report",bn="/v1/relay/";var _n={Node:class{constructor(e,t,n){this.network=e,this.netID=t;var r=n.split(":");this.ip=r[0],this.port=r[1],n.includes("https://")||n.includes("http://")?this.ipPort=n:"443"===this.port||443===this.port?this.ipPort="https://"+n:this.ipPort="http://"+n}isValid(){for(var e in this)if(!this.hasOwnProperty(e)||""==this[e])return!1;return!0}isEqual(e,t){return this.netID==e.toString()&&this.network==t.toString()}async sendRelay(e,t){try{const o=mn.create({baseURL:this.ipPort,timeout:e.configuration.requestTimeOut,headers:{"Content-Type":"application/json"}});var n=await o.post(bn,e.toJSON());if(200==n.status&&null!=n.data){var r=n.data;return t?void t(r,null):r}return t?void t(null,new Error("Failed to send relay with error: "+n.data)):new Error("Failed to send relay with error: "+n.data)}catch(e){return t?void t(null,new Error("Failed to send relay with error: "+e)):new Error("Failed to send relay with error: "+e)}}}};const kn=_n.Node;var En={Dispatch:class{constructor(e){this.configuration=e,this.axiosInstance=mn.create({baseURL:vn,path:yn,timeout:this.configuration.requestTimeOut,headers:{"Content-Type":"application/json"}})}blockchainsJSON(){var e=[];return this.configuration.blockchains.forEach(t=>{e.push(t)}),e}async retrieveServiceNodes(e){try{var t;if(null!=(t=await this.axiosInstance.post(yn,{DevID:this.configuration.devID,Blockchains:this.blockchainsJSON()}))&&200==t.status&&null!=t.data){var n=this.parseDispatchResponse(t.data);return e?void e(n,null):n}return e?void e(null,new Error("Failed to retrieve service nodes with error: "+t.data)):new Error("Failed to retrieve service nodes with error: "+t.data)}catch(t){return e?void e(null,new Error("Failed to retrieve service nodes with error: "+t)):new Error("Failed to retrieve service nodes with error: "+t)}}parseDispatchResponse(e){try{var t=[];if(Array.isArray(e))e.forEach(e=>{var n=e.name,r=e.netid;e.ips&&e.ips.forEach(e=>{var o=new kn(n,r,e);t.push(o)})});else{var n=e.name,r=e.netid;e.ips&&e.ips.forEach(e=>{var o=new kn(n,r,e);t.push(o)})}return t}catch(e){return new Error("Failed to parsed service nodes with error: "+e)}}}};var Tn={Relay:class{constructor(e,t,n,r){this.blockchain=e,this.netID=t,this.data=n,this.configuration=r}toJSON(){return{Blockchain:this.blockchain,NetID:this.netID,Data:this.data,DevID:this.configuration.devID}}isValid(){for(var e in this)if(!this.hasOwnProperty(e)||""==this[e])return!1;return!0}}};var Pn={Report:class{constructor(e,t,n){this.ip=e,this.message=t,this.configuration=n}toJSON(){return{IP:this.ip,Message:this.message}}isValid(){for(var e in this)if(!this.hasOwnProperty(e)||""==this[e])return!1;return!0}async send(e){const t=mn.create({baseURL:vn,timeout:this.configuration.requestTimeOut,headers:{"Content-Type":"application/json"}});var n=await t.post(wn,this.toJSON());return 200==n.status&&null!=n.data?e?void e(null,n.data):n.data:e?void e(new Error("Failed to send report with error: "+n.data)):new Error("Failed to send report with error: "+n.data)}}};var Rn={Wallet:class{constructor(e,t,n,r,o){this.address=e,this.privateKey=t,this.network=n,this.networkID=r,this.data=o}}},xn=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_9__.d)((function(e){e.exports=Object.assign(e.exports,Dt,En,_n,Tn,Pn,Rn)}));const Cn=xn.Blockchain,Sn=xn.Dispatch,Bn=xn.Relay,Nn=xn.Report;class An{constructor(e,t,n,r){this.devID=e,this.blockchains=t,this.maxNodes=n||5,this.nodes=[],this.requestTimeOut=r||1e4,this.dispatch=null}nodesIsEmpty(){return null==this.nodes||0==this.nodes.length}}var In={Pocket:class{constructor(e){var t=[];if(null==e.devID||null==e.networkName||null==e.netIDs)return new Error("Invalid number of arguments");if(Array.isArray(e.netIDs))e.netIDs.forEach(n=>{var r=new Cn(e.networkName,n);t.push(r.toJSON())});else{var n=new Cn(e.networkName,e.netIDs);t.push(n.toJSON())}this.configuration=new An(e.devID,t,e.maxNodes||5,e.requestTimeOut||1e4)}createRelay(e,t,n){return new Bn(e,t,"string"==typeof n?n:JSON.stringify(n),this.configuration)}createReport(e,t){return new Nn(e,t,this.configuration)}getDispatch(){return null==this.dispatch&&(this.dispatch=new Sn(this.configuration)),this.dispatch}async getNode(e,t){try{var n=[];if(this.configuration.nodesIsEmpty()){var r=await this.retrieveNodes();if(r instanceof Error==1)throw r;this.configuration.nodes=r}return this.configuration.nodes.forEach(r=>{r.isEqual(e,t)&&n.push(r)}),n.length<=0?null:n[Math.floor(Math.random()*n.length)]}catch(e){return null}}async sendReport(e,t){try{if(null==e)throw new Error("Report is null");if(!e.isValid())throw new Error("One or more Report properties are empty.");var n=await e.send();return n instanceof Error==0?t?void t(null,n):n:t?void t(n):n}catch(e){return t?void t(e):e}}async sendRelay(e,t){try{if(null==e||null==e.data)return t?void t(new Error("Relay is null or data field is missing")):new Error("Relay is null or data field is missing");if(!e.isValid())return t?void t(new Error("Relay is missing a property, please verify all properties.")):new Error("Relay is missing a property, please verify all properties.");var n=await this.getNode(e.netID,e.blockchain);if(null==n)return t?void t(new Error("Node is empty.")):new Error("Node is empty.");var r=await n.sendRelay(e);return r instanceof Error==0?t?void t(null,r):r:t?void t(r):r}catch(e){return t?void t(new Error("Failed to send relay with error: "+e)):new Error("Failed to send relay with error: "+e)}}async retrieveNodes(e){try{var t=this.getDispatch(),n=await t.retrieveServiceNodes();return n instanceof Error==0&&0!=n.length?(this.configuration.nodes=n,e?void e(null,n):n):e?void e(new Error("Failed to retrieve a list of nodes."),null):new Error("Failed to retrieve a list of nodes.")}catch(t){return e?void e(new Error("Failed to retrieve a list of nodes with error: "+t),null):new Error("Failed to retrieve a list of nodes with error: "+t)}}},Wallet:xn.Wallet,Relay:xn.Relay},Dn=window&&window.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){e.done?o(e.value):new n((function(t){t(e.value)})).then(a,s)}c((r=r.apply(e,t||[])).next())}))},On=window&&window.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},Ln=["email","reputation"],Mn=document.createElement("iframe");Mn.style.width="0",Mn.style.height="0",Mn.style.border="none",Mn.style.position="absolute",Mn.style.top="-999px",Mn.style.left="-999px",Mn.src="https://widget.portis.io",It().then((function(){document.body.appendChild(Mn)}));var Gn=function(){function e(e,t,n){void 0===n&&(n={}),this._widgetUrl="https://widget.portis.io",function(){var e="localhost"===location.hostname||"127.0.0.1"===location.hostname,t="https:"===location.protocol;if(!(e||t))throw"[Portis] Access to the WebCrypto API is restricted to secure origins.\nIf this is a development environment please use http://localhost:"+location.port+" instead.\nOtherwise, please use an SSL certificate."}(),this._valiadateParams(e,t,n),this.config={dappId:e,network:vt(t,n.gasRelay),version:"2.0.0-beta.54",scope:n.scope,registerPageByDefault:n.registerPageByDefault},this.widget=this._initWidget(),this.provider=this._initProvider(n)}return e.prototype.changeNetwork=function(e,t){var n=vt(e,t);this.clearSubprovider(ht),this.clearSubprovider(j),this.config.network=n},e.prototype.setDefaultEmail=function(e){this.config.defaultEmail=e},e.prototype.showPortis=function(){return Dn(this,void 0,void 0,(function(){return On(this,(function(e){switch(e.label){case 0:return[4,this.widget];case 1:return[2,e.sent().communication.showPortis(this.config)]}}))}))},e.prototype.logout=function(){return Dn(this,void 0,void 0,(function(){return On(this,(function(e){switch(e.label){case 0:return[4,this.widget];case 1:return[2,e.sent().communication.logout()]}}))}))},e.prototype.onLogin=function(e){this._onLoginCallback=e},e.prototype.onLogout=function(e){this._onLogoutCallback=e},e.prototype.onActiveWalletChanged=function(e){this._onActiveWalletChangedCallback=e},e.prototype.onError=function(e){this._onErrorCallback=e},e.prototype.getExtendedPublicKey=function(e,t){return void 0===e&&(e="m/44'/60'/0'/0/0"),void 0===t&&(t="Ethereum"),Dn(this,void 0,void 0,(function(){return On(this,(function(n){switch(n.label){case 0:return[4,this.widget];case 1:return[2,n.sent().communication.getExtendedPublicKey(e,t,this.config)]}}))}))},e.prototype.importWallet=function(e){return Dn(this,void 0,void 0,(function(){return On(this,(function(t){switch(t.label){case 0:return[4,this.widget];case 1:return[2,t.sent().communication.importWallet(e,this.config)]}}))}))},e.prototype.isLoggedIn=function(){return Dn(this,void 0,void 0,(function(){return On(this,(function(e){switch(e.label){case 0:return[4,this.widget];case 1:return[2,e.sent().communication.isLoggedIn()]}}))}))},e.prototype.signBitcoinTransaction=function(e){return Dn(this,void 0,void 0,(function(){return On(this,(function(t){switch(t.label){case 0:return[4,this.widget];case 1:return[2,t.sent().communication.signBitcoinTransaction(e,this.config)]}}))}))},e.prototype.showBitcoinWallet=function(e){return void 0===e&&(e="m/49'/0'/0'/0/0"),Dn(this,void 0,void 0,(function(){return On(this,(function(t){switch(t.label){case 0:return[4,this.widget];case 1:return[2,t.sent().communication.showBitcoinWallet(e,this.config)]}}))}))},e.prototype._valiadateParams=function(e,t,n){if(!e)throw new Error("[Portis] 'dappId' is required. Get your dappId here: https://dashboard.portis.io");if(!t)throw new Error("[Portis] 'network' is required. Read more about it here: https://docs.portis.io/#/configuration?id=network");if(n.scope){if(!Array.isArray(n.scope))throw new Error("[Portis] 'scope' must be an array. Read more about it here: https://docs.portis.io/#/configuration?id=scope");if(n.scope.filter((function(e){return Ln.indexOf(e)<0})).length>0)throw new Error("[Portis] invalid 'scope' parameter. Read more about it here: https://docs.portis.io/#/configuration?id=scope")}if(void 0!==n.registerPageByDefault&&"boolean"!=typeof n.registerPageByDefault)throw new Error("[Portis] invalid 'registerPageByDefault' parameter, must be a boolean. Read more about it here: https://docs.portis.io/#/configuration?id=registerPageByDefault")},e.prototype._initWidget=function(){return Dn(this,void 0,void 0,(function(){var e,t,n,r,o;return On(this,(function(i){switch(i.label){case 0:return[4,It()];case 1:return i.sent(),document.body.contains(Mn)&&document.body.removeChild(Mn),(e=document.createElement("style")).innerHTML="\n.por_portis-container {\n  position: fixed;\n  width: 0px;\n  height: 0px;\n  top: 0px;\n  right: 0px;\n  z-index: 2147483647;\n}\n\n@media (max-width: 576px) {\n  .por_portis-container {\n    bottom: 0;\n    top: auto;\n  }\n}\n\n.por_portis-widget-frame {\n  position: fixed;\n  width: 375px;\n  height: 0;\n  top: 20px;\n  right: 20px;\n  box-shadow: 0 5px 40px rgba(0,0,0,.16);\n  border-radius: 8px;\n  overflow: hidden;\n  z-index: 2147483000;\n}\n\n@media (max-width: 576px) {\n  .por_portis-widget-frame {\n    bottom: 0;\n    top: auto;\n    width: 100%;\n    right: 0;\n    left: 0;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n}\n",(t=document.createElement("div")).className="por_portis-container",(n=document.createElement("div")).id="portis-container-"+Date.now(),n.className="por_portis-widget-frame",t.appendChild(n),document.body.appendChild(t),document.head.appendChild(e),(r=mt.connectToChild({url:this._widgetUrl,appendTo:document.getElementById(n.id),methods:{setHeight:this._setHeight.bind(this),getWindowSize:this._getWindowSize.bind(this),onLogin:this._onLogin.bind(this),onLogout:this._onLogout.bind(this),onActiveWalletChanged:this._onActiveWalletChanged.bind(this),onError:this._onError.bind(this)}})).iframe.style.position="absolute",r.iframe.style.height="100%",r.iframe.style.width="100%",r.iframe.style.border="0 transparent",[4,r.promise];case 2:return(o=i.sent()).retrieveSession(this.config),[2,{communication:o,iframe:r.iframe,widgetFrame:n}]}}))}))},e.prototype._initProvider=function(e){var t=this,n=new S,r=new Nt(n);if(n.send=function(e,r){if("string"==typeof e)return new Promise((function(t,o){n.sendAsync({jsonrpc:"2.0",id:42,method:e,params:r||[]},(function(e,n){e?o(e):t(n.result)}))}));if(!r){var o=null;switch(e.method){case"eth_accounts":case"eth_coinbase":o=t._selectedAddress?[t._selectedAddress]:[];break;case"net_version":o=t._network;break;case"eth_uninstallFilter":n.sendAsync(e,(function(e){return e})),o=!0;break;default:var i="The Portis Web3 object does not support synchronous methods like "+e.method+" without a callback parameter.";throw new Error(i)}return{id:e.id,jsonrpc:e.jsonrpc,result:o}}n.sendAsync(e,r)},n.addProvider(new V({web3_clientVersion:"Portis/v"+this.config.version+"/javascript",net_listening:!0,eth_hashrate:"0x00",eth_mining:!1,eth_syncing:!0})),n.addProvider(new j),n.addProvider(new pt),n.addProvider(new z),n.addProvider(new ht),n.addProvider({setEngine:function(e){return e},handleRequest:function(e,n,r){return Dn(t,void 0,void 0,(function(){return On(this,(function(t){return e.id||(e.id=42),n(),[2]}))}))}}),n.addProvider(new Z({getAccounts:function(e){return Dn(t,void 0,void 0,(function(){var t,n,r;return On(this,(function(o){switch(o.label){case 0:return[4,this.widget];case 1:return[4,o.sent().communication.getAccounts(this.config)];case 2:return t=o.sent(),n=t.error,r=t.result,!n&&r&&(this._selectedAddress=r[0]),e(n,r),[2]}}))}))},signTransaction:function(e,n){return Dn(t,void 0,void 0,(function(){var t,r,o;return On(this,(function(i){switch(i.label){case 0:return[4,this.widget];case 1:return[4,i.sent().communication.signTransaction(e,this.config)];case 2:return t=i.sent(),r=t.error,o=t.result,n(r,o),[2]}}))}))},signMessage:function(e,n){return Dn(t,void 0,void 0,(function(){var t,r,o,i,a;return On(this,(function(s){switch(s.label){case 0:return[4,this.widget];case 1:return t=s.sent().communication,r=Object.assign({},e,{messageStandard:"signMessage"}),[4,t.signMessage(r,this.config)];case 2:return o=s.sent(),i=o.error,a=o.result,n(i,a),[2]}}))}))},signPersonalMessage:function(e,n){return Dn(t,void 0,void 0,(function(){var t,r,o,i,a;return On(this,(function(s){switch(s.label){case 0:return[4,this.widget];case 1:return t=s.sent().communication,r=Object.assign({},e,{messageStandard:"signPersonalMessage"}),[4,t.signMessage(r,this.config)];case 2:return o=s.sent(),i=o.error,a=o.result,n(i,a),[2]}}))}))},signTypedMessage:function(e,n){return Dn(t,void 0,void 0,(function(){var t,r,o,i,a;return On(this,(function(s){switch(s.label){case 0:return[4,this.widget];case 1:return t=s.sent().communication,r=Object.assign({},e,{messageStandard:"signTypedMessage"}),[4,t.signMessage(r,this.config)];case 2:return o=s.sent(),i=o.error,a=o.result,n(i,a),[2]}}))}))},signTypedMessageV3:function(e,n){return Dn(t,void 0,void 0,(function(){var t,r,o,i,a;return On(this,(function(s){switch(s.label){case 0:return[4,this.widget];case 1:return t=s.sent().communication,r=Object.assign({},e,{messageStandard:"signTypedMessageV3"}),[4,t.signMessage(r,this.config)];case 2:return o=s.sent(),i=o.error,a=o.result,n(i,a),[2]}}))}))},estimateGas:function(e,n){return Dn(t,void 0,void 0,(function(){var t;return On(this,(function(o){switch(o.label){case 0:return[4,Pt(r,e)];case 1:return t=o.sent(),n(null,t),[2]}}))}))},getGasPrice:function(e){return Dn(t,void 0,void 0,(function(){return On(this,(function(t){return e(null,""),[2]}))}))}})),e.pocketDevId){var o=new In.Pocket({devID:e.pocketDevId,networkName:"ETH",netIDs:[this.config.network.chainId]});n.addProvider({setEngine:function(e){return e},handleRequest:function(e,r,i){return Dn(t,void 0,void 0,(function(){var t,r,a;return On(this,(function(s){switch(s.label){case 0:return[4,o.sendRelay(new In.Relay("ETH",this.config.network.chainId,JSON.stringify(e),o.configuration))];case 1:if((t=s.sent())instanceof Error||!t)a=t||new Error("Unknown error"),r=null;else try{r=JSON.parse(t).result,a=null}catch(e){r=null,a=e}return"net_version"===e.method&&(this._network=r,n.networkVersion=this._network),i(a,r),[2]}}))}))}})}else n.addProvider({setEngine:function(e){return e},handleRequest:function(e,r,o){return Dn(t,void 0,void 0,(function(){var t,r,i;return On(this,(function(a){switch(a.label){case 0:return[4,this.widget];case 1:return[4,a.sent().communication.relay(e,this.config)];case 2:return t=a.sent(),r=t.error,i=t.result,"net_version"===e.method&&(this._network=i,n.networkVersion=this._network),o(r,i),[2]}}))}))}});return n.enable=function(){return new Promise((function(e,t){n.sendAsync({method:"eth_accounts"},(function(n,r){n?t(n):e(r.result)}))}))},n.isConnected=function(){return!0},n.isPortis=!0,n.on("error",(function(e){e&&e.message&&e.message.includes("PollingBlockTracker")?console.warn("If you see this warning constantly, there might be an error with your RPC node."):console.error(e)})),n.start(),n},e.prototype._setHeight=function(e){return Dn(this,void 0,void 0,(function(){return On(this,(function(t){switch(t.label){case 0:return[4,this.widget];case 1:return t.sent().widgetFrame.style.height=e+"px",[2]}}))}))},e.prototype._getWindowSize=function(){var e=document.getElementsByTagName("body")[0];return{width:window.innerWidth||document.documentElement.clientWidth||e.clientWidth,height:window.innerHeight||document.documentElement.clientHeight||e.clientHeight}},e.prototype._onLogin=function(e,t,n){this._onLoginCallback&&this._onLoginCallback(e,t,n)},e.prototype._onLogout=function(){this._selectedAddress="",this._onLogoutCallback&&this._onLogoutCallback()},e.prototype._onActiveWalletChanged=function(e){this._onActiveWalletChangedCallback&&this._onActiveWalletChangedCallback(e)},e.prototype._onError=function(e){this._onErrorCallback&&this._onErrorCallback(e)},e.prototype.clearSubprovider=function(e){var t=this.provider._providers.find((function(t){return t instanceof e}));this.provider.removeProvider(t),this.provider.addProvider(new e)},e}();/* harmony default export */ __webpack_exports__["default"] = (Gn);
//# sourceMappingURL=index-b6b58529.js.map


/***/ }),

/***/ "../../node_modules/use-wallet/dist/subscriptionManager-0493518a.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/use-wallet/dist/subscriptionManager-0493518a.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "B": function() { return /* binding */ St; },
/* harmony export */   "E": function() { return /* binding */ pf; },
/* harmony export */   "S": function() { return /* binding */ ha; },
/* harmony export */   "a": function() { return /* binding */ Pn; },
/* harmony export */   "b": function() { return /* binding */ Lo; },
/* harmony export */   "c": function() { return /* binding */ Ja; },
/* harmony export */   "d": function() { return /* binding */ Ya; },
/* harmony export */   "e": function() { return /* binding */ Cn; },
/* harmony export */   "f": function() { return /* binding */ Ln; },
/* harmony export */   "g": function() { return /* binding */ Cn; },
/* harmony export */   "h": function() { return /* binding */ Rn; },
/* harmony export */   "i": function() { return /* binding */ Tn; },
/* harmony export */   "j": function() { return /* binding */ va; },
/* harmony export */   "m": function() { return /* binding */ Io; },
/* harmony export */   "p": function() { return /* binding */ Bo; },
/* harmony export */   "s": function() { return /* binding */ aa; },
/* harmony export */   "w": function() { return /* binding */ xo; }
/* harmony export */ });
/* harmony import */ var _index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-d3bd4678.js */ "../../node_modules/use-wallet/dist/index-d3bd4678.js");
/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js");
/* harmony import */ var _crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_crypto_commonjs-external-1a228943.js */ "../../node_modules/use-wallet/dist/_crypto_commonjs-external-1a228943.js");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stream */ "../../node_modules/stream-browserify/index.js");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var string_decoder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! string_decoder */ "../../node_modules/string_decoder/lib/string_decoder.js");
/* harmony import */ var _util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./_util_commonjs-external-6c254708.js */ "../../node_modules/use-wallet/dist/_util_commonjs-external-6c254708.js");
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ "../../node_modules/crypto-browserify/index.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! assert */ "../../node_modules/assert/build/assert.js");
/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! util */ "../../node_modules/util/util.js");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_5__);
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "../../node_modules/buffer/index.js")["Buffer"];
/* provided dependency */ var process = __webpack_require__(/*! process */ "../../node_modules/process/browser.js");
var u=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.a.Buffer;function i(e,t){for(var r in e)t[r]=e[r]}function f(e,t,i){return r(e,t,i)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?e.exports=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.a:(i(_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.a,t),t.Buffer=f),f.prototype=Object.create(r.prototype),i(r,f),f.from=function(e,t,i){if("number"==typeof e)throw new TypeError("Argument must not be a number");return r(e,t,i)},f.alloc=function(e,t,i){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=r(e);return void 0!==t?"string"==typeof i?n.fill(t,i):n.fill(t):n.fill(0),n},f.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r(e)},f.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return _crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.a.SlowBuffer(e)}})),d=(u.Buffer,(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e){"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}}))),h=u.Buffer,l=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.b.Transform,b=u.Buffer,p=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.b.Transform,_=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],v=function(e){for(var t=0;t<24;++t){var r=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],n=e[2]^e[12]^e[22]^e[32]^e[42],f=e[3]^e[13]^e[23]^e[33]^e[43],o=e[4]^e[14]^e[24]^e[34]^e[44],a=e[5]^e[15]^e[25]^e[35]^e[45],s=e[6]^e[16]^e[26]^e[36]^e[46],c=e[7]^e[17]^e[27]^e[37]^e[47],u=e[8]^e[18]^e[28]^e[38]^e[48],d=e[9]^e[19]^e[29]^e[39]^e[49],h=u^(n<<1|f>>>31),l=d^(f<<1|n>>>31),b=e[0]^h,p=e[1]^l,v=e[10]^h,m=e[11]^l,y=e[20]^h,g=e[21]^l,w=e[30]^h,A=e[31]^l,E=e[40]^h,I=e[41]^l;h=r^(o<<1|a>>>31),l=i^(a<<1|o>>>31);var M=e[2]^h,S=e[3]^l,L=e[12]^h,x=e[13]^l,k=e[22]^h,B=e[23]^l,P=e[32]^h,T=e[33]^l,R=e[42]^h,C=e[43]^l;h=n^(s<<1|c>>>31),l=f^(c<<1|s>>>31);var N=e[4]^h,z=e[5]^l,j=e[14]^h,D=e[15]^l,K=e[24]^h,O=e[25]^l,V=e[34]^h,U=e[35]^l,q=e[44]^h,Y=e[45]^l;h=o^(u<<1|d>>>31),l=a^(d<<1|u>>>31);var F=e[6]^h,H=e[7]^l,G=e[16]^h,W=e[17]^l,Z=e[26]^h,J=e[27]^l,X=e[36]^h,$=e[37]^l,Q=e[46]^h,ee=e[47]^l;h=s^(r<<1|i>>>31),l=c^(i<<1|r>>>31);var te=e[8]^h,re=e[9]^l,ie=e[18]^h,ne=e[19]^l,fe=e[28]^h,oe=e[29]^l,ae=e[38]^h,se=e[39]^l,ce=e[48]^h,ue=e[49]^l,de=b,he=p,le=m<<4|v>>>28,be=v<<4|m>>>28,pe=y<<3|g>>>29,_e=g<<3|y>>>29,ve=A<<9|w>>>23,me=w<<9|A>>>23,ye=E<<18|I>>>14,ge=I<<18|E>>>14,we=M<<1|S>>>31,Ae=S<<1|M>>>31,Ee=x<<12|L>>>20,Ie=L<<12|x>>>20,Me=k<<10|B>>>22,Se=B<<10|k>>>22,Le=T<<13|P>>>19,xe=P<<13|T>>>19,ke=R<<2|C>>>30,Be=C<<2|R>>>30,Pe=z<<30|N>>>2,Te=N<<30|z>>>2,Re=j<<6|D>>>26,Ce=D<<6|j>>>26,Ne=O<<11|K>>>21,ze=K<<11|O>>>21,je=V<<15|U>>>17,De=U<<15|V>>>17,Ke=Y<<29|q>>>3,Oe=q<<29|Y>>>3,Ve=F<<28|H>>>4,Ue=H<<28|F>>>4,qe=W<<23|G>>>9,Ye=G<<23|W>>>9,Fe=Z<<25|J>>>7,He=J<<25|Z>>>7,Ge=X<<21|$>>>11,We=$<<21|X>>>11,Ze=ee<<24|Q>>>8,Je=Q<<24|ee>>>8,Xe=te<<27|re>>>5,$e=re<<27|te>>>5,Qe=ie<<20|ne>>>12,et=ne<<20|ie>>>12,tt=oe<<7|fe>>>25,rt=fe<<7|oe>>>25,it=ae<<8|se>>>24,nt=se<<8|ae>>>24,ft=ce<<14|ue>>>18,ot=ue<<14|ce>>>18;e[0]=de^~Ee&Ne,e[1]=he^~Ie&ze,e[10]=Ve^~Qe&pe,e[11]=Ue^~et&_e,e[20]=we^~Re&Fe,e[21]=Ae^~Ce&He,e[30]=Xe^~le&Me,e[31]=$e^~be&Se,e[40]=Pe^~qe&tt,e[41]=Te^~Ye&rt,e[2]=Ee^~Ne&Ge,e[3]=Ie^~ze&We,e[12]=Qe^~pe&Le,e[13]=et^~_e&xe,e[22]=Re^~Fe&it,e[23]=Ce^~He&nt,e[32]=le^~Me&je,e[33]=be^~Se&De,e[42]=qe^~tt&ve,e[43]=Ye^~rt&me,e[4]=Ne^~Ge&ft,e[5]=ze^~We&ot,e[14]=pe^~Le&Ke,e[15]=_e^~xe&Oe,e[24]=Fe^~it&ye,e[25]=He^~nt&ge,e[34]=Me^~je&Ze,e[35]=Se^~De&Je,e[44]=tt^~ve&ke,e[45]=rt^~me&Be,e[6]=Ge^~ft&de,e[7]=We^~ot&he,e[16]=Le^~Ke&Ve,e[17]=xe^~Oe&Ue,e[26]=it^~ye&we,e[27]=nt^~ge&Ae,e[36]=je^~Ze&Xe,e[37]=De^~Je&$e,e[46]=ve^~ke&Pe,e[47]=me^~Be&Te,e[8]=ft^~de&Ee,e[9]=ot^~he&Ie,e[18]=Ke^~Ve&Qe,e[19]=Oe^~Ue&et,e[28]=ye^~we&Re,e[29]=ge^~Ae&Ce,e[38]=Ze^~Xe&le,e[39]=Je^~$e&be,e[48]=ke^~Pe&qe,e[49]=Be^~Te&Ye,e[0]^=_[2*t],e[1]^=_[2*t+1]}},m=u.Buffer;function y(){this.state=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.blockSize=null,this.count=0,this.squeezing=!1}y.prototype.initialize=function(e,t){for(var r=0;r<50;++r)this.state[r]=0;this.blockSize=e/8,this.count=0,this.squeezing=!1},y.prototype.absorb=function(e){for(var t=0;t<e.length;++t)this.state[~~(this.count/4)]^=e[t]<<this.count%4*8,this.count+=1,this.count===this.blockSize&&(v(this.state),this.count=0)},y.prototype.absorbLastFewBits=function(e){this.state[~~(this.count/4)]^=e<<this.count%4*8,0!=(128&e)&&this.count===this.blockSize-1&&v(this.state),this.state[~~((this.blockSize-1)/4)]^=128<<(this.blockSize-1)%4*8,v(this.state),this.count=0,this.squeezing=!0},y.prototype.squeeze=function(e){this.squeezing||this.absorbLastFewBits(1);for(var t=m.alloc(e),r=0;r<e;++r)t[r]=this.state[~~(this.count/4)]>>>this.count%4*8&255,this.count+=1,this.count===this.blockSize&&(v(this.state),this.count=0);return t},y.prototype.copy=function(e){for(var t=0;t<50;++t)e.state[t]=this.state[t];e.blockSize=this.blockSize,e.count=this.count,e.squeezing=this.squeezing};var g=function(e){var t=function(e){function t(t,r,i,n,f){l.call(this,f),this._rate=t,this._capacity=r,this._delimitedSuffix=i,this._hashBitLength=n,this._options=f,this._state=new e,this._state.initialize(t,r),this._finalized=!1}return d(t,l),t.prototype._transform=function(e,t,r){var i=null;try{this.update(e,t)}catch(e){i=e}r(i)},t.prototype._flush=function(e){var t=null;try{this.push(this.digest())}catch(e){t=e}e(t)},t.prototype.update=function(e,t){if(!h.isBuffer(e)&&"string"!=typeof e)throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Digest already called");return h.isBuffer(e)||(e=h.from(e,t)),this._state.absorb(e),this},t.prototype.digest=function(e){if(this._finalized)throw new Error("Digest already called");this._finalized=!0,this._delimitedSuffix&&this._state.absorbLastFewBits(this._delimitedSuffix);var t=this._state.squeeze(this._hashBitLength/8);return void 0!==e&&(t=t.toString(e)),this._resetState(),t},t.prototype._resetState=function(){return this._state.initialize(this._rate,this._capacity),this},t.prototype._clone=function(){var e=new t(this._rate,this._capacity,this._delimitedSuffix,this._hashBitLength,this._options);return this._state.copy(e._state),e._finalized=this._finalized,e},t}(e),r=function(e){function t(t,r,i,n){p.call(this,n),this._rate=t,this._capacity=r,this._delimitedSuffix=i,this._options=n,this._state=new e,this._state.initialize(t,r),this._finalized=!1}return d(t,p),t.prototype._transform=function(e,t,r){var i=null;try{this.update(e,t)}catch(e){i=e}r(i)},t.prototype._flush=function(){},t.prototype._read=function(e){this.push(this.squeeze(e))},t.prototype.update=function(e,t){if(!b.isBuffer(e)&&"string"!=typeof e)throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Squeeze already called");return b.isBuffer(e)||(e=b.from(e,t)),this._state.absorb(e),this},t.prototype.squeeze=function(e,t){this._finalized||(this._finalized=!0,this._state.absorbLastFewBits(this._delimitedSuffix));var r=this._state.squeeze(e);return void 0!==t&&(r=r.toString(t)),r},t.prototype._resetState=function(){return this._state.initialize(this._rate,this._capacity),this},t.prototype._clone=function(){var e=new t(this._rate,this._capacity,this._delimitedSuffix,this._options);return this._state.copy(e._state),e._finalized=this._finalized,e},t}(e);return function(e,i){switch("string"==typeof e?e.toLowerCase():e){case"keccak224":return new t(1152,448,null,224,i);case"keccak256":return new t(1088,512,null,256,i);case"keccak384":return new t(832,768,null,384,i);case"keccak512":return new t(576,1024,null,512,i);case"sha3-224":return new t(1152,448,6,224,i);case"sha3-256":return new t(1088,512,6,256,i);case"sha3-384":return new t(832,768,6,384,i);case"sha3-512":return new t(576,1024,6,512,i);case"shake128":return new r(1344,256,31,i);case"shake256":return new r(1088,512,31,i);default:throw new Error("Invald algorithm: "+e)}}}(y),w=Object.prototype.toString,A=function(e,t){if(!Array.isArray(e))throw TypeError(t)},E=function(e,t){if("[object Boolean]"!==w.call(e))throw TypeError(t)},I=function(e,t){if(!Buffer.isBuffer(e))throw TypeError(t)},M=function(e,t){if("[object Function]"!==w.call(e))throw TypeError(t)},S=function(e,t){if("[object Number]"!==w.call(e))throw TypeError(t)},L=function(e,t){if("[object Object]"!==w.call(e))throw TypeError(t)},x=function(e,t,r){if(e.length!==t)throw RangeError(r)},k=function(e,t,r,i){if(e.length!==t&&e.length!==r)throw RangeError(i)},B=function(e,t){if(0===e.length)throw RangeError(t)},P=function(e,t,r,i){if(e<=t||e>=r)throw RangeError(i)},T=u.Buffer;var R={check:function(e){if(e.length<8)return!1;if(e.length>72)return!1;if(48!==e[0])return!1;if(e[1]!==e.length-2)return!1;if(2!==e[2])return!1;var t=e[3];if(0===t)return!1;if(5+t>=e.length)return!1;if(2!==e[4+t])return!1;var r=e[5+t];return 0!==r&&(6+t+r===e.length&&(!(128&e[4])&&(!(t>1&&0===e[4]&&!(128&e[5]))&&(!(128&e[t+6])&&!(r>1&&0===e[t+6]&&!(128&e[t+7]))))))},decode:function(e){if(e.length<8)throw new Error("DER sequence length is too short");if(e.length>72)throw new Error("DER sequence length is too long");if(48!==e[0])throw new Error("Expected DER sequence");if(e[1]!==e.length-2)throw new Error("DER sequence length is invalid");if(2!==e[2])throw new Error("Expected DER integer");var t=e[3];if(0===t)throw new Error("R length is zero");if(5+t>=e.length)throw new Error("R length is too long");if(2!==e[4+t])throw new Error("Expected DER integer (2)");var r=e[5+t];if(0===r)throw new Error("S length is zero");if(6+t+r!==e.length)throw new Error("S length is invalid");if(128&e[4])throw new Error("R value is negative");if(t>1&&0===e[4]&&!(128&e[5]))throw new Error("R value excessively padded");if(128&e[t+6])throw new Error("S value is negative");if(r>1&&0===e[t+6]&&!(128&e[t+7]))throw new Error("S value excessively padded");return{r:e.slice(4,4+t),s:e.slice(6+t)}},encode:function(e,t){var r=e.length,i=t.length;if(0===r)throw new Error("R length is zero");if(0===i)throw new Error("S length is zero");if(r>33)throw new Error("R length is too long");if(i>33)throw new Error("S length is too long");if(128&e[0])throw new Error("R value is negative");if(128&t[0])throw new Error("S value is negative");if(r>1&&0===e[0]&&!(128&e[1]))throw new Error("R value excessively padded");if(i>1&&0===t[0]&&!(128&t[1]))throw new Error("S value excessively padded");var n=T.allocUnsafe(6+r+i);return n[0]=48,n[1]=n.length-2,n[2]=2,n[3]=e.length,e.copy(n,4),n[4+r]=2,n[5+r]=t.length,t.copy(n,6+r),n}},C=u.Buffer,N=C.from([48,129,211,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,133,48,129,130,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,33,2,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,36,3,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),z=C.from([48,130,1,19,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,165,48,129,162,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,65,4,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,72,58,218,119,38,163,196,101,93,164,251,252,14,17,8,168,253,23,180,72,166,133,84,25,156,71,208,143,251,16,212,184,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,68,3,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),j=function(e,t,r){var i=C.from(r?N:z);return e.copy(i,r?8:9),t.copy(i,r?181:214),i},D=function(e){var t=e.length,r=0;if(!(t<r+1||48!==e[r])&&!(t<(r+=1)+1)&&128&e[r]){var i=127&e[r];if(r+=1,!(i<1||i>2||t<r+i)){var n=e[r+i-1]|(i>1?e[r+i-2]<<8:0);if(!(t<(r+=i)+n||t<r+3||2!==e[r]||1!==e[r+1]||1!==e[r+2]||t<(r+=3)+2||4!==e[r]||e[r+1]>32||t<r+2+e[r+1]))return e.slice(r+2,r+2+e[r+1])}}},K=function(e){for(var t=C.concat([C.from([0]),e.r]),r=33,i=0;r>1&&0===t[i]&&!(128&t[i+1]);--r,++i);for(var n=C.concat([C.from([0]),e.s]),f=33,o=0;f>1&&0===n[o]&&!(128&n[o+1]);--f,++o);return R.encode(t.slice(i),n.slice(o))},O=function(e){var t=C.alloc(32,0),r=C.alloc(32,0);try{var i=R.decode(e);if(33===i.r.length&&0===i.r[0]&&(i.r=i.r.slice(1)),i.r.length>32)throw new Error("R length is too long");if(33===i.s.length&&0===i.s[0]&&(i.s=i.s.slice(1)),i.s.length>32)throw new Error("S length is too long")}catch(e){return}return i.r.copy(t,32-i.r.length),i.s.copy(r,32-i.s.length),{r:t,s:r}},V=function(e){var t=C.alloc(32,0),r=C.alloc(32,0),i=e.length,n=0;if(48===e[n++]){var f=e[n++];if(!(128&f&&(n+=f-128)>i)&&2===e[n++]){var o=e[n++];if(128&o){if(n+(f=o-128)>i)return;for(;f>0&&0===e[n];n+=1,f-=1);for(o=0;f>0;n+=1,f-=1)o=(o<<8)+e[n]}if(!(o>i-n)){var a=n;if(n+=o,2===e[n++]){var s=e[n++];if(128&s){if(n+(f=s-128)>i)return;for(;f>0&&0===e[n];n+=1,f-=1);for(s=0;f>0;n+=1,f-=1)s=(s<<8)+e[n]}if(!(s>i-n)){var c=n;for(n+=s;o>0&&0===e[a];o-=1,a+=1);if(!(o>32)){var u=e.slice(a,a+o);for(u.copy(t,32-u.length);s>0&&0===e[c];s-=1,c+=1);if(!(s>32)){var d=e.slice(c,c+s);return d.copy(r,32-d.length),{r:t,s:r}}}}}}}}},U="scalar was invalid (zero or overflow)",q="nonce generation function failed or private key is invalid",Y={COMPRESSED_TYPE_INVALID:"compressed should be a boolean",EC_PRIVATE_KEY_TYPE_INVALID:"private key should be a Buffer",EC_PRIVATE_KEY_LENGTH_INVALID:"private key length is invalid",EC_PRIVATE_KEY_RANGE_INVALID:"private key range is invalid",EC_PRIVATE_KEY_TWEAK_ADD_FAIL:"tweak out of range or resulting private key is invalid",EC_PRIVATE_KEY_TWEAK_MUL_FAIL:"tweak out of range",EC_PRIVATE_KEY_EXPORT_DER_FAIL:"couldn't export to DER format",EC_PRIVATE_KEY_IMPORT_DER_FAIL:"couldn't import from DER format",EC_PUBLIC_KEYS_TYPE_INVALID:"public keys should be an Array",EC_PUBLIC_KEYS_LENGTH_INVALID:"public keys Array should have at least 1 element",EC_PUBLIC_KEY_TYPE_INVALID:"public key should be a Buffer",EC_PUBLIC_KEY_LENGTH_INVALID:"public key length is invalid",EC_PUBLIC_KEY_PARSE_FAIL:"the public key could not be parsed or is invalid",EC_PUBLIC_KEY_CREATE_FAIL:"private was invalid, try again",EC_PUBLIC_KEY_TWEAK_ADD_FAIL:"tweak out of range or resulting public key is invalid",EC_PUBLIC_KEY_TWEAK_MUL_FAIL:"tweak out of range",EC_PUBLIC_KEY_COMBINE_FAIL:"the sum of the public keys is not valid",ECDH_FAIL:U,ECDSA_SIGNATURE_TYPE_INVALID:"signature should be a Buffer",ECDSA_SIGNATURE_LENGTH_INVALID:"signature length is invalid",ECDSA_SIGNATURE_PARSE_FAIL:"couldn't parse signature",ECDSA_SIGNATURE_PARSE_DER_FAIL:"couldn't parse DER signature",ECDSA_SIGNATURE_SERIALIZE_DER_FAIL:"couldn't serialize signature to DER format",ECDSA_SIGN_FAIL:q,ECDSA_RECOVER_FAIL:"couldn't recover public key from signature",MSG32_TYPE_INVALID:"message should be a Buffer",MSG32_LENGTH_INVALID:"message length is invalid",OPTIONS_TYPE_INVALID:"options should be an Object",OPTIONS_DATA_TYPE_INVALID:"options.data should be a Buffer",OPTIONS_DATA_LENGTH_INVALID:"options.data length is invalid",OPTIONS_NONCEFN_TYPE_INVALID:"options.noncefn should be a Function",RECOVERY_ID_TYPE_INVALID:"recovery should be a Number",RECOVERY_ID_VALUE_INVALID:"recovery should have value between -1 and 4",TWEAK_TYPE_INVALID:"tweak should be a Buffer",TWEAK_LENGTH_INVALID:"tweak length is invalid"},F=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.h)(Object.freeze({__proto__:null,COMPRESSED_TYPE_INVALID:"compressed should be a boolean",EC_PRIVATE_KEY_TYPE_INVALID:"private key should be a Buffer",EC_PRIVATE_KEY_LENGTH_INVALID:"private key length is invalid",EC_PRIVATE_KEY_RANGE_INVALID:"private key range is invalid",EC_PRIVATE_KEY_TWEAK_ADD_FAIL:"tweak out of range or resulting private key is invalid",EC_PRIVATE_KEY_TWEAK_MUL_FAIL:"tweak out of range",EC_PRIVATE_KEY_EXPORT_DER_FAIL:"couldn't export to DER format",EC_PRIVATE_KEY_IMPORT_DER_FAIL:"couldn't import from DER format",EC_PUBLIC_KEYS_TYPE_INVALID:"public keys should be an Array",EC_PUBLIC_KEYS_LENGTH_INVALID:"public keys Array should have at least 1 element",EC_PUBLIC_KEY_TYPE_INVALID:"public key should be a Buffer",EC_PUBLIC_KEY_LENGTH_INVALID:"public key length is invalid",EC_PUBLIC_KEY_PARSE_FAIL:"the public key could not be parsed or is invalid",EC_PUBLIC_KEY_CREATE_FAIL:"private was invalid, try again",EC_PUBLIC_KEY_TWEAK_ADD_FAIL:"tweak out of range or resulting public key is invalid",EC_PUBLIC_KEY_TWEAK_MUL_FAIL:"tweak out of range",EC_PUBLIC_KEY_COMBINE_FAIL:"the sum of the public keys is not valid",ECDH_FAIL:U,ECDSA_SIGNATURE_TYPE_INVALID:"signature should be a Buffer",ECDSA_SIGNATURE_LENGTH_INVALID:"signature length is invalid",ECDSA_SIGNATURE_PARSE_FAIL:"couldn't parse signature",ECDSA_SIGNATURE_PARSE_DER_FAIL:"couldn't parse DER signature",ECDSA_SIGNATURE_SERIALIZE_DER_FAIL:"couldn't serialize signature to DER format",ECDSA_SIGN_FAIL:q,ECDSA_RECOVER_FAIL:"couldn't recover public key from signature",MSG32_TYPE_INVALID:"message should be a Buffer",MSG32_LENGTH_INVALID:"message length is invalid",OPTIONS_TYPE_INVALID:"options should be an Object",OPTIONS_DATA_TYPE_INVALID:"options.data should be a Buffer",OPTIONS_DATA_LENGTH_INVALID:"options.data length is invalid",OPTIONS_NONCEFN_TYPE_INVALID:"options.noncefn should be a Function",RECOVERY_ID_TYPE_INVALID:"recovery should be a Number",RECOVERY_ID_VALUE_INVALID:"recovery should have value between -1 and 4",TWEAK_TYPE_INVALID:"tweak should be a Buffer",TWEAK_LENGTH_INVALID:"tweak length is invalid",default:Y}));function H(e,t){return void 0===e?t:(E(e,F.COMPRESSED_TYPE_INVALID),e)}var G=u.Buffer,W=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.b.Transform;function Z(e){W.call(this),this._block=G.allocUnsafe(e),this._blockSize=e,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}d(Z,W),Z.prototype._transform=function(e,t,r){var i=null;try{this.update(e,t)}catch(e){i=e}r(i)},Z.prototype._flush=function(e){var t=null;try{this.push(this.digest())}catch(e){t=e}e(t)},Z.prototype.update=function(e,t){if(function(e,t){if(!G.isBuffer(e)&&"string"!=typeof e)throw new TypeError(t+" must be a string or a buffer")}(e,"Data"),this._finalized)throw new Error("Digest already called");G.isBuffer(e)||(e=G.from(e,t));for(var r=this._block,i=0;this._blockOffset+e.length-i>=this._blockSize;){for(var n=this._blockOffset;n<this._blockSize;)r[n++]=e[i++];this._update(),this._blockOffset=0}for(;i<e.length;)r[this._blockOffset++]=e[i++];for(var f=0,o=8*e.length;o>0;++f)this._length[f]+=o,(o=this._length[f]/4294967296|0)>0&&(this._length[f]-=4294967296*o);return this},Z.prototype._update=function(){throw new Error("_update is not implemented")},Z.prototype.digest=function(e){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var t=this._digest();void 0!==e&&(t=t.toString(e)),this._block.fill(0),this._blockOffset=0;for(var r=0;r<4;++r)this._length[r]=0;return t},Z.prototype._digest=function(){throw new Error("_digest is not implemented")};var J=Z,X=u.Buffer,$=new Array(16);function Q(){J.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function ee(e,t){return e<<t|e>>>32-t}function te(e,t,r,i,n,f,o){return ee(e+(t&r|~t&i)+n+f|0,o)+t|0}function re(e,t,r,i,n,f,o){return ee(e+(t&i|r&~i)+n+f|0,o)+t|0}function ie(e,t,r,i,n,f,o){return ee(e+(t^r^i)+n+f|0,o)+t|0}function ne(e,t,r,i,n,f,o){return ee(e+(r^(t|~i))+n+f|0,o)+t|0}d(Q,J),Q.prototype._update=function(){for(var e=$,t=0;t<16;++t)e[t]=this._block.readInt32LE(4*t);var r=this._a,i=this._b,n=this._c,f=this._d;r=te(r,i,n,f,e[0],3614090360,7),f=te(f,r,i,n,e[1],3905402710,12),n=te(n,f,r,i,e[2],606105819,17),i=te(i,n,f,r,e[3],3250441966,22),r=te(r,i,n,f,e[4],4118548399,7),f=te(f,r,i,n,e[5],1200080426,12),n=te(n,f,r,i,e[6],2821735955,17),i=te(i,n,f,r,e[7],4249261313,22),r=te(r,i,n,f,e[8],1770035416,7),f=te(f,r,i,n,e[9],2336552879,12),n=te(n,f,r,i,e[10],4294925233,17),i=te(i,n,f,r,e[11],2304563134,22),r=te(r,i,n,f,e[12],1804603682,7),f=te(f,r,i,n,e[13],4254626195,12),n=te(n,f,r,i,e[14],2792965006,17),r=re(r,i=te(i,n,f,r,e[15],1236535329,22),n,f,e[1],4129170786,5),f=re(f,r,i,n,e[6],3225465664,9),n=re(n,f,r,i,e[11],643717713,14),i=re(i,n,f,r,e[0],3921069994,20),r=re(r,i,n,f,e[5],3593408605,5),f=re(f,r,i,n,e[10],38016083,9),n=re(n,f,r,i,e[15],3634488961,14),i=re(i,n,f,r,e[4],3889429448,20),r=re(r,i,n,f,e[9],568446438,5),f=re(f,r,i,n,e[14],3275163606,9),n=re(n,f,r,i,e[3],4107603335,14),i=re(i,n,f,r,e[8],1163531501,20),r=re(r,i,n,f,e[13],2850285829,5),f=re(f,r,i,n,e[2],4243563512,9),n=re(n,f,r,i,e[7],1735328473,14),r=ie(r,i=re(i,n,f,r,e[12],2368359562,20),n,f,e[5],4294588738,4),f=ie(f,r,i,n,e[8],2272392833,11),n=ie(n,f,r,i,e[11],1839030562,16),i=ie(i,n,f,r,e[14],4259657740,23),r=ie(r,i,n,f,e[1],2763975236,4),f=ie(f,r,i,n,e[4],1272893353,11),n=ie(n,f,r,i,e[7],4139469664,16),i=ie(i,n,f,r,e[10],3200236656,23),r=ie(r,i,n,f,e[13],681279174,4),f=ie(f,r,i,n,e[0],3936430074,11),n=ie(n,f,r,i,e[3],3572445317,16),i=ie(i,n,f,r,e[6],76029189,23),r=ie(r,i,n,f,e[9],3654602809,4),f=ie(f,r,i,n,e[12],3873151461,11),n=ie(n,f,r,i,e[15],530742520,16),r=ne(r,i=ie(i,n,f,r,e[2],3299628645,23),n,f,e[0],4096336452,6),f=ne(f,r,i,n,e[7],1126891415,10),n=ne(n,f,r,i,e[14],2878612391,15),i=ne(i,n,f,r,e[5],4237533241,21),r=ne(r,i,n,f,e[12],1700485571,6),f=ne(f,r,i,n,e[3],2399980690,10),n=ne(n,f,r,i,e[10],4293915773,15),i=ne(i,n,f,r,e[1],2240044497,21),r=ne(r,i,n,f,e[8],1873313359,6),f=ne(f,r,i,n,e[15],4264355552,10),n=ne(n,f,r,i,e[6],2734768916,15),i=ne(i,n,f,r,e[13],1309151649,21),r=ne(r,i,n,f,e[4],4149444226,6),f=ne(f,r,i,n,e[11],3174756917,10),n=ne(n,f,r,i,e[2],718787259,15),i=ne(i,n,f,r,e[9],3951481745,21),this._a=this._a+r|0,this._b=this._b+i|0,this._c=this._c+n|0,this._d=this._d+f|0},Q.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var e=X.allocUnsafe(16);return e.writeInt32LE(this._a,0),e.writeInt32LE(this._b,4),e.writeInt32LE(this._c,8),e.writeInt32LE(this._d,12),e};var fe=Q,oe=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.a.Buffer,ae=new Array(16),se=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],ce=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],ue=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],de=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],he=[0,1518500249,1859775393,2400959708,2840853838],le=[1352829926,1548603684,1836072691,2053994217,0];function be(){J.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function pe(e,t){return e<<t|e>>>32-t}function _e(e,t,r,i,n,f,o,a){return pe(e+(t^r^i)+f+o|0,a)+n|0}function ve(e,t,r,i,n,f,o,a){return pe(e+(t&r|~t&i)+f+o|0,a)+n|0}function me(e,t,r,i,n,f,o,a){return pe(e+((t|~r)^i)+f+o|0,a)+n|0}function ye(e,t,r,i,n,f,o,a){return pe(e+(t&i|r&~i)+f+o|0,a)+n|0}function ge(e,t,r,i,n,f,o,a){return pe(e+(t^(r|~i))+f+o|0,a)+n|0}d(be,J),be.prototype._update=function(){for(var e=ae,t=0;t<16;++t)e[t]=this._block.readInt32LE(4*t);for(var r=0|this._a,i=0|this._b,n=0|this._c,f=0|this._d,o=0|this._e,a=0|this._a,s=0|this._b,c=0|this._c,u=0|this._d,d=0|this._e,h=0;h<80;h+=1){var l,b;h<16?(l=_e(r,i,n,f,o,e[se[h]],he[0],ue[h]),b=ge(a,s,c,u,d,e[ce[h]],le[0],de[h])):h<32?(l=ve(r,i,n,f,o,e[se[h]],he[1],ue[h]),b=ye(a,s,c,u,d,e[ce[h]],le[1],de[h])):h<48?(l=me(r,i,n,f,o,e[se[h]],he[2],ue[h]),b=me(a,s,c,u,d,e[ce[h]],le[2],de[h])):h<64?(l=ye(r,i,n,f,o,e[se[h]],he[3],ue[h]),b=ve(a,s,c,u,d,e[ce[h]],le[3],de[h])):(l=ge(r,i,n,f,o,e[se[h]],he[4],ue[h]),b=_e(a,s,c,u,d,e[ce[h]],le[4],de[h])),r=o,o=f,f=pe(n,10),n=i,i=l,a=d,d=u,u=pe(c,10),c=s,s=b}var p=this._b+n+u|0;this._b=this._c+f+d|0,this._c=this._d+o+a|0,this._d=this._e+r+s|0,this._e=this._a+i+c|0,this._a=p},be.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var e=oe.alloc?oe.alloc(20):new oe(20);return e.writeInt32LE(this._a,0),e.writeInt32LE(this._b,4),e.writeInt32LE(this._c,8),e.writeInt32LE(this._d,12),e.writeInt32LE(this._e,16),e};var we=be,Ae=u.Buffer;function Ee(e,t){this._block=Ae.alloc(e),this._finalSize=t,this._blockSize=e,this._len=0}Ee.prototype.update=function(e,t){"string"==typeof e&&(t=t||"utf8",e=Ae.from(e,t));for(var r=this._block,i=this._blockSize,n=e.length,f=this._len,o=0;o<n;){for(var a=f%i,s=Math.min(n-o,i-a),c=0;c<s;c++)r[a+c]=e[o+c];o+=s,(f+=s)%i==0&&this._update(r)}return this._len+=n,this},Ee.prototype.digest=function(e){var t=this._len%this._blockSize;this._block[t]=128,this._block.fill(0,t+1),t>=this._finalSize&&(this._update(this._block),this._block.fill(0));var r=8*this._len;if(r<=4294967295)this._block.writeUInt32BE(r,this._blockSize-4);else{var i=(4294967295&r)>>>0,n=(r-i)/4294967296;this._block.writeUInt32BE(n,this._blockSize-8),this._block.writeUInt32BE(i,this._blockSize-4)}this._update(this._block);var f=this._hash();return e?f.toString(e):f},Ee.prototype._update=function(){throw new Error("_update must be implemented by subclass")};var Ie=Ee,Me=u.Buffer,Se=[1518500249,1859775393,-1894007588,-899497514],Le=new Array(80);function xe(){this.init(),this._w=Le,Ie.call(this,64,56)}function ke(e){return e<<30|e>>>2}function Be(e,t,r,i){return 0===e?t&r|~t&i:2===e?t&r|t&i|r&i:t^r^i}d(xe,Ie),xe.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},xe.prototype._update=function(e){for(var t,r=this._w,i=0|this._a,n=0|this._b,f=0|this._c,o=0|this._d,a=0|this._e,s=0;s<16;++s)r[s]=e.readInt32BE(4*s);for(;s<80;++s)r[s]=r[s-3]^r[s-8]^r[s-14]^r[s-16];for(var c=0;c<80;++c){var u=~~(c/20),d=0|((t=i)<<5|t>>>27)+Be(u,n,f,o)+a+r[c]+Se[u];a=o,o=f,f=ke(n),n=i,i=d}this._a=i+this._a|0,this._b=n+this._b|0,this._c=f+this._c|0,this._d=o+this._d|0,this._e=a+this._e|0},xe.prototype._hash=function(){var e=Me.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e};var Pe=xe,Te=u.Buffer,Re=[1518500249,1859775393,-1894007588,-899497514],Ce=new Array(80);function Ne(){this.init(),this._w=Ce,Ie.call(this,64,56)}function ze(e){return e<<5|e>>>27}function je(e){return e<<30|e>>>2}function De(e,t,r,i){return 0===e?t&r|~t&i:2===e?t&r|t&i|r&i:t^r^i}d(Ne,Ie),Ne.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},Ne.prototype._update=function(e){for(var t,r=this._w,i=0|this._a,n=0|this._b,f=0|this._c,o=0|this._d,a=0|this._e,s=0;s<16;++s)r[s]=e.readInt32BE(4*s);for(;s<80;++s)r[s]=(t=r[s-3]^r[s-8]^r[s-14]^r[s-16])<<1|t>>>31;for(var c=0;c<80;++c){var u=~~(c/20),d=ze(i)+De(u,n,f,o)+a+r[c]+Re[u]|0;a=o,o=f,f=je(n),n=i,i=d}this._a=i+this._a|0,this._b=n+this._b|0,this._c=f+this._c|0,this._d=o+this._d|0,this._e=a+this._e|0},Ne.prototype._hash=function(){var e=Te.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e};var Ke=Ne,Oe=u.Buffer,Ve=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],Ue=new Array(64);function qe(){this.init(),this._w=Ue,Ie.call(this,64,56)}function Ye(e,t,r){return r^e&(t^r)}function Fe(e,t,r){return e&t|r&(e|t)}function He(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function Ge(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function We(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}d(qe,Ie),qe.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},qe.prototype._update=function(e){for(var t,r=this._w,i=0|this._a,n=0|this._b,f=0|this._c,o=0|this._d,a=0|this._e,s=0|this._f,c=0|this._g,u=0|this._h,d=0;d<16;++d)r[d]=e.readInt32BE(4*d);for(;d<64;++d)r[d]=0|(((t=r[d-2])>>>17|t<<15)^(t>>>19|t<<13)^t>>>10)+r[d-7]+We(r[d-15])+r[d-16];for(var h=0;h<64;++h){var l=u+Ge(a)+Ye(a,s,c)+Ve[h]+r[h]|0,b=He(i)+Fe(i,n,f)|0;u=c,c=s,s=a,a=o+l|0,o=f,f=n,n=i,i=l+b|0}this._a=i+this._a|0,this._b=n+this._b|0,this._c=f+this._c|0,this._d=o+this._d|0,this._e=a+this._e|0,this._f=s+this._f|0,this._g=c+this._g|0,this._h=u+this._h|0},qe.prototype._hash=function(){var e=Oe.allocUnsafe(32);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e.writeInt32BE(this._h,28),e};var Ze=qe,Je=u.Buffer,Xe=new Array(64);function $e(){this.init(),this._w=Xe,Ie.call(this,64,56)}d($e,Ze),$e.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},$e.prototype._hash=function(){var e=Je.allocUnsafe(28);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e};var Qe=$e,et=u.Buffer,tt=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],rt=new Array(160);function it(){this.init(),this._w=rt,Ie.call(this,128,112)}function nt(e,t,r){return r^e&(t^r)}function ft(e,t,r){return e&t|r&(e|t)}function ot(e,t){return(e>>>28|t<<4)^(t>>>2|e<<30)^(t>>>7|e<<25)}function at(e,t){return(e>>>14|t<<18)^(e>>>18|t<<14)^(t>>>9|e<<23)}function st(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^e>>>7}function ct(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^(e>>>7|t<<25)}function ut(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^e>>>6}function dt(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^(e>>>6|t<<26)}function ht(e,t){return e>>>0<t>>>0?1:0}d(it,Ie),it.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},it.prototype._update=function(e){for(var t=this._w,r=0|this._ah,i=0|this._bh,n=0|this._ch,f=0|this._dh,o=0|this._eh,a=0|this._fh,s=0|this._gh,c=0|this._hh,u=0|this._al,d=0|this._bl,h=0|this._cl,l=0|this._dl,b=0|this._el,p=0|this._fl,_=0|this._gl,v=0|this._hl,m=0;m<32;m+=2)t[m]=e.readInt32BE(4*m),t[m+1]=e.readInt32BE(4*m+4);for(;m<160;m+=2){var y=t[m-30],g=t[m-30+1],w=st(y,g),A=ct(g,y),E=ut(y=t[m-4],g=t[m-4+1]),I=dt(g,y),M=t[m-14],S=t[m-14+1],L=t[m-32],x=t[m-32+1],k=A+S|0,B=w+M+ht(k,A)|0;B=(B=B+E+ht(k=k+I|0,I)|0)+L+ht(k=k+x|0,x)|0,t[m]=B,t[m+1]=k}for(var P=0;P<160;P+=2){B=t[P],k=t[P+1];var T=ft(r,i,n),R=ft(u,d,h),C=ot(r,u),N=ot(u,r),z=at(o,b),j=at(b,o),D=tt[P],K=tt[P+1],O=nt(o,a,s),V=nt(b,p,_),U=v+j|0,q=c+z+ht(U,v)|0;q=(q=(q=q+O+ht(U=U+V|0,V)|0)+D+ht(U=U+K|0,K)|0)+B+ht(U=U+k|0,k)|0;var Y=N+R|0,F=C+T+ht(Y,N)|0;c=s,v=_,s=a,_=p,a=o,p=b,o=f+q+ht(b=l+U|0,l)|0,f=n,l=h,n=i,h=d,i=r,d=u,r=q+F+ht(u=U+Y|0,U)|0}this._al=this._al+u|0,this._bl=this._bl+d|0,this._cl=this._cl+h|0,this._dl=this._dl+l|0,this._el=this._el+b|0,this._fl=this._fl+p|0,this._gl=this._gl+_|0,this._hl=this._hl+v|0,this._ah=this._ah+r+ht(this._al,u)|0,this._bh=this._bh+i+ht(this._bl,d)|0,this._ch=this._ch+n+ht(this._cl,h)|0,this._dh=this._dh+f+ht(this._dl,l)|0,this._eh=this._eh+o+ht(this._el,b)|0,this._fh=this._fh+a+ht(this._fl,p)|0,this._gh=this._gh+s+ht(this._gl,_)|0,this._hh=this._hh+c+ht(this._hl,v)|0},it.prototype._hash=function(){var e=et.allocUnsafe(64);function t(t,r,i){e.writeInt32BE(t,i),e.writeInt32BE(r,i+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),t(this._gh,this._gl,48),t(this._hh,this._hl,56),e};var lt=it,bt=u.Buffer,pt=new Array(160);function _t(){this.init(),this._w=pt,Ie.call(this,128,112)}d(_t,lt),_t.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},_t.prototype._hash=function(){var e=bt.allocUnsafe(48);function t(t,r,i){e.writeInt32BE(t,i),e.writeInt32BE(r,i+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),e};var vt=_t,mt=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e){var t=e.exports=function(e){e=e.toLowerCase();var r=t[e];if(!r)throw new Error(e+" is not supported (we accept pull requests)");return new r};t.sha=Pe,t.sha1=Ke,t.sha224=Qe,t.sha256=Ze,t.sha384=vt,t.sha512=lt})),yt=u.Buffer,gt=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.b.Transform,wt=_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.a.StringDecoder;function At(e){gt.call(this),this.hashMode="string"==typeof e,this.hashMode?this[e]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}d(At,gt),At.prototype.update=function(e,t,r){"string"==typeof e&&(e=yt.from(e,t));var i=this._update(e);return this.hashMode?this:(r&&(i=this._toString(i,r)),i)},At.prototype.setAutoPadding=function(){},At.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},At.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},At.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},At.prototype._transform=function(e,t,r){var i;try{this.hashMode?this._update(e):this.push(this._update(e))}catch(e){i=e}finally{r(i)}},At.prototype._flush=function(e){var t;try{this.push(this.__final())}catch(e){t=e}e(t)},At.prototype._finalOrDigest=function(e){var t=this.__final()||yt.alloc(0);return e&&(t=this._toString(t,e,!0)),t},At.prototype._toString=function(e,t,r){if(this._decoder||(this._decoder=new wt(t),this._encoding=t),this._encoding!==t)throw new Error("can't switch encodings");var i=this._decoder.write(e);return r&&(i+=this._decoder.end()),i};var Et=At;function It(e){Et.call(this,"digest"),this._hash=e}d(It,Et),It.prototype._update=function(e){this._hash.update(e)},It.prototype._final=function(){return this._hash.digest()};var Mt=function(e){return"md5"===(e=e.toLowerCase())?new fe:"rmd160"===e||"ripemd160"===e?new we:new It(mt(e))},St=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e){!function(e,t){function r(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function f(e,t,r){if(f.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}var o;"object"==typeof e?e.exports=f:t.BN=f,f.BN=f,f.wordSize=26;try{o=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.a.Buffer}catch(e){}function a(e,t,r){for(var i=0,n=Math.min(e.length,r),f=t;f<n;f++){var o=e.charCodeAt(f)-48;i<<=4,i|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return i}function s(e,t,r,i){for(var n=0,f=Math.min(e.length,r),o=t;o<f;o++){var a=e.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}f.isBN=function(e){return e instanceof f||null!==e&&"object"==typeof e&&e.constructor.wordSize===f.wordSize&&Array.isArray(e.words)},f.max=function(e,t){return e.cmp(t)>0?e:t},f.min=function(e,t){return e.cmp(t)<0?e:t},f.prototype._init=function(e,t,i){if("number"==typeof e)return this._initNumber(e,t,i);if("object"==typeof e)return this._initArray(e,t,i);"hex"===t&&(t=16),r(t===(0|t)&&t>=2&&t<=36);var n=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&n++,16===t?this._parseHex(e,n):this._parseBase(e,t,n),"-"===e[0]&&(this.negative=1),this.strip(),"le"===i&&this._initArray(this.toArray(),t,i)},f.prototype._initNumber=function(e,t,i){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(r(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===i&&this._initArray(this.toArray(),t,i)},f.prototype._initArray=function(e,t,i){if(r("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var f,o,a=0;if("be"===i)for(n=e.length-1,f=0;n>=0;n-=3)o=e[n]|e[n-1]<<8|e[n-2]<<16,this.words[f]|=o<<a&67108863,this.words[f+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,f++);else if("le"===i)for(n=0,f=0;n<e.length;n+=3)o=e[n]|e[n+1]<<8|e[n+2]<<16,this.words[f]|=o<<a&67108863,this.words[f+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,f++);return this.strip()},f.prototype._parseHex=function(e,t){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var i,n,f=0;for(r=e.length-6,i=0;r>=t;r-=6)n=a(e,r,r+6),this.words[i]|=n<<f&67108863,this.words[i+1]|=n>>>26-f&4194303,(f+=24)>=26&&(f-=26,i++);r+6!==t&&(n=a(e,t,r+6),this.words[i]|=n<<f&67108863,this.words[i+1]|=n>>>26-f&4194303),this.strip()},f.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=t)i++;i--,n=n/t|0;for(var f=e.length-r,o=f%i,a=Math.min(f,f-o)+r,c=0,u=r;u<a;u+=i)c=s(e,u,u+i,t),this.imuln(n),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c);if(0!==o){var d=1;for(c=s(e,u,e.length,t),u=0;u<o;u++)d*=t;this.imuln(d),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c)}},f.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},f.prototype.clone=function(){var e=new f(null);return this.copy(e),e},f.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},f.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},f.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},f.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],u=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function h(e,t,r){r.negative=t.negative^e.negative;var i=e.length+t.length|0;r.length=i,i=i-1|0;var n=0|e.words[0],f=0|t.words[0],o=n*f,a=67108863&o,s=o/67108864|0;r.words[0]=a;for(var c=1;c<i;c++){for(var u=s>>>26,d=67108863&s,h=Math.min(c,t.length-1),l=Math.max(0,c-e.length+1);l<=h;l++){var b=c-l|0;u+=(o=(n=0|e.words[b])*(f=0|t.words[l])+d)/67108864|0,d=67108863&o}r.words[c]=0|d,s=0|u}return 0!==s?r.words[c]=0|s:r.length--,r.strip()}f.prototype.toString=function(e,t){var i;if(t=0|t||1,16===(e=e||10)||"hex"===e){i="";for(var n=0,f=0,o=0;o<this.length;o++){var a=this.words[o],s=(16777215&(a<<n|f)).toString(16);i=0!==(f=a>>>24-n&16777215)||o!==this.length-1?c[6-s.length]+s+i:s+i,(n+=2)>=26&&(n-=26,o--)}for(0!==f&&(i=f.toString(16)+i);i.length%t!=0;)i="0"+i;return 0!==this.negative&&(i="-"+i),i}if(e===(0|e)&&e>=2&&e<=36){var h=u[e],l=d[e];i="";var b=this.clone();for(b.negative=0;!b.isZero();){var p=b.modn(l).toString(e);i=(b=b.idivn(l)).isZero()?p+i:c[h-p.length]+p+i}for(this.isZero()&&(i="0"+i);i.length%t!=0;)i="0"+i;return 0!==this.negative&&(i="-"+i),i}r(!1,"Base should be between 2 and 36")},f.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},f.prototype.toJSON=function(){return this.toString(16)},f.prototype.toBuffer=function(e,t){return r(void 0!==o),this.toArrayLike(o,e,t)},f.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},f.prototype.toArrayLike=function(e,t,i){var n=this.byteLength(),f=i||Math.max(1,n);r(n<=f,"byte array longer than desired length"),r(f>0,"Requested array length <= 0"),this.strip();var o,a,s="le"===t,c=new e(f),u=this.clone();if(s){for(a=0;!u.isZero();a++)o=u.andln(255),u.iushrn(8),c[a]=o;for(;a<f;a++)c[a]=0}else{for(a=0;a<f-n;a++)c[a]=0;for(a=0;!u.isZero();a++)o=u.andln(255),u.iushrn(8),c[f-a-1]=o}return c},Math.clz32?f.prototype._countBits=function(e){return 32-Math.clz32(e)}:f.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},f.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},f.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},f.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},f.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},f.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},f.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},f.prototype.isNeg=function(){return 0!==this.negative},f.prototype.neg=function(){return this.clone().ineg()},f.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},f.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},f.prototype.ior=function(e){return r(0==(this.negative|e.negative)),this.iuor(e)},f.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},f.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},f.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this.strip()},f.prototype.iand=function(e){return r(0==(this.negative|e.negative)),this.iuand(e)},f.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},f.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},f.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var i=0;i<r.length;i++)this.words[i]=t.words[i]^r.words[i];if(this!==t)for(;i<t.length;i++)this.words[i]=t.words[i];return this.length=t.length,this.strip()},f.prototype.ixor=function(e){return r(0==(this.negative|e.negative)),this.iuxor(e)},f.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},f.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},f.prototype.inotn=function(e){r("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),i=e%26;this._expand(t),i>0&&t--;for(var n=0;n<t;n++)this.words[n]=67108863&~this.words[n];return i>0&&(this.words[n]=~this.words[n]&67108863>>26-i),this.strip()},f.prototype.notn=function(e){return this.clone().inotn(e)},f.prototype.setn=function(e,t){r("number"==typeof e&&e>=0);var i=e/26|0,n=e%26;return this._expand(i+1),this.words[i]=t?this.words[i]|1<<n:this.words[i]&~(1<<n),this.strip()},f.prototype.iadd=function(e){var t,r,i;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,i=e):(r=e,i=this);for(var n=0,f=0;f<i.length;f++)t=(0|r.words[f])+(0|i.words[f])+n,this.words[f]=67108863&t,n=t>>>26;for(;0!==n&&f<r.length;f++)t=(0|r.words[f])+n,this.words[f]=67108863&t,n=t>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;f<r.length;f++)this.words[f]=r.words[f];return this},f.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},f.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,i,n=this.cmp(e);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=e):(r=e,i=this);for(var f=0,o=0;o<i.length;o++)f=(t=(0|r.words[o])-(0|i.words[o])+f)>>26,this.words[o]=67108863&t;for(;0!==f&&o<r.length;o++)f=(t=(0|r.words[o])+f)>>26,this.words[o]=67108863&t;if(0===f&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},f.prototype.sub=function(e){return this.clone().isub(e)};var l=function(e,t,r){var i,n,f,o=e.words,a=t.words,s=r.words,c=0,u=0|o[0],d=8191&u,h=u>>>13,l=0|o[1],b=8191&l,p=l>>>13,_=0|o[2],v=8191&_,m=_>>>13,y=0|o[3],g=8191&y,w=y>>>13,A=0|o[4],E=8191&A,I=A>>>13,M=0|o[5],S=8191&M,L=M>>>13,x=0|o[6],k=8191&x,B=x>>>13,P=0|o[7],T=8191&P,R=P>>>13,C=0|o[8],N=8191&C,z=C>>>13,j=0|o[9],D=8191&j,K=j>>>13,O=0|a[0],V=8191&O,U=O>>>13,q=0|a[1],Y=8191&q,F=q>>>13,H=0|a[2],G=8191&H,W=H>>>13,Z=0|a[3],J=8191&Z,X=Z>>>13,$=0|a[4],Q=8191&$,ee=$>>>13,te=0|a[5],re=8191&te,ie=te>>>13,ne=0|a[6],fe=8191&ne,oe=ne>>>13,ae=0|a[7],se=8191&ae,ce=ae>>>13,ue=0|a[8],de=8191&ue,he=ue>>>13,le=0|a[9],be=8191&le,pe=le>>>13;r.negative=e.negative^t.negative,r.length=19;var _e=(c+(i=Math.imul(d,V))|0)+((8191&(n=(n=Math.imul(d,U))+Math.imul(h,V)|0))<<13)|0;c=((f=Math.imul(h,U))+(n>>>13)|0)+(_e>>>26)|0,_e&=67108863,i=Math.imul(b,V),n=(n=Math.imul(b,U))+Math.imul(p,V)|0,f=Math.imul(p,U);var ve=(c+(i=i+Math.imul(d,Y)|0)|0)+((8191&(n=(n=n+Math.imul(d,F)|0)+Math.imul(h,Y)|0))<<13)|0;c=((f=f+Math.imul(h,F)|0)+(n>>>13)|0)+(ve>>>26)|0,ve&=67108863,i=Math.imul(v,V),n=(n=Math.imul(v,U))+Math.imul(m,V)|0,f=Math.imul(m,U),i=i+Math.imul(b,Y)|0,n=(n=n+Math.imul(b,F)|0)+Math.imul(p,Y)|0,f=f+Math.imul(p,F)|0;var me=(c+(i=i+Math.imul(d,G)|0)|0)+((8191&(n=(n=n+Math.imul(d,W)|0)+Math.imul(h,G)|0))<<13)|0;c=((f=f+Math.imul(h,W)|0)+(n>>>13)|0)+(me>>>26)|0,me&=67108863,i=Math.imul(g,V),n=(n=Math.imul(g,U))+Math.imul(w,V)|0,f=Math.imul(w,U),i=i+Math.imul(v,Y)|0,n=(n=n+Math.imul(v,F)|0)+Math.imul(m,Y)|0,f=f+Math.imul(m,F)|0,i=i+Math.imul(b,G)|0,n=(n=n+Math.imul(b,W)|0)+Math.imul(p,G)|0,f=f+Math.imul(p,W)|0;var ye=(c+(i=i+Math.imul(d,J)|0)|0)+((8191&(n=(n=n+Math.imul(d,X)|0)+Math.imul(h,J)|0))<<13)|0;c=((f=f+Math.imul(h,X)|0)+(n>>>13)|0)+(ye>>>26)|0,ye&=67108863,i=Math.imul(E,V),n=(n=Math.imul(E,U))+Math.imul(I,V)|0,f=Math.imul(I,U),i=i+Math.imul(g,Y)|0,n=(n=n+Math.imul(g,F)|0)+Math.imul(w,Y)|0,f=f+Math.imul(w,F)|0,i=i+Math.imul(v,G)|0,n=(n=n+Math.imul(v,W)|0)+Math.imul(m,G)|0,f=f+Math.imul(m,W)|0,i=i+Math.imul(b,J)|0,n=(n=n+Math.imul(b,X)|0)+Math.imul(p,J)|0,f=f+Math.imul(p,X)|0;var ge=(c+(i=i+Math.imul(d,Q)|0)|0)+((8191&(n=(n=n+Math.imul(d,ee)|0)+Math.imul(h,Q)|0))<<13)|0;c=((f=f+Math.imul(h,ee)|0)+(n>>>13)|0)+(ge>>>26)|0,ge&=67108863,i=Math.imul(S,V),n=(n=Math.imul(S,U))+Math.imul(L,V)|0,f=Math.imul(L,U),i=i+Math.imul(E,Y)|0,n=(n=n+Math.imul(E,F)|0)+Math.imul(I,Y)|0,f=f+Math.imul(I,F)|0,i=i+Math.imul(g,G)|0,n=(n=n+Math.imul(g,W)|0)+Math.imul(w,G)|0,f=f+Math.imul(w,W)|0,i=i+Math.imul(v,J)|0,n=(n=n+Math.imul(v,X)|0)+Math.imul(m,J)|0,f=f+Math.imul(m,X)|0,i=i+Math.imul(b,Q)|0,n=(n=n+Math.imul(b,ee)|0)+Math.imul(p,Q)|0,f=f+Math.imul(p,ee)|0;var we=(c+(i=i+Math.imul(d,re)|0)|0)+((8191&(n=(n=n+Math.imul(d,ie)|0)+Math.imul(h,re)|0))<<13)|0;c=((f=f+Math.imul(h,ie)|0)+(n>>>13)|0)+(we>>>26)|0,we&=67108863,i=Math.imul(k,V),n=(n=Math.imul(k,U))+Math.imul(B,V)|0,f=Math.imul(B,U),i=i+Math.imul(S,Y)|0,n=(n=n+Math.imul(S,F)|0)+Math.imul(L,Y)|0,f=f+Math.imul(L,F)|0,i=i+Math.imul(E,G)|0,n=(n=n+Math.imul(E,W)|0)+Math.imul(I,G)|0,f=f+Math.imul(I,W)|0,i=i+Math.imul(g,J)|0,n=(n=n+Math.imul(g,X)|0)+Math.imul(w,J)|0,f=f+Math.imul(w,X)|0,i=i+Math.imul(v,Q)|0,n=(n=n+Math.imul(v,ee)|0)+Math.imul(m,Q)|0,f=f+Math.imul(m,ee)|0,i=i+Math.imul(b,re)|0,n=(n=n+Math.imul(b,ie)|0)+Math.imul(p,re)|0,f=f+Math.imul(p,ie)|0;var Ae=(c+(i=i+Math.imul(d,fe)|0)|0)+((8191&(n=(n=n+Math.imul(d,oe)|0)+Math.imul(h,fe)|0))<<13)|0;c=((f=f+Math.imul(h,oe)|0)+(n>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,i=Math.imul(T,V),n=(n=Math.imul(T,U))+Math.imul(R,V)|0,f=Math.imul(R,U),i=i+Math.imul(k,Y)|0,n=(n=n+Math.imul(k,F)|0)+Math.imul(B,Y)|0,f=f+Math.imul(B,F)|0,i=i+Math.imul(S,G)|0,n=(n=n+Math.imul(S,W)|0)+Math.imul(L,G)|0,f=f+Math.imul(L,W)|0,i=i+Math.imul(E,J)|0,n=(n=n+Math.imul(E,X)|0)+Math.imul(I,J)|0,f=f+Math.imul(I,X)|0,i=i+Math.imul(g,Q)|0,n=(n=n+Math.imul(g,ee)|0)+Math.imul(w,Q)|0,f=f+Math.imul(w,ee)|0,i=i+Math.imul(v,re)|0,n=(n=n+Math.imul(v,ie)|0)+Math.imul(m,re)|0,f=f+Math.imul(m,ie)|0,i=i+Math.imul(b,fe)|0,n=(n=n+Math.imul(b,oe)|0)+Math.imul(p,fe)|0,f=f+Math.imul(p,oe)|0;var Ee=(c+(i=i+Math.imul(d,se)|0)|0)+((8191&(n=(n=n+Math.imul(d,ce)|0)+Math.imul(h,se)|0))<<13)|0;c=((f=f+Math.imul(h,ce)|0)+(n>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,i=Math.imul(N,V),n=(n=Math.imul(N,U))+Math.imul(z,V)|0,f=Math.imul(z,U),i=i+Math.imul(T,Y)|0,n=(n=n+Math.imul(T,F)|0)+Math.imul(R,Y)|0,f=f+Math.imul(R,F)|0,i=i+Math.imul(k,G)|0,n=(n=n+Math.imul(k,W)|0)+Math.imul(B,G)|0,f=f+Math.imul(B,W)|0,i=i+Math.imul(S,J)|0,n=(n=n+Math.imul(S,X)|0)+Math.imul(L,J)|0,f=f+Math.imul(L,X)|0,i=i+Math.imul(E,Q)|0,n=(n=n+Math.imul(E,ee)|0)+Math.imul(I,Q)|0,f=f+Math.imul(I,ee)|0,i=i+Math.imul(g,re)|0,n=(n=n+Math.imul(g,ie)|0)+Math.imul(w,re)|0,f=f+Math.imul(w,ie)|0,i=i+Math.imul(v,fe)|0,n=(n=n+Math.imul(v,oe)|0)+Math.imul(m,fe)|0,f=f+Math.imul(m,oe)|0,i=i+Math.imul(b,se)|0,n=(n=n+Math.imul(b,ce)|0)+Math.imul(p,se)|0,f=f+Math.imul(p,ce)|0;var Ie=(c+(i=i+Math.imul(d,de)|0)|0)+((8191&(n=(n=n+Math.imul(d,he)|0)+Math.imul(h,de)|0))<<13)|0;c=((f=f+Math.imul(h,he)|0)+(n>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,i=Math.imul(D,V),n=(n=Math.imul(D,U))+Math.imul(K,V)|0,f=Math.imul(K,U),i=i+Math.imul(N,Y)|0,n=(n=n+Math.imul(N,F)|0)+Math.imul(z,Y)|0,f=f+Math.imul(z,F)|0,i=i+Math.imul(T,G)|0,n=(n=n+Math.imul(T,W)|0)+Math.imul(R,G)|0,f=f+Math.imul(R,W)|0,i=i+Math.imul(k,J)|0,n=(n=n+Math.imul(k,X)|0)+Math.imul(B,J)|0,f=f+Math.imul(B,X)|0,i=i+Math.imul(S,Q)|0,n=(n=n+Math.imul(S,ee)|0)+Math.imul(L,Q)|0,f=f+Math.imul(L,ee)|0,i=i+Math.imul(E,re)|0,n=(n=n+Math.imul(E,ie)|0)+Math.imul(I,re)|0,f=f+Math.imul(I,ie)|0,i=i+Math.imul(g,fe)|0,n=(n=n+Math.imul(g,oe)|0)+Math.imul(w,fe)|0,f=f+Math.imul(w,oe)|0,i=i+Math.imul(v,se)|0,n=(n=n+Math.imul(v,ce)|0)+Math.imul(m,se)|0,f=f+Math.imul(m,ce)|0,i=i+Math.imul(b,de)|0,n=(n=n+Math.imul(b,he)|0)+Math.imul(p,de)|0,f=f+Math.imul(p,he)|0;var Me=(c+(i=i+Math.imul(d,be)|0)|0)+((8191&(n=(n=n+Math.imul(d,pe)|0)+Math.imul(h,be)|0))<<13)|0;c=((f=f+Math.imul(h,pe)|0)+(n>>>13)|0)+(Me>>>26)|0,Me&=67108863,i=Math.imul(D,Y),n=(n=Math.imul(D,F))+Math.imul(K,Y)|0,f=Math.imul(K,F),i=i+Math.imul(N,G)|0,n=(n=n+Math.imul(N,W)|0)+Math.imul(z,G)|0,f=f+Math.imul(z,W)|0,i=i+Math.imul(T,J)|0,n=(n=n+Math.imul(T,X)|0)+Math.imul(R,J)|0,f=f+Math.imul(R,X)|0,i=i+Math.imul(k,Q)|0,n=(n=n+Math.imul(k,ee)|0)+Math.imul(B,Q)|0,f=f+Math.imul(B,ee)|0,i=i+Math.imul(S,re)|0,n=(n=n+Math.imul(S,ie)|0)+Math.imul(L,re)|0,f=f+Math.imul(L,ie)|0,i=i+Math.imul(E,fe)|0,n=(n=n+Math.imul(E,oe)|0)+Math.imul(I,fe)|0,f=f+Math.imul(I,oe)|0,i=i+Math.imul(g,se)|0,n=(n=n+Math.imul(g,ce)|0)+Math.imul(w,se)|0,f=f+Math.imul(w,ce)|0,i=i+Math.imul(v,de)|0,n=(n=n+Math.imul(v,he)|0)+Math.imul(m,de)|0,f=f+Math.imul(m,he)|0;var Se=(c+(i=i+Math.imul(b,be)|0)|0)+((8191&(n=(n=n+Math.imul(b,pe)|0)+Math.imul(p,be)|0))<<13)|0;c=((f=f+Math.imul(p,pe)|0)+(n>>>13)|0)+(Se>>>26)|0,Se&=67108863,i=Math.imul(D,G),n=(n=Math.imul(D,W))+Math.imul(K,G)|0,f=Math.imul(K,W),i=i+Math.imul(N,J)|0,n=(n=n+Math.imul(N,X)|0)+Math.imul(z,J)|0,f=f+Math.imul(z,X)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,ee)|0)+Math.imul(R,Q)|0,f=f+Math.imul(R,ee)|0,i=i+Math.imul(k,re)|0,n=(n=n+Math.imul(k,ie)|0)+Math.imul(B,re)|0,f=f+Math.imul(B,ie)|0,i=i+Math.imul(S,fe)|0,n=(n=n+Math.imul(S,oe)|0)+Math.imul(L,fe)|0,f=f+Math.imul(L,oe)|0,i=i+Math.imul(E,se)|0,n=(n=n+Math.imul(E,ce)|0)+Math.imul(I,se)|0,f=f+Math.imul(I,ce)|0,i=i+Math.imul(g,de)|0,n=(n=n+Math.imul(g,he)|0)+Math.imul(w,de)|0,f=f+Math.imul(w,he)|0;var Le=(c+(i=i+Math.imul(v,be)|0)|0)+((8191&(n=(n=n+Math.imul(v,pe)|0)+Math.imul(m,be)|0))<<13)|0;c=((f=f+Math.imul(m,pe)|0)+(n>>>13)|0)+(Le>>>26)|0,Le&=67108863,i=Math.imul(D,J),n=(n=Math.imul(D,X))+Math.imul(K,J)|0,f=Math.imul(K,X),i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,ee)|0)+Math.imul(z,Q)|0,f=f+Math.imul(z,ee)|0,i=i+Math.imul(T,re)|0,n=(n=n+Math.imul(T,ie)|0)+Math.imul(R,re)|0,f=f+Math.imul(R,ie)|0,i=i+Math.imul(k,fe)|0,n=(n=n+Math.imul(k,oe)|0)+Math.imul(B,fe)|0,f=f+Math.imul(B,oe)|0,i=i+Math.imul(S,se)|0,n=(n=n+Math.imul(S,ce)|0)+Math.imul(L,se)|0,f=f+Math.imul(L,ce)|0,i=i+Math.imul(E,de)|0,n=(n=n+Math.imul(E,he)|0)+Math.imul(I,de)|0,f=f+Math.imul(I,he)|0;var xe=(c+(i=i+Math.imul(g,be)|0)|0)+((8191&(n=(n=n+Math.imul(g,pe)|0)+Math.imul(w,be)|0))<<13)|0;c=((f=f+Math.imul(w,pe)|0)+(n>>>13)|0)+(xe>>>26)|0,xe&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,ee))+Math.imul(K,Q)|0,f=Math.imul(K,ee),i=i+Math.imul(N,re)|0,n=(n=n+Math.imul(N,ie)|0)+Math.imul(z,re)|0,f=f+Math.imul(z,ie)|0,i=i+Math.imul(T,fe)|0,n=(n=n+Math.imul(T,oe)|0)+Math.imul(R,fe)|0,f=f+Math.imul(R,oe)|0,i=i+Math.imul(k,se)|0,n=(n=n+Math.imul(k,ce)|0)+Math.imul(B,se)|0,f=f+Math.imul(B,ce)|0,i=i+Math.imul(S,de)|0,n=(n=n+Math.imul(S,he)|0)+Math.imul(L,de)|0,f=f+Math.imul(L,he)|0;var ke=(c+(i=i+Math.imul(E,be)|0)|0)+((8191&(n=(n=n+Math.imul(E,pe)|0)+Math.imul(I,be)|0))<<13)|0;c=((f=f+Math.imul(I,pe)|0)+(n>>>13)|0)+(ke>>>26)|0,ke&=67108863,i=Math.imul(D,re),n=(n=Math.imul(D,ie))+Math.imul(K,re)|0,f=Math.imul(K,ie),i=i+Math.imul(N,fe)|0,n=(n=n+Math.imul(N,oe)|0)+Math.imul(z,fe)|0,f=f+Math.imul(z,oe)|0,i=i+Math.imul(T,se)|0,n=(n=n+Math.imul(T,ce)|0)+Math.imul(R,se)|0,f=f+Math.imul(R,ce)|0,i=i+Math.imul(k,de)|0,n=(n=n+Math.imul(k,he)|0)+Math.imul(B,de)|0,f=f+Math.imul(B,he)|0;var Be=(c+(i=i+Math.imul(S,be)|0)|0)+((8191&(n=(n=n+Math.imul(S,pe)|0)+Math.imul(L,be)|0))<<13)|0;c=((f=f+Math.imul(L,pe)|0)+(n>>>13)|0)+(Be>>>26)|0,Be&=67108863,i=Math.imul(D,fe),n=(n=Math.imul(D,oe))+Math.imul(K,fe)|0,f=Math.imul(K,oe),i=i+Math.imul(N,se)|0,n=(n=n+Math.imul(N,ce)|0)+Math.imul(z,se)|0,f=f+Math.imul(z,ce)|0,i=i+Math.imul(T,de)|0,n=(n=n+Math.imul(T,he)|0)+Math.imul(R,de)|0,f=f+Math.imul(R,he)|0;var Pe=(c+(i=i+Math.imul(k,be)|0)|0)+((8191&(n=(n=n+Math.imul(k,pe)|0)+Math.imul(B,be)|0))<<13)|0;c=((f=f+Math.imul(B,pe)|0)+(n>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,i=Math.imul(D,se),n=(n=Math.imul(D,ce))+Math.imul(K,se)|0,f=Math.imul(K,ce),i=i+Math.imul(N,de)|0,n=(n=n+Math.imul(N,he)|0)+Math.imul(z,de)|0,f=f+Math.imul(z,he)|0;var Te=(c+(i=i+Math.imul(T,be)|0)|0)+((8191&(n=(n=n+Math.imul(T,pe)|0)+Math.imul(R,be)|0))<<13)|0;c=((f=f+Math.imul(R,pe)|0)+(n>>>13)|0)+(Te>>>26)|0,Te&=67108863,i=Math.imul(D,de),n=(n=Math.imul(D,he))+Math.imul(K,de)|0,f=Math.imul(K,he);var Re=(c+(i=i+Math.imul(N,be)|0)|0)+((8191&(n=(n=n+Math.imul(N,pe)|0)+Math.imul(z,be)|0))<<13)|0;c=((f=f+Math.imul(z,pe)|0)+(n>>>13)|0)+(Re>>>26)|0,Re&=67108863;var Ce=(c+(i=Math.imul(D,be))|0)+((8191&(n=(n=Math.imul(D,pe))+Math.imul(K,be)|0))<<13)|0;return c=((f=Math.imul(K,pe))+(n>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,s[0]=_e,s[1]=ve,s[2]=me,s[3]=ye,s[4]=ge,s[5]=we,s[6]=Ae,s[7]=Ee,s[8]=Ie,s[9]=Me,s[10]=Se,s[11]=Le,s[12]=xe,s[13]=ke,s[14]=Be,s[15]=Pe,s[16]=Te,s[17]=Re,s[18]=Ce,0!==c&&(s[19]=c,r.length++),r};function b(e,t,r){return(new p).mulp(e,t,r)}function p(e,t){this.x=e,this.y=t}Math.imul||(l=h),f.prototype.mulTo=function(e,t){var r=this.length+e.length;return 10===this.length&&10===e.length?l(this,e,t):r<63?h(this,e,t):r<1024?function(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var i=0,n=0,f=0;f<r.length-1;f++){var o=n;n=0;for(var a=67108863&i,s=Math.min(f,t.length-1),c=Math.max(0,f-e.length+1);c<=s;c++){var u=f-c,d=(0|e.words[u])*(0|t.words[c]),h=67108863&d;a=67108863&(h=h+a|0),n+=(o=(o=o+(d/67108864|0)|0)+(h>>>26)|0)>>>26,o&=67108863}r.words[f]=a,i=o,o=n}return 0!==i?r.words[f]=i:r.length--,r.strip()}(this,e,t):b(this,e,t)},p.prototype.makeRBT=function(e){for(var t=new Array(e),r=f.prototype._countBits(e)-1,i=0;i<e;i++)t[i]=this.revBin(i,r,e);return t},p.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var i=0,n=0;n<t;n++)i|=(1&e)<<t-n-1,e>>=1;return i},p.prototype.permute=function(e,t,r,i,n,f){for(var o=0;o<f;o++)i[o]=t[e[o]],n[o]=r[e[o]]},p.prototype.transform=function(e,t,r,i,n,f){this.permute(f,e,t,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,s=Math.cos(2*Math.PI/a),c=Math.sin(2*Math.PI/a),u=0;u<n;u+=a)for(var d=s,h=c,l=0;l<o;l++){var b=r[u+l],p=i[u+l],_=r[u+l+o],v=i[u+l+o],m=d*_-h*v;v=d*v+h*_,_=m,r[u+l]=b+_,i[u+l]=p+v,r[u+l+o]=b-_,i[u+l+o]=p-v,l!==a&&(m=s*d-c*h,h=s*h+c*d,d=m)}},p.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},p.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=e[i];e[i]=e[r-i-1],e[r-i-1]=n,n=t[i],t[i]=-t[r-i-1],t[r-i-1]=-n}},p.prototype.normalize13b=function(e,t){for(var r=0,i=0;i<t/2;i++){var n=8192*Math.round(e[2*i+1]/t)+Math.round(e[2*i]/t)+r;e[i]=67108863&n,r=n<67108864?0:n/67108864|0}return e},p.prototype.convert13b=function(e,t,i,n){for(var f=0,o=0;o<t;o++)f+=0|e[o],i[2*o]=8191&f,f>>>=13,i[2*o+1]=8191&f,f>>>=13;for(o=2*t;o<n;++o)i[o]=0;r(0===f),r(0==(-8192&f))},p.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},p.prototype.mulp=function(e,t,r){var i=2*this.guessLen13b(e.length,t.length),n=this.makeRBT(i),f=this.stub(i),o=new Array(i),a=new Array(i),s=new Array(i),c=new Array(i),u=new Array(i),d=new Array(i),h=r.words;h.length=i,this.convert13b(e.words,e.length,o,i),this.convert13b(t.words,t.length,c,i),this.transform(o,f,a,s,i,n),this.transform(c,f,u,d,i,n);for(var l=0;l<i;l++){var b=a[l]*u[l]-s[l]*d[l];s[l]=a[l]*d[l]+s[l]*u[l],a[l]=b}return this.conjugate(a,s,i),this.transform(a,s,h,f,i,n),this.conjugate(h,f,i),this.normalize13b(h,i),r.negative=e.negative^t.negative,r.length=e.length+t.length,r.strip()},f.prototype.mul=function(e){var t=new f(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},f.prototype.mulf=function(e){var t=new f(null);return t.words=new Array(this.length+e.length),b(this,e,t)},f.prototype.imul=function(e){return this.clone().mulTo(e,this)},f.prototype.imuln=function(e){r("number"==typeof e),r(e<67108864);for(var t=0,i=0;i<this.length;i++){var n=(0|this.words[i])*e,f=(67108863&n)+(67108863&t);t>>=26,t+=n/67108864|0,t+=f>>>26,this.words[i]=67108863&f}return 0!==t&&(this.words[i]=t,this.length++),this},f.prototype.muln=function(e){return this.clone().imuln(e)},f.prototype.sqr=function(){return this.mul(this)},f.prototype.isqr=function(){return this.imul(this.clone())},f.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var i=r/26|0,n=r%26;t[r]=(e.words[i]&1<<n)>>>n}return t}(e);if(0===t.length)return new f(1);for(var r=this,i=0;i<t.length&&0===t[i];i++,r=r.sqr());if(++i<t.length)for(var n=r.sqr();i<t.length;i++,n=n.sqr())0!==t[i]&&(r=r.mul(n));return r},f.prototype.iushln=function(e){r("number"==typeof e&&e>=0);var t,i=e%26,n=(e-i)/26,f=67108863>>>26-i<<26-i;if(0!==i){var o=0;for(t=0;t<this.length;t++){var a=this.words[t]&f,s=(0|this.words[t])-a<<i;this.words[t]=s|o,o=a>>>26-i}o&&(this.words[t]=o,this.length++)}if(0!==n){for(t=this.length-1;t>=0;t--)this.words[t+n]=this.words[t];for(t=0;t<n;t++)this.words[t]=0;this.length+=n}return this.strip()},f.prototype.ishln=function(e){return r(0===this.negative),this.iushln(e)},f.prototype.iushrn=function(e,t,i){var n;r("number"==typeof e&&e>=0),n=t?(t-t%26)/26:0;var f=e%26,o=Math.min((e-f)/26,this.length),a=67108863^67108863>>>f<<f,s=i;if(n-=o,n=Math.max(0,n),s){for(var c=0;c<o;c++)s.words[c]=this.words[c];s.length=o}if(0===o);else if(this.length>o)for(this.length-=o,c=0;c<this.length;c++)this.words[c]=this.words[c+o];else this.words[0]=0,this.length=1;var u=0;for(c=this.length-1;c>=0&&(0!==u||c>=n);c--){var d=0|this.words[c];this.words[c]=u<<26-f|d>>>f,u=d&a}return s&&0!==u&&(s.words[s.length++]=u),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},f.prototype.ishrn=function(e,t,i){return r(0===this.negative),this.iushrn(e,t,i)},f.prototype.shln=function(e){return this.clone().ishln(e)},f.prototype.ushln=function(e){return this.clone().iushln(e)},f.prototype.shrn=function(e){return this.clone().ishrn(e)},f.prototype.ushrn=function(e){return this.clone().iushrn(e)},f.prototype.testn=function(e){r("number"==typeof e&&e>=0);var t=e%26,i=(e-t)/26,n=1<<t;return!(this.length<=i)&&!!(this.words[i]&n)},f.prototype.imaskn=function(e){r("number"==typeof e&&e>=0);var t=e%26,i=(e-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=i)return this;if(0!==t&&i++,this.length=Math.min(i,this.length),0!==t){var n=67108863^67108863>>>t<<t;this.words[this.length-1]&=n}return this.strip()},f.prototype.maskn=function(e){return this.clone().imaskn(e)},f.prototype.iaddn=function(e){return r("number"==typeof e),r(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},f.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},f.prototype.isubn=function(e){if(r("number"==typeof e),r(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},f.prototype.addn=function(e){return this.clone().iaddn(e)},f.prototype.subn=function(e){return this.clone().isubn(e)},f.prototype.iabs=function(){return this.negative=0,this},f.prototype.abs=function(){return this.clone().iabs()},f.prototype._ishlnsubmul=function(e,t,i){var n,f,o=e.length+i;this._expand(o);var a=0;for(n=0;n<e.length;n++){f=(0|this.words[n+i])+a;var s=(0|e.words[n])*t;a=((f-=67108863&s)>>26)-(s/67108864|0),this.words[n+i]=67108863&f}for(;n<this.length-i;n++)a=(f=(0|this.words[n+i])+a)>>26,this.words[n+i]=67108863&f;if(0===a)return this.strip();for(r(-1===a),a=0,n=0;n<this.length;n++)a=(f=-(0|this.words[n])+a)>>26,this.words[n]=67108863&f;return this.negative=1,this.strip()},f.prototype._wordDiv=function(e,t){var r=(this.length,e.length),i=this.clone(),n=e,o=0|n.words[n.length-1];0!==(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,s=i.length-n.length;if("mod"!==t){(a=new f(null)).length=s+1,a.words=new Array(a.length);for(var c=0;c<a.length;c++)a.words[c]=0}var u=i.clone()._ishlnsubmul(n,1,s);0===u.negative&&(i=u,a&&(a.words[s]=1));for(var d=s-1;d>=0;d--){var h=67108864*(0|i.words[n.length+d])+(0|i.words[n.length+d-1]);for(h=Math.min(h/o|0,67108863),i._ishlnsubmul(n,h,d);0!==i.negative;)h--,i.negative=0,i._ishlnsubmul(n,1,d),i.isZero()||(i.negative^=1);a&&(a.words[d]=h)}return a&&a.strip(),i.strip(),"div"!==t&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},f.prototype.divmod=function(e,t,i){return r(!e.isZero()),this.isZero()?{div:new f(0),mod:new f(0)}:0!==this.negative&&0===e.negative?(a=this.neg().divmod(e,t),"mod"!==t&&(n=a.div.neg()),"div"!==t&&(o=a.mod.neg(),i&&0!==o.negative&&o.iadd(e)),{div:n,mod:o}):0===this.negative&&0!==e.negative?(a=this.divmod(e.neg(),t),"mod"!==t&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&e.negative)?(a=this.neg().divmod(e.neg(),t),"div"!==t&&(o=a.mod.neg(),i&&0!==o.negative&&o.isub(e)),{div:a.div,mod:o}):e.length>this.length||this.cmp(e)<0?{div:new f(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new f(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new f(this.modn(e.words[0]))}:this._wordDiv(e,t);var n,o,a},f.prototype.div=function(e){return this.divmod(e,"div",!1).div},f.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},f.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},f.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,i=e.ushrn(1),n=e.andln(1),f=r.cmp(i);return f<0||1===n&&0===f?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},f.prototype.modn=function(e){r(e<=67108863);for(var t=(1<<26)%e,i=0,n=this.length-1;n>=0;n--)i=(t*i+(0|this.words[n]))%e;return i},f.prototype.idivn=function(e){r(e<=67108863);for(var t=0,i=this.length-1;i>=0;i--){var n=(0|this.words[i])+67108864*t;this.words[i]=n/e|0,t=n%e}return this.strip()},f.prototype.divn=function(e){return this.clone().idivn(e)},f.prototype.egcd=function(e){r(0===e.negative),r(!e.isZero());var t=this,i=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n=new f(1),o=new f(0),a=new f(0),s=new f(1),c=0;t.isEven()&&i.isEven();)t.iushrn(1),i.iushrn(1),++c;for(var u=i.clone(),d=t.clone();!t.isZero();){for(var h=0,l=1;0==(t.words[0]&l)&&h<26;++h,l<<=1);if(h>0)for(t.iushrn(h);h-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(u),o.isub(d)),n.iushrn(1),o.iushrn(1);for(var b=0,p=1;0==(i.words[0]&p)&&b<26;++b,p<<=1);if(b>0)for(i.iushrn(b);b-- >0;)(a.isOdd()||s.isOdd())&&(a.iadd(u),s.isub(d)),a.iushrn(1),s.iushrn(1);t.cmp(i)>=0?(t.isub(i),n.isub(a),o.isub(s)):(i.isub(t),a.isub(n),s.isub(o))}return{a:a,b:s,gcd:i.iushln(c)}},f.prototype._invmp=function(e){r(0===e.negative),r(!e.isZero());var t=this,i=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n,o=new f(1),a=new f(0),s=i.clone();t.cmpn(1)>0&&i.cmpn(1)>0;){for(var c=0,u=1;0==(t.words[0]&u)&&c<26;++c,u<<=1);if(c>0)for(t.iushrn(c);c-- >0;)o.isOdd()&&o.iadd(s),o.iushrn(1);for(var d=0,h=1;0==(i.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(i.iushrn(d);d-- >0;)a.isOdd()&&a.iadd(s),a.iushrn(1);t.cmp(i)>=0?(t.isub(i),o.isub(a)):(i.isub(t),a.isub(o))}return(n=0===t.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(e),n},f.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var i=0;t.isEven()&&r.isEven();i++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=t.cmp(r);if(n<0){var f=t;t=r,r=f}else if(0===n||0===r.cmpn(1))break;t.isub(r)}return r.iushln(i)},f.prototype.invm=function(e){return this.egcd(e).a.umod(e)},f.prototype.isEven=function(){return 0==(1&this.words[0])},f.prototype.isOdd=function(){return 1==(1&this.words[0])},f.prototype.andln=function(e){return this.words[0]&e},f.prototype.bincn=function(e){r("number"==typeof e);var t=e%26,i=(e-t)/26,n=1<<t;if(this.length<=i)return this._expand(i+1),this.words[i]|=n,this;for(var f=n,o=i;0!==f&&o<this.length;o++){var a=0|this.words[o];f=(a+=f)>>>26,a&=67108863,this.words[o]=a}return 0!==f&&(this.words[o]=f,this.length++),this},f.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},f.prototype.cmpn=function(e){var t,i=e<0;if(0!==this.negative&&!i)return-1;if(0===this.negative&&i)return 1;if(this.strip(),this.length>1)t=1;else{i&&(e=-e),r(e<=67108863,"Number is too big");var n=0|this.words[0];t=n===e?0:n<e?-1:1}return 0!==this.negative?0|-t:t},f.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},f.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|e.words[r];if(i!==n){i<n?t=-1:i>n&&(t=1);break}}return t},f.prototype.gtn=function(e){return 1===this.cmpn(e)},f.prototype.gt=function(e){return 1===this.cmp(e)},f.prototype.gten=function(e){return this.cmpn(e)>=0},f.prototype.gte=function(e){return this.cmp(e)>=0},f.prototype.ltn=function(e){return-1===this.cmpn(e)},f.prototype.lt=function(e){return-1===this.cmp(e)},f.prototype.lten=function(e){return this.cmpn(e)<=0},f.prototype.lte=function(e){return this.cmp(e)<=0},f.prototype.eqn=function(e){return 0===this.cmpn(e)},f.prototype.eq=function(e){return 0===this.cmp(e)},f.red=function(e){return new A(e)},f.prototype.toRed=function(e){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},f.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},f.prototype._forceRed=function(e){return this.red=e,this},f.prototype.forceRed=function(e){return r(!this.red,"Already a number in reduction context"),this._forceRed(e)},f.prototype.redAdd=function(e){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},f.prototype.redIAdd=function(e){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},f.prototype.redSub=function(e){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},f.prototype.redISub=function(e){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},f.prototype.redShl=function(e){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},f.prototype.redMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},f.prototype.redIMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},f.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},f.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},f.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},f.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},f.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},f.prototype.redPow=function(e){return r(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var _={k256:null,p224:null,p192:null,p25519:null};function v(e,t){this.name=e,this.p=new f(t,16),this.n=this.p.bitLength(),this.k=new f(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function m(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function y(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function g(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function w(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function A(e){if("string"==typeof e){var t=f._prime(e);this.m=t.p,this.prime=t}else r(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function E(e){A.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new f(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var e=new f(null);return e.words=new Array(Math.ceil(this.n/13)),e},v.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var i=t<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):r.strip(),r},v.prototype.split=function(e,t){e.iushrn(this.n,0,t)},v.prototype.imulK=function(e){return e.imul(this.k)},i(m,v),m.prototype.split=function(e,t){for(var r=Math.min(e.length,9),i=0;i<r;i++)t.words[i]=e.words[i];if(t.length=r,e.length<=9)return e.words[0]=0,void(e.length=1);var n=e.words[9];for(t.words[t.length++]=4194303&n,i=10;i<e.length;i++){var f=0|e.words[i];e.words[i-10]=(4194303&f)<<4|n>>>22,n=f}n>>>=22,e.words[i-10]=n,0===n&&e.length>10?e.length-=10:e.length-=9},m.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var i=0|e.words[r];t+=977*i,e.words[r]=67108863&t,t=64*i+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(y,v),i(g,v),i(w,v),w.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var i=19*(0|e.words[r])+t,n=67108863&i;i>>>=26,e.words[r]=n,t=i}return 0!==t&&(e.words[e.length++]=t),e},f._prime=function(e){if(_[e])return _[e];var t;if("k256"===e)t=new m;else if("p224"===e)t=new y;else if("p192"===e)t=new g;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new w}return _[e]=t,t},A.prototype._verify1=function(e){r(0===e.negative,"red works only with positives"),r(e.red,"red works only with red numbers")},A.prototype._verify2=function(e,t){r(0==(e.negative|t.negative),"red works only with positives"),r(e.red&&e.red===t.red,"red works only with red numbers")},A.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},A.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},A.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},A.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},A.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},A.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},A.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},A.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},A.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},A.prototype.isqr=function(e){return this.imul(e,e.clone())},A.prototype.sqr=function(e){return this.mul(e,e)},A.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(r(t%2==1),3===t){var i=this.m.add(new f(1)).iushrn(2);return this.pow(e,i)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var a=new f(1).toRed(this),s=a.redNeg(),c=this.m.subn(1).iushrn(1),u=this.m.bitLength();for(u=new f(2*u*u).toRed(this);0!==this.pow(u,c).cmp(s);)u.redIAdd(s);for(var d=this.pow(u,n),h=this.pow(e,n.addn(1).iushrn(1)),l=this.pow(e,n),b=o;0!==l.cmp(a);){for(var p=l,_=0;0!==p.cmp(a);_++)p=p.redSqr();r(_<b);var v=this.pow(d,new f(1).iushln(b-_-1));h=h.redMul(v),d=v.redSqr(),l=l.redMul(d),b=_}return h},A.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},A.prototype.pow=function(e,t){if(t.isZero())return new f(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new f(1).toRed(this),r[1]=e;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],e);var n=r[0],o=0,a=0,s=t.bitLength()%26;for(0===s&&(s=26),i=t.length-1;i>=0;i--){for(var c=t.words[i],u=s-1;u>=0;u--){var d=c>>u&1;n!==r[0]&&(n=this.sqr(n)),0!==d||0!==o?(o<<=1,o|=d,(4===++a||0===i&&0===u)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}s=26}return n},A.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},A.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},f.mont=function(e){return new E(e)},i(E,A),E.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},E.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},E.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),f=n;return n.cmp(this.m)>=0?f=n.isub(this.m):n.cmpn(0)<0&&(f=n.iadd(this.m)),f._forceRed(this)},E.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new f(0)._forceRed(this);var r=e.mul(t),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},E.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f)})),Lt="lib/elliptic.js",xt=["lib"],kt={jscs:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",jshint:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",lint:"npm run jscs && npm run jshint",unit:"istanbul test _mocha --reporter=spec test/index.js",test:"npm run lint && npm run unit",version:"grunt dist && git add dist/"},Bt={type:"git",url:"git@github.com:indutny/elliptic"},Pt=["EC","Elliptic","curve","Cryptography"],Tt="Fedor Indutny <fedor@indutny.com>",Rt={url:"https://github.com/indutny/elliptic/issues"},Ct="https://github.com/indutny/elliptic",Nt={brfs:"^1.4.3",coveralls:"^3.0.8",grunt:"^1.0.4","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^9.0.1",istanbul:"^0.4.2",jscs:"^3.0.7",jshint:"^2.10.3",mocha:"^6.2.2"},zt={"bn.js":"^4.4.0",brorand:"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0",inherits:"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},jt={name:"elliptic",version:"6.5.2",description:"EC cryptography",main:Lt,files:xt,scripts:kt,repository:Bt,keywords:Pt,author:Tt,license:"MIT",bugs:Rt,homepage:Ct,devDependencies:Nt,dependencies:zt},Dt=Object.freeze({__proto__:null,name:"elliptic",version:"6.5.2",description:"EC cryptography",main:Lt,files:xt,scripts:kt,repository:Bt,keywords:Pt,author:Tt,license:"MIT",bugs:Rt,homepage:Ct,devDependencies:Nt,dependencies:zt,default:jt}),Kt=Ot;function Ot(e,t){if(!e)throw new Error(t||"Assertion failed")}Ot.equal=function(e,t,r){if(e!=t)throw new Error(r||"Assertion failed: "+e+" != "+t)};var Vt,Ut=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=t;function i(e){return 1===e.length?"0"+e:e}function n(e){for(var t="",r=0;r<e.length;r++)t+=i(e[r].toString(16));return t}r.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"!=typeof e){for(var i=0;i<e.length;i++)r[i]=0|e[i];return r}if("hex"===t){(e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e);for(i=0;i<e.length;i+=2)r.push(parseInt(e[i]+e[i+1],16))}else for(i=0;i<e.length;i++){var n=e.charCodeAt(i),f=n>>8,o=255&n;f?r.push(f,o):r.push(o)}return r},r.zero2=i,r.toHex=n,r.encode=function(e,t){return"hex"===t?n(e):e}})),qt=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=t;r.assert=Kt,r.toArray=Ut.toArray,r.zero2=Ut.zero2,r.toHex=Ut.toHex,r.encode=Ut.encode,r.getNAF=function(e,t,r){var i=new Array(Math.max(e.bitLength(),r)+1);i.fill(0);for(var n=1<<t+1,f=e.clone(),o=0;o<i.length;o++){var a,s=f.andln(n-1);f.isOdd()?(a=s>(n>>1)-1?(n>>1)-s:s,f.isubn(a)):a=0,i[o]=a,f.iushrn(1)}return i},r.getJSF=function(e,t){var r=[[],[]];e=e.clone(),t=t.clone();for(var i=0,n=0;e.cmpn(-i)>0||t.cmpn(-n)>0;){var f,o,a,s=e.andln(3)+i&3,c=t.andln(3)+n&3;if(3===s&&(s=-1),3===c&&(c=-1),0==(1&s))f=0;else f=3!==(a=e.andln(7)+i&7)&&5!==a||2!==c?s:-s;if(r[0].push(f),0==(1&c))o=0;else o=3!==(a=t.andln(7)+n&7)&&5!==a||2!==s?c:-c;r[1].push(o),2*i===f+1&&(i=1-i),2*n===o+1&&(n=1-n),e.iushrn(1),t.iushrn(1)}return r},r.cachedProperty=function(e,t,r){var i="_"+t;e.prototype[t]=function(){return void 0!==this[i]?this[i]:this[i]=r.call(this)}},r.parseBytes=function(e){return"string"==typeof e?r.toArray(e,"hex"):e},r.intFromLE=function(e){return new St(e,"hex","le")}})),Yt=function(e){return Vt||(Vt=new Ft(null)),Vt.generate(e)};function Ft(e){this.rand=e}var Ht=Ft;if(Ft.prototype.generate=function(e){return this._rand(e)},Ft.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),r=0;r<t.length;r++)t[r]=this.rand.getByte();return t},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?Ft.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?Ft.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:"object"==typeof window&&(Ft.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var Gt=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.r;if("function"!=typeof Gt.randomBytes)throw new Error("Not supported");Ft.prototype._rand=function(e){return Gt.randomBytes(e)}}catch(e){}Yt.Rand=Ht;var Wt=qt.getNAF,Zt=qt.getJSF,Jt=qt.assert;function Xt(e,t){this.type=e,this.p=new St(t.p,16),this.red=t.prime?St.red(t.prime):St.mont(this.p),this.zero=new St(0).toRed(this.red),this.one=new St(1).toRed(this.red),this.two=new St(2).toRed(this.red),this.n=t.n&&new St(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var $t=Xt;function Qt(e,t){this.curve=e,this.type=t,this.precomputed=null}Xt.prototype.point=function(){throw new Error("Not implemented")},Xt.prototype.validate=function(){throw new Error("Not implemented")},Xt.prototype._fixedNafMul=function(e,t){Jt(e.precomputed);var r=e._getDoubles(),i=Wt(t,1,this._bitLength),n=(1<<r.step+1)-(r.step%2==0?2:1);n/=3;for(var f=[],o=0;o<i.length;o+=r.step){var a=0;for(t=o+r.step-1;t>=o;t--)a=(a<<1)+i[t];f.push(a)}for(var s=this.jpoint(null,null,null),c=this.jpoint(null,null,null),u=n;u>0;u--){for(o=0;o<f.length;o++){(a=f[o])===u?c=c.mixedAdd(r.points[o]):a===-u&&(c=c.mixedAdd(r.points[o].neg()))}s=s.add(c)}return s.toP()},Xt.prototype._wnafMul=function(e,t){var r=4,i=e._getNAFPoints(r);r=i.wnd;for(var n=i.points,f=Wt(t,r,this._bitLength),o=this.jpoint(null,null,null),a=f.length-1;a>=0;a--){for(t=0;a>=0&&0===f[a];a--)t++;if(a>=0&&t++,o=o.dblp(t),a<0)break;var s=f[a];Jt(0!==s),o="affine"===e.type?s>0?o.mixedAdd(n[s-1>>1]):o.mixedAdd(n[-s-1>>1].neg()):s>0?o.add(n[s-1>>1]):o.add(n[-s-1>>1].neg())}return"affine"===e.type?o.toP():o},Xt.prototype._wnafMulAdd=function(e,t,r,i,n){for(var f=this._wnafT1,o=this._wnafT2,a=this._wnafT3,s=0,c=0;c<i;c++){var u=(E=t[c])._getNAFPoints(e);f[c]=u.wnd,o[c]=u.points}for(c=i-1;c>=1;c-=2){var d=c-1,h=c;if(1===f[d]&&1===f[h]){var l=[t[d],null,null,t[h]];0===t[d].y.cmp(t[h].y)?(l[1]=t[d].add(t[h]),l[2]=t[d].toJ().mixedAdd(t[h].neg())):0===t[d].y.cmp(t[h].y.redNeg())?(l[1]=t[d].toJ().mixedAdd(t[h]),l[2]=t[d].add(t[h].neg())):(l[1]=t[d].toJ().mixedAdd(t[h]),l[2]=t[d].toJ().mixedAdd(t[h].neg()));var b=[-3,-1,-5,-7,0,7,5,1,3],p=Zt(r[d],r[h]);s=Math.max(p[0].length,s),a[d]=new Array(s),a[h]=new Array(s);for(var _=0;_<s;_++){var v=0|p[0][_],m=0|p[1][_];a[d][_]=b[3*(v+1)+(m+1)],a[h][_]=0,o[d]=l}}else a[d]=Wt(r[d],f[d],this._bitLength),a[h]=Wt(r[h],f[h],this._bitLength),s=Math.max(a[d].length,s),s=Math.max(a[h].length,s)}var y=this.jpoint(null,null,null),g=this._wnafT4;for(c=s;c>=0;c--){for(var w=0;c>=0;){var A=!0;for(_=0;_<i;_++)g[_]=0|a[_][c],0!==g[_]&&(A=!1);if(!A)break;w++,c--}if(c>=0&&w++,y=y.dblp(w),c<0)break;for(_=0;_<i;_++){var E,I=g[_];0!==I&&(I>0?E=o[_][I-1>>1]:I<0&&(E=o[_][-I-1>>1].neg()),y="affine"===E.type?y.mixedAdd(E):y.add(E))}}for(c=0;c<i;c++)o[c]=null;return n?y:y.toP()},Xt.BasePoint=Qt,Qt.prototype.eq=function(){throw new Error("Not implemented")},Qt.prototype.validate=function(){return this.curve.validate(this)},Xt.prototype.decodePoint=function(e,t){e=qt.toArray(e,t);var r=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*r)return 6===e[0]?Jt(e[e.length-1]%2==0):7===e[0]&&Jt(e[e.length-1]%2==1),this.point(e.slice(1,1+r),e.slice(1+r,1+2*r));if((2===e[0]||3===e[0])&&e.length-1===r)return this.pointFromX(e.slice(1,1+r),3===e[0]);throw new Error("Unknown point format")},Qt.prototype.encodeCompressed=function(e){return this.encode(e,!0)},Qt.prototype._encode=function(e){var t=this.curve.p.byteLength(),r=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",t))},Qt.prototype.encode=function(e,t){return qt.encode(this._encode(t),e)},Qt.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},Qt.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},Qt.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],i=this,n=0;n<t;n+=e){for(var f=0;f<e;f++)i=i.dbl();r.push(i)}return{step:e,points:r}},Qt.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],r=(1<<e)-1,i=1===r?null:this.dbl(),n=1;n<r;n++)t[n]=t[n-1].add(i);return{wnd:e,points:t}},Qt.prototype._getBeta=function(){return null},Qt.prototype.dblp=function(e){for(var t=this,r=0;r<e;r++)t=t.dbl();return t};var er=qt.assert;function tr(e){$t.call(this,"short",e),this.a=new St(e.a,16).toRed(this.red),this.b=new St(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}d(tr,$t);var rr=tr;function ir(e,t,r,i){$t.BasePoint.call(this,e,"affine"),null===t&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new St(t,16),this.y=new St(r,16),i&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function nr(e,t,r,i){$t.BasePoint.call(this,e,"jacobian"),null===t&&null===r&&null===i?(this.x=this.curve.one,this.y=this.curve.one,this.z=new St(0)):(this.x=new St(t,16),this.y=new St(r,16),this.z=new St(i,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}function fr(e){$t.call(this,"mont",e),this.a=new St(e.a,16).toRed(this.red),this.b=new St(e.b,16).toRed(this.red),this.i4=new St(4).toRed(this.red).redInvm(),this.two=new St(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}tr.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,r;if(e.beta)t=new St(e.beta,16).toRed(this.red);else{var i=this._getEndoRoots(this.p);t=(t=i[0].cmp(i[1])<0?i[0]:i[1]).toRed(this.red)}if(e.lambda)r=new St(e.lambda,16);else{var n=this._getEndoRoots(this.n);0===this.g.mul(n[0]).x.cmp(this.g.x.redMul(t))?r=n[0]:(r=n[1],er(0===this.g.mul(r).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:r,basis:e.basis?e.basis.map((function(e){return{a:new St(e.a,16),b:new St(e.b,16)}})):this._getEndoBasis(r)}}},tr.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:St.mont(e),r=new St(2).toRed(t).redInvm(),i=r.redNeg(),n=new St(3).toRed(t).redNeg().redSqrt().redMul(r);return[i.redAdd(n).fromRed(),i.redSub(n).fromRed()]},tr.prototype._getEndoBasis=function(e){for(var t,r,i,n,f,o,a,s,c,u=this.n.ushrn(Math.floor(this.n.bitLength()/2)),d=e,h=this.n.clone(),l=new St(1),b=new St(0),p=new St(0),_=new St(1),v=0;0!==d.cmpn(0);){var m=h.div(d);s=h.sub(m.mul(d)),c=p.sub(m.mul(l));var y=_.sub(m.mul(b));if(!i&&s.cmp(u)<0)t=a.neg(),r=l,i=s.neg(),n=c;else if(i&&2==++v)break;a=s,h=d,d=s,p=l,l=c,_=b,b=y}f=s.neg(),o=c;var g=i.sqr().add(n.sqr());return f.sqr().add(o.sqr()).cmp(g)>=0&&(f=t,o=r),i.negative&&(i=i.neg(),n=n.neg()),f.negative&&(f=f.neg(),o=o.neg()),[{a:i,b:n},{a:f,b:o}]},tr.prototype._endoSplit=function(e){var t=this.endo.basis,r=t[0],i=t[1],n=i.b.mul(e).divRound(this.n),f=r.b.neg().mul(e).divRound(this.n),o=n.mul(r.a),a=f.mul(i.a),s=n.mul(r.b),c=f.mul(i.b);return{k1:e.sub(o).sub(a),k2:s.add(c).neg()}},tr.prototype.pointFromX=function(e,t){(e=new St(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),i=r.redSqrt();if(0!==i.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var n=i.fromRed().isOdd();return(t&&!n||!t&&n)&&(i=i.redNeg()),this.point(e,i)},tr.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,r=e.y,i=this.a.redMul(t),n=t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);return 0===r.redSqr().redISub(n).cmpn(0)},tr.prototype._endoWnafMulAdd=function(e,t,r){for(var i=this._endoWnafT1,n=this._endoWnafT2,f=0;f<e.length;f++){var o=this._endoSplit(t[f]),a=e[f],s=a._getBeta();o.k1.negative&&(o.k1.ineg(),a=a.neg(!0)),o.k2.negative&&(o.k2.ineg(),s=s.neg(!0)),i[2*f]=a,i[2*f+1]=s,n[2*f]=o.k1,n[2*f+1]=o.k2}for(var c=this._wnafMulAdd(1,i,n,2*f,r),u=0;u<2*f;u++)i[u]=null,n[u]=null;return c},d(ir,$t.BasePoint),tr.prototype.point=function(e,t,r){return new ir(this,e,t,r)},tr.prototype.pointFromJSON=function(e,t){return ir.fromJSON(this,e,t)},ir.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve,i=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(i)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(i)}}}return t}},ir.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},ir.fromJSON=function(e,t,r){"string"==typeof t&&(t=JSON.parse(t));var i=e.point(t[0],t[1],r);if(!t[2])return i;function n(t){return e.point(t[0],t[1],r)}var f=t[2];return i.precomputed={beta:null,doubles:f.doubles&&{step:f.doubles.step,points:[i].concat(f.doubles.points.map(n))},naf:f.naf&&{wnd:f.naf.wnd,points:[i].concat(f.naf.points.map(n))}},i},ir.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},ir.prototype.isInfinity=function(){return this.inf},ir.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var r=t.redSqr().redISub(this.x).redISub(e.x),i=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,i)},ir.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,r=this.x.redSqr(),i=e.redInvm(),n=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(i),f=n.redSqr().redISub(this.x.redAdd(this.x)),o=n.redMul(this.x.redSub(f)).redISub(this.y);return this.curve.point(f,o)},ir.prototype.getX=function(){return this.x.fromRed()},ir.prototype.getY=function(){return this.y.fromRed()},ir.prototype.mul=function(e){return e=new St(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},ir.prototype.mulAdd=function(e,t,r){var i=[this,t],n=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(i,n):this.curve._wnafMulAdd(1,i,n,2)},ir.prototype.jmulAdd=function(e,t,r){var i=[this,t],n=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(i,n,!0):this.curve._wnafMulAdd(1,i,n,2,!0)},ir.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},ir.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed,i=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(i)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(i)}}}return t},ir.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},d(nr,$t.BasePoint),tr.prototype.jpoint=function(e,t,r){return new nr(this,e,t,r)},nr.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),r=this.x.redMul(t),i=this.y.redMul(t).redMul(e);return this.curve.point(r,i)},nr.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},nr.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),r=this.z.redSqr(),i=this.x.redMul(t),n=e.x.redMul(r),f=this.y.redMul(t.redMul(e.z)),o=e.y.redMul(r.redMul(this.z)),a=i.redSub(n),s=f.redSub(o);if(0===a.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=a.redSqr(),u=c.redMul(a),d=i.redMul(c),h=s.redSqr().redIAdd(u).redISub(d).redISub(d),l=s.redMul(d.redISub(h)).redISub(f.redMul(u)),b=this.z.redMul(e.z).redMul(a);return this.curve.jpoint(h,l,b)},nr.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),r=this.x,i=e.x.redMul(t),n=this.y,f=e.y.redMul(t).redMul(this.z),o=r.redSub(i),a=n.redSub(f);if(0===o.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var s=o.redSqr(),c=s.redMul(o),u=r.redMul(s),d=a.redSqr().redIAdd(c).redISub(u).redISub(u),h=a.redMul(u.redISub(d)).redISub(n.redMul(c)),l=this.z.redMul(o);return this.curve.jpoint(d,h,l)},nr.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var t=this,r=0;r<e;r++)t=t.dbl();return t}var i=this.curve.a,n=this.curve.tinv,f=this.x,o=this.y,a=this.z,s=a.redSqr().redSqr(),c=o.redAdd(o);for(r=0;r<e;r++){var u=f.redSqr(),d=c.redSqr(),h=d.redSqr(),l=u.redAdd(u).redIAdd(u).redIAdd(i.redMul(s)),b=f.redMul(d),p=l.redSqr().redISub(b.redAdd(b)),_=b.redISub(p),v=l.redMul(_);v=v.redIAdd(v).redISub(h);var m=c.redMul(a);r+1<e&&(s=s.redMul(h)),f=p,a=m,c=v}return this.curve.jpoint(f,c.redMul(n),a)},nr.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},nr.prototype._zeroDbl=function(){var e,t,r;if(this.zOne){var i=this.x.redSqr(),n=this.y.redSqr(),f=n.redSqr(),o=this.x.redAdd(n).redSqr().redISub(i).redISub(f);o=o.redIAdd(o);var a=i.redAdd(i).redIAdd(i),s=a.redSqr().redISub(o).redISub(o),c=f.redIAdd(f);c=(c=c.redIAdd(c)).redIAdd(c),e=s,t=a.redMul(o.redISub(s)).redISub(c),r=this.y.redAdd(this.y)}else{var u=this.x.redSqr(),d=this.y.redSqr(),h=d.redSqr(),l=this.x.redAdd(d).redSqr().redISub(u).redISub(h);l=l.redIAdd(l);var b=u.redAdd(u).redIAdd(u),p=b.redSqr(),_=h.redIAdd(h);_=(_=_.redIAdd(_)).redIAdd(_),e=p.redISub(l).redISub(l),t=b.redMul(l.redISub(e)).redISub(_),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(e,t,r)},nr.prototype._threeDbl=function(){var e,t,r;if(this.zOne){var i=this.x.redSqr(),n=this.y.redSqr(),f=n.redSqr(),o=this.x.redAdd(n).redSqr().redISub(i).redISub(f);o=o.redIAdd(o);var a=i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),s=a.redSqr().redISub(o).redISub(o);e=s;var c=f.redIAdd(f);c=(c=c.redIAdd(c)).redIAdd(c),t=a.redMul(o.redISub(s)).redISub(c),r=this.y.redAdd(this.y)}else{var u=this.z.redSqr(),d=this.y.redSqr(),h=this.x.redMul(d),l=this.x.redSub(u).redMul(this.x.redAdd(u));l=l.redAdd(l).redIAdd(l);var b=h.redIAdd(h),p=(b=b.redIAdd(b)).redAdd(b);e=l.redSqr().redISub(p),r=this.y.redAdd(this.z).redSqr().redISub(d).redISub(u);var _=d.redSqr();_=(_=(_=_.redIAdd(_)).redIAdd(_)).redIAdd(_),t=l.redMul(b.redISub(e)).redISub(_)}return this.curve.jpoint(e,t,r)},nr.prototype._dbl=function(){var e=this.curve.a,t=this.x,r=this.y,i=this.z,n=i.redSqr().redSqr(),f=t.redSqr(),o=r.redSqr(),a=f.redAdd(f).redIAdd(f).redIAdd(e.redMul(n)),s=t.redAdd(t),c=(s=s.redIAdd(s)).redMul(o),u=a.redSqr().redISub(c.redAdd(c)),d=c.redISub(u),h=o.redSqr();h=(h=(h=h.redIAdd(h)).redIAdd(h)).redIAdd(h);var l=a.redMul(d).redISub(h),b=r.redAdd(r).redMul(i);return this.curve.jpoint(u,l,b)},nr.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr(),i=t.redSqr(),n=e.redAdd(e).redIAdd(e),f=n.redSqr(),o=this.x.redAdd(t).redSqr().redISub(e).redISub(i),a=(o=(o=(o=o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(f)).redSqr(),s=i.redIAdd(i);s=(s=(s=s.redIAdd(s)).redIAdd(s)).redIAdd(s);var c=n.redIAdd(o).redSqr().redISub(f).redISub(a).redISub(s),u=t.redMul(c);u=(u=u.redIAdd(u)).redIAdd(u);var d=this.x.redMul(a).redISub(u);d=(d=d.redIAdd(d)).redIAdd(d);var h=this.y.redMul(c.redMul(s.redISub(c)).redISub(o.redMul(a)));h=(h=(h=h.redIAdd(h)).redIAdd(h)).redIAdd(h);var l=this.z.redAdd(o).redSqr().redISub(r).redISub(a);return this.curve.jpoint(d,h,l)},nr.prototype.mul=function(e,t){return e=new St(e,t),this.curve._wnafMul(this,e)},nr.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),r=e.z.redSqr();if(0!==this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0))return!1;var i=t.redMul(this.z),n=r.redMul(e.z);return 0===this.y.redMul(n).redISub(e.y.redMul(i)).cmpn(0)},nr.prototype.eqXToP=function(e){var t=this.z.redSqr(),r=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(r))return!0;for(var i=e.clone(),n=this.curve.redN.redMul(t);;){if(i.iadd(this.curve.n),i.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(n),0===this.x.cmp(r))return!0}},nr.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},nr.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},d(fr,$t);var or=fr;function ar(e,t,r){$t.BasePoint.call(this,e,"projective"),null===t&&null===r?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new St(t,16),this.z=new St(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}fr.prototype.validate=function(e){var t=e.normalize().x,r=t.redSqr(),i=r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);return 0===i.redSqrt().redSqr().cmp(i)},d(ar,$t.BasePoint),fr.prototype.decodePoint=function(e,t){return this.point(qt.toArray(e,t),1)},fr.prototype.point=function(e,t){return new ar(this,e,t)},fr.prototype.pointFromJSON=function(e){return ar.fromJSON(this,e)},ar.prototype.precompute=function(){},ar.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},ar.fromJSON=function(e,t){return new ar(e,t[0],t[1]||e.one)},ar.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},ar.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},ar.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),r=e.redSub(t),i=e.redMul(t),n=r.redMul(t.redAdd(this.curve.a24.redMul(r)));return this.curve.point(i,n)},ar.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},ar.prototype.diffAdd=function(e,t){var r=this.x.redAdd(this.z),i=this.x.redSub(this.z),n=e.x.redAdd(e.z),f=e.x.redSub(e.z).redMul(r),o=n.redMul(i),a=t.z.redMul(f.redAdd(o).redSqr()),s=t.x.redMul(f.redISub(o).redSqr());return this.curve.point(a,s)},ar.prototype.mul=function(e){for(var t=e.clone(),r=this,i=this.curve.point(null,null),n=[];0!==t.cmpn(0);t.iushrn(1))n.push(t.andln(1));for(var f=n.length-1;f>=0;f--)0===n[f]?(r=r.diffAdd(i,this),i=i.dbl()):(i=r.diffAdd(i,this),r=r.dbl());return i},ar.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},ar.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},ar.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},ar.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},ar.prototype.getX=function(){return this.normalize(),this.x.fromRed()};var sr=qt.assert;function cr(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,$t.call(this,"edwards",e),this.a=new St(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new St(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new St(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),sr(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}d(cr,$t);var ur=cr;function dr(e,t,r,i,n){$t.BasePoint.call(this,e,"projective"),null===t&&null===r&&null===i?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new St(t,16),this.y=new St(r,16),this.z=i?new St(i,16):this.curve.one,this.t=n&&new St(n,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}cr.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},cr.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},cr.prototype.jpoint=function(e,t,r,i){return this.point(e,t,r,i)},cr.prototype.pointFromX=function(e,t){(e=new St(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),i=this.c2.redSub(this.a.redMul(r)),n=this.one.redSub(this.c2.redMul(this.d).redMul(r)),f=i.redMul(n.redInvm()),o=f.redSqrt();if(0!==o.redSqr().redSub(f).cmp(this.zero))throw new Error("invalid point");var a=o.fromRed().isOdd();return(t&&!a||!t&&a)&&(o=o.redNeg()),this.point(e,o)},cr.prototype.pointFromY=function(e,t){(e=new St(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),i=r.redSub(this.c2),n=r.redMul(this.d).redMul(this.c2).redSub(this.a),f=i.redMul(n.redInvm());if(0===f.cmp(this.zero)){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var o=f.redSqrt();if(0!==o.redSqr().redSub(f).cmp(this.zero))throw new Error("invalid point");return o.fromRed().isOdd()!==t&&(o=o.redNeg()),this.point(o,e)},cr.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),r=e.y.redSqr(),i=t.redMul(this.a).redAdd(r),n=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));return 0===i.cmp(n)},d(dr,$t.BasePoint),cr.prototype.pointFromJSON=function(e){return dr.fromJSON(this,e)},cr.prototype.point=function(e,t,r,i){return new dr(this,e,t,r,i)},dr.fromJSON=function(e,t){return new dr(e,t[0],t[1],t[2])},dr.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},dr.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},dr.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr();r=r.redIAdd(r);var i=this.curve._mulA(e),n=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),f=i.redAdd(t),o=f.redSub(r),a=i.redSub(t),s=n.redMul(o),c=f.redMul(a),u=n.redMul(a),d=o.redMul(f);return this.curve.point(s,c,d,u)},dr.prototype._projDbl=function(){var e,t,r,i=this.x.redAdd(this.y).redSqr(),n=this.x.redSqr(),f=this.y.redSqr();if(this.curve.twisted){var o=(c=this.curve._mulA(n)).redAdd(f);if(this.zOne)e=i.redSub(n).redSub(f).redMul(o.redSub(this.curve.two)),t=o.redMul(c.redSub(f)),r=o.redSqr().redSub(o).redSub(o);else{var a=this.z.redSqr(),s=o.redSub(a).redISub(a);e=i.redSub(n).redISub(f).redMul(s),t=o.redMul(c.redSub(f)),r=o.redMul(s)}}else{var c=n.redAdd(f);a=this.curve._mulC(this.z).redSqr(),s=c.redSub(a).redSub(a);e=this.curve._mulC(i.redISub(c)).redMul(s),t=this.curve._mulC(c).redMul(n.redISub(f)),r=c.redMul(s)}return this.curve.point(e,t,r)},dr.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},dr.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),r=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),i=this.t.redMul(this.curve.dd).redMul(e.t),n=this.z.redMul(e.z.redAdd(e.z)),f=r.redSub(t),o=n.redSub(i),a=n.redAdd(i),s=r.redAdd(t),c=f.redMul(o),u=a.redMul(s),d=f.redMul(s),h=o.redMul(a);return this.curve.point(c,u,h,d)},dr.prototype._projAdd=function(e){var t,r,i=this.z.redMul(e.z),n=i.redSqr(),f=this.x.redMul(e.x),o=this.y.redMul(e.y),a=this.curve.d.redMul(f).redMul(o),s=n.redSub(a),c=n.redAdd(a),u=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(f).redISub(o),d=i.redMul(s).redMul(u);return this.curve.twisted?(t=i.redMul(c).redMul(o.redSub(this.curve._mulA(f))),r=s.redMul(c)):(t=i.redMul(c).redMul(o.redSub(f)),r=this.curve._mulC(s).redMul(c)),this.curve.point(d,t,r)},dr.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},dr.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},dr.prototype.mulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!1)},dr.prototype.jmulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!0)},dr.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},dr.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},dr.prototype.getX=function(){return this.normalize(),this.x.fromRed()},dr.prototype.getY=function(){return this.normalize(),this.y.fromRed()},dr.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},dr.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var r=e.clone(),i=this.curve.redN.redMul(this.z);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(i),0===this.x.cmp(t))return!0}},dr.prototype.toP=dr.prototype.normalize,dr.prototype.mixedAdd=dr.prototype.add;var hr=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=t;r.base=$t,r.short=rr,r.mont=or,r.edwards=ur}));function lr(e,t){return 55296==(64512&e.charCodeAt(t))&&(!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1)))}function br(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function pr(e){return 1===e.length?"0"+e:e}function _r(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}var vr={inherits:d,toArray:function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"==typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}else for(var i=0,n=0;n<e.length;n++){var f=e.charCodeAt(n);f<128?r[i++]=f:f<2048?(r[i++]=f>>6|192,r[i++]=63&f|128):lr(e,n)?(f=65536+((1023&f)<<10)+(1023&e.charCodeAt(++n)),r[i++]=f>>18|240,r[i++]=f>>12&63|128,r[i++]=f>>6&63|128,r[i++]=63&f|128):(r[i++]=f>>12|224,r[i++]=f>>6&63|128,r[i++]=63&f|128)}else for(n=0;n<e.length;n++)r[n]=0|e[n];return r},toHex:function(e){for(var t="",r=0;r<e.length;r++)t+=pr(e[r].toString(16));return t},htonl:br,toHex32:function(e,t){for(var r="",i=0;i<e.length;i++){var n=e[i];"little"===t&&(n=br(n)),r+=_r(n.toString(16))}return r},zero2:pr,zero8:_r,join32:function(e,t,r,i){var n=r-t;Kt(n%4==0);for(var f=new Array(n/4),o=0,a=t;o<f.length;o++,a+=4){var s;s="big"===i?e[a]<<24|e[a+1]<<16|e[a+2]<<8|e[a+3]:e[a+3]<<24|e[a+2]<<16|e[a+1]<<8|e[a],f[o]=s>>>0}return f},split32:function(e,t){for(var r=new Array(4*e.length),i=0,n=0;i<e.length;i++,n+=4){var f=e[i];"big"===t?(r[n]=f>>>24,r[n+1]=f>>>16&255,r[n+2]=f>>>8&255,r[n+3]=255&f):(r[n+3]=f>>>24,r[n+2]=f>>>16&255,r[n+1]=f>>>8&255,r[n]=255&f)}return r},rotr32:function(e,t){return e>>>t|e<<32-t},rotl32:function(e,t){return e<<t|e>>>32-t},sum32:function(e,t){return e+t>>>0},sum32_3:function(e,t,r){return e+t+r>>>0},sum32_4:function(e,t,r,i){return e+t+r+i>>>0},sum32_5:function(e,t,r,i,n){return e+t+r+i+n>>>0},sum64:function(e,t,r,i){var n=e[t],f=i+e[t+1]>>>0,o=(f<i?1:0)+r+n;e[t]=o>>>0,e[t+1]=f},sum64_hi:function(e,t,r,i){return(t+i>>>0<t?1:0)+e+r>>>0},sum64_lo:function(e,t,r,i){return t+i>>>0},sum64_4_hi:function(e,t,r,i,n,f,o,a){var s=0,c=t;return s+=(c=c+i>>>0)<t?1:0,s+=(c=c+f>>>0)<f?1:0,e+r+n+o+(s+=(c=c+a>>>0)<a?1:0)>>>0},sum64_4_lo:function(e,t,r,i,n,f,o,a){return t+i+f+a>>>0},sum64_5_hi:function(e,t,r,i,n,f,o,a,s,c){var u=0,d=t;return u+=(d=d+i>>>0)<t?1:0,u+=(d=d+f>>>0)<f?1:0,u+=(d=d+a>>>0)<a?1:0,e+r+n+o+s+(u+=(d=d+c>>>0)<c?1:0)>>>0},sum64_5_lo:function(e,t,r,i,n,f,o,a,s,c){return t+i+f+a+c>>>0},rotr64_hi:function(e,t,r){return(t<<32-r|e>>>r)>>>0},rotr64_lo:function(e,t,r){return(e<<32-r|t>>>r)>>>0},shr64_hi:function(e,t,r){return e>>>r},shr64_lo:function(e,t,r){return(e<<32-r|t>>>r)>>>0}};function mr(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}var yr=mr;mr.prototype.update=function(e,t){if(e=vr.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var r=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=vr.join32(e,0,e.length-r,this.endian);for(var i=0;i<e.length;i+=this._delta32)this._update(e,i,i+this._delta32)}return this},mr.prototype.digest=function(e){return this.update(this._pad()),Kt(null===this.pending),this._digest(e)},mr.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,i=new Array(r+this.padLength);i[0]=128;for(var n=1;n<r;n++)i[n]=0;if(e<<=3,"big"===this.endian){for(var f=8;f<this.padLength;f++)i[n++]=0;i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=e>>>24&255,i[n++]=e>>>16&255,i[n++]=e>>>8&255,i[n++]=255&e}else for(i[n++]=255&e,i[n++]=e>>>8&255,i[n++]=e>>>16&255,i[n++]=e>>>24&255,i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=0,f=8;f<this.padLength;f++)i[n++]=0;return i};var gr={BlockHash:yr},wr=vr.rotr32;function Ar(e,t,r){return e&t^~e&r}function Er(e,t,r){return e&t^e&r^t&r}function Ir(e,t,r){return e^t^r}var Mr={ft_1:function(e,t,r,i){return 0===e?Ar(t,r,i):1===e||3===e?Ir(t,r,i):2===e?Er(t,r,i):void 0},ch32:Ar,maj32:Er,p32:Ir,s0_256:function(e){return wr(e,2)^wr(e,13)^wr(e,22)},s1_256:function(e){return wr(e,6)^wr(e,11)^wr(e,25)},g0_256:function(e){return wr(e,7)^wr(e,18)^e>>>3},g1_256:function(e){return wr(e,17)^wr(e,19)^e>>>10}},Sr=vr.rotl32,Lr=vr.sum32,xr=vr.sum32_5,kr=Mr.ft_1,Br=gr.BlockHash,Pr=[1518500249,1859775393,2400959708,3395469782];function Tr(){if(!(this instanceof Tr))return new Tr;Br.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}vr.inherits(Tr,Br);var Rr=Tr;Tr.blockSize=512,Tr.outSize=160,Tr.hmacStrength=80,Tr.padLength=64,Tr.prototype._update=function(e,t){for(var r=this.W,i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=Sr(r[i-3]^r[i-8]^r[i-14]^r[i-16],1);var n=this.h[0],f=this.h[1],o=this.h[2],a=this.h[3],s=this.h[4];for(i=0;i<r.length;i++){var c=~~(i/20),u=xr(Sr(n,5),kr(c,f,o,a),s,r[i],Pr[c]);s=a,a=o,o=Sr(f,30),f=n,n=u}this.h[0]=Lr(this.h[0],n),this.h[1]=Lr(this.h[1],f),this.h[2]=Lr(this.h[2],o),this.h[3]=Lr(this.h[3],a),this.h[4]=Lr(this.h[4],s)},Tr.prototype._digest=function(e){return"hex"===e?vr.toHex32(this.h,"big"):vr.split32(this.h,"big")};var Cr=vr.sum32,Nr=vr.sum32_4,zr=vr.sum32_5,jr=Mr.ch32,Dr=Mr.maj32,Kr=Mr.s0_256,Or=Mr.s1_256,Vr=Mr.g0_256,Ur=Mr.g1_256,qr=gr.BlockHash,Yr=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function Fr(){if(!(this instanceof Fr))return new Fr;qr.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=Yr,this.W=new Array(64)}vr.inherits(Fr,qr);var Hr=Fr;function Gr(){if(!(this instanceof Gr))return new Gr;Hr.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}Fr.blockSize=512,Fr.outSize=256,Fr.hmacStrength=192,Fr.padLength=64,Fr.prototype._update=function(e,t){for(var r=this.W,i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=Nr(Ur(r[i-2]),r[i-7],Vr(r[i-15]),r[i-16]);var n=this.h[0],f=this.h[1],o=this.h[2],a=this.h[3],s=this.h[4],c=this.h[5],u=this.h[6],d=this.h[7];for(Kt(this.k.length===r.length),i=0;i<r.length;i++){var h=zr(d,Or(s),jr(s,c,u),this.k[i],r[i]),l=Cr(Kr(n),Dr(n,f,o));d=u,u=c,c=s,s=Cr(a,h),a=o,o=f,f=n,n=Cr(h,l)}this.h[0]=Cr(this.h[0],n),this.h[1]=Cr(this.h[1],f),this.h[2]=Cr(this.h[2],o),this.h[3]=Cr(this.h[3],a),this.h[4]=Cr(this.h[4],s),this.h[5]=Cr(this.h[5],c),this.h[6]=Cr(this.h[6],u),this.h[7]=Cr(this.h[7],d)},Fr.prototype._digest=function(e){return"hex"===e?vr.toHex32(this.h,"big"):vr.split32(this.h,"big")},vr.inherits(Gr,Hr);var Wr=Gr;Gr.blockSize=512,Gr.outSize=224,Gr.hmacStrength=192,Gr.padLength=64,Gr.prototype._digest=function(e){return"hex"===e?vr.toHex32(this.h.slice(0,7),"big"):vr.split32(this.h.slice(0,7),"big")};var Zr=vr.rotr64_hi,Jr=vr.rotr64_lo,Xr=vr.shr64_hi,$r=vr.shr64_lo,Qr=vr.sum64,ei=vr.sum64_hi,ti=vr.sum64_lo,ri=vr.sum64_4_hi,ii=vr.sum64_4_lo,ni=vr.sum64_5_hi,fi=vr.sum64_5_lo,oi=gr.BlockHash,ai=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function si(){if(!(this instanceof si))return new si;oi.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=ai,this.W=new Array(160)}vr.inherits(si,oi);var ci=si;function ui(e,t,r,i,n){var f=e&r^~e&n;return f<0&&(f+=4294967296),f}function di(e,t,r,i,n,f){var o=t&i^~t&f;return o<0&&(o+=4294967296),o}function hi(e,t,r,i,n){var f=e&r^e&n^r&n;return f<0&&(f+=4294967296),f}function li(e,t,r,i,n,f){var o=t&i^t&f^i&f;return o<0&&(o+=4294967296),o}function bi(e,t){var r=Zr(e,t,28)^Zr(t,e,2)^Zr(t,e,7);return r<0&&(r+=4294967296),r}function pi(e,t){var r=Jr(e,t,28)^Jr(t,e,2)^Jr(t,e,7);return r<0&&(r+=4294967296),r}function _i(e,t){var r=Zr(e,t,14)^Zr(e,t,18)^Zr(t,e,9);return r<0&&(r+=4294967296),r}function vi(e,t){var r=Jr(e,t,14)^Jr(e,t,18)^Jr(t,e,9);return r<0&&(r+=4294967296),r}function mi(e,t){var r=Zr(e,t,1)^Zr(e,t,8)^Xr(e,t,7);return r<0&&(r+=4294967296),r}function yi(e,t){var r=Jr(e,t,1)^Jr(e,t,8)^$r(e,t,7);return r<0&&(r+=4294967296),r}function gi(e,t){var r=Zr(e,t,19)^Zr(t,e,29)^Xr(e,t,6);return r<0&&(r+=4294967296),r}function wi(e,t){var r=Jr(e,t,19)^Jr(t,e,29)^$r(e,t,6);return r<0&&(r+=4294967296),r}function Ai(){if(!(this instanceof Ai))return new Ai;ci.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}si.blockSize=1024,si.outSize=512,si.hmacStrength=192,si.padLength=128,si.prototype._prepareBlock=function(e,t){for(var r=this.W,i=0;i<32;i++)r[i]=e[t+i];for(;i<r.length;i+=2){var n=gi(r[i-4],r[i-3]),f=wi(r[i-4],r[i-3]),o=r[i-14],a=r[i-13],s=mi(r[i-30],r[i-29]),c=yi(r[i-30],r[i-29]),u=r[i-32],d=r[i-31];r[i]=ri(n,f,o,a,s,c,u,d),r[i+1]=ii(n,f,o,a,s,c,u,d)}},si.prototype._update=function(e,t){this._prepareBlock(e,t);var r=this.W,i=this.h[0],n=this.h[1],f=this.h[2],o=this.h[3],a=this.h[4],s=this.h[5],c=this.h[6],u=this.h[7],d=this.h[8],h=this.h[9],l=this.h[10],b=this.h[11],p=this.h[12],_=this.h[13],v=this.h[14],m=this.h[15];Kt(this.k.length===r.length);for(var y=0;y<r.length;y+=2){var g=v,w=m,A=_i(d,h),E=vi(d,h),I=ui(d,h,l,b,p),M=di(d,h,l,b,p,_),S=this.k[y],L=this.k[y+1],x=r[y],k=r[y+1],B=ni(g,w,A,E,I,M,S,L,x,k),P=fi(g,w,A,E,I,M,S,L,x,k);g=bi(i,n),w=pi(i,n),A=hi(i,n,f,o,a),E=li(i,n,f,o,a,s);var T=ei(g,w,A,E),R=ti(g,w,A,E);v=p,m=_,p=l,_=b,l=d,b=h,d=ei(c,u,B,P),h=ti(u,u,B,P),c=a,u=s,a=f,s=o,f=i,o=n,i=ei(B,P,T,R),n=ti(B,P,T,R)}Qr(this.h,0,i,n),Qr(this.h,2,f,o),Qr(this.h,4,a,s),Qr(this.h,6,c,u),Qr(this.h,8,d,h),Qr(this.h,10,l,b),Qr(this.h,12,p,_),Qr(this.h,14,v,m)},si.prototype._digest=function(e){return"hex"===e?vr.toHex32(this.h,"big"):vr.split32(this.h,"big")},vr.inherits(Ai,ci);var Ei=Ai;Ai.blockSize=1024,Ai.outSize=384,Ai.hmacStrength=192,Ai.padLength=128,Ai.prototype._digest=function(e){return"hex"===e?vr.toHex32(this.h.slice(0,12),"big"):vr.split32(this.h.slice(0,12),"big")};var Ii={sha1:Rr,sha224:Wr,sha256:Hr,sha384:Ei,sha512:ci},Mi=vr.rotl32,Si=vr.sum32,Li=vr.sum32_3,xi=vr.sum32_4,ki=gr.BlockHash;function Bi(){if(!(this instanceof Bi))return new Bi;ki.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}vr.inherits(Bi,ki);var Pi=Bi;function Ti(e,t,r,i){return e<=15?t^r^i:e<=31?t&r|~t&i:e<=47?(t|~r)^i:e<=63?t&i|r&~i:t^(r|~i)}function Ri(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function Ci(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}Bi.blockSize=512,Bi.outSize=160,Bi.hmacStrength=192,Bi.padLength=64,Bi.prototype._update=function(e,t){for(var r=this.h[0],i=this.h[1],n=this.h[2],f=this.h[3],o=this.h[4],a=r,s=i,c=n,u=f,d=o,h=0;h<80;h++){var l=Si(Mi(xi(r,Ti(h,i,n,f),e[Ni[h]+t],Ri(h)),ji[h]),o);r=o,o=f,f=Mi(n,10),n=i,i=l,l=Si(Mi(xi(a,Ti(79-h,s,c,u),e[zi[h]+t],Ci(h)),Di[h]),d),a=d,d=u,u=Mi(c,10),c=s,s=l}l=Li(this.h[1],n,u),this.h[1]=Li(this.h[2],f,d),this.h[2]=Li(this.h[3],o,a),this.h[3]=Li(this.h[4],r,s),this.h[4]=Li(this.h[0],i,c),this.h[0]=l},Bi.prototype._digest=function(e){return"hex"===e?vr.toHex32(this.h,"little"):vr.split32(this.h,"little")};var Ni=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],zi=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],ji=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],Di=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],Ki={ripemd160:Pi};function Oi(e,t,r){if(!(this instanceof Oi))return new Oi(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(vr.toArray(t,r))}var Vi=Oi;Oi.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),Kt(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},Oi.prototype.update=function(e,t){return this.inner.update(e,t),this},Oi.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)};var Ui=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=t;r.utils=vr,r.common=gr,r.sha=Ii,r.ripemd=Ki,r.hmac=Vi,r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160})),qi={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}},Yi=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r,i=t,n=qt.assert;function f(e){"short"===e.type?this.curve=new hr.short(e):"edwards"===e.type?this.curve=new hr.edwards(e):this.curve=new hr.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,n(this.g.validate(),"Invalid curve"),n(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function o(e,t){Object.defineProperty(i,e,{configurable:!0,enumerable:!0,get:function(){var r=new f(t);return Object.defineProperty(i,e,{configurable:!0,enumerable:!0,value:r}),r}})}i.PresetCurve=f,o("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:Ui.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),o("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:Ui.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),o("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:Ui.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),o("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:Ui.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),o("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:Ui.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),o("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:Ui.sha256,gRed:!1,g:["9"]}),o("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:Ui.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{r=qi}catch(e){r=void 0}o("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:Ui.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",r]})}));function Fi(e){if(!(this instanceof Fi))return new Fi(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=Ut.toArray(e.entropy,e.entropyEnc||"hex"),r=Ut.toArray(e.nonce,e.nonceEnc||"hex"),i=Ut.toArray(e.pers,e.persEnc||"hex");Kt(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,r,i)}var Hi=Fi;Fi.prototype._init=function(e,t,r){var i=e.concat(t).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var n=0;n<this.V.length;n++)this.K[n]=0,this.V[n]=1;this._update(i),this._reseed=1,this.reseedInterval=281474976710656},Fi.prototype._hmac=function(){return new Ui.hmac(this.hash,this.K)},Fi.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},Fi.prototype.reseed=function(e,t,r,i){"string"!=typeof t&&(i=r,r=t,t=null),e=Ut.toArray(e,t),r=Ut.toArray(r,i),Kt(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(r||[])),this._reseed=1},Fi.prototype.generate=function(e,t,r,i){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(i=r,r=t,t=null),r&&(r=Ut.toArray(r,i||"hex"),this._update(r));for(var n=[];n.length<e;)this.V=this._hmac().update(this.V).digest(),n=n.concat(this.V);var f=n.slice(0,e);return this._update(r),this._reseed++,Ut.encode(f,t)};var Gi=qt.assert;function Wi(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}var Zi=Wi;Wi.fromPublic=function(e,t,r){return t instanceof Wi?t:new Wi(e,{pub:t,pubEnc:r})},Wi.fromPrivate=function(e,t,r){return t instanceof Wi?t:new Wi(e,{priv:t,privEnc:r})},Wi.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},Wi.prototype.getPublic=function(e,t){return"string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},Wi.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},Wi.prototype._importPrivate=function(e,t){this.priv=new St(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},Wi.prototype._importPublic=function(e,t){if(e.x||e.y)return"mont"===this.ec.curve.type?Gi(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||Gi(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},Wi.prototype.derive=function(e){return e.mul(this.priv).getX()},Wi.prototype.sign=function(e,t,r){return this.ec.sign(e,this,t,r)},Wi.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},Wi.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var Ji=qt.assert;function Xi(e,t){if(e instanceof Xi)return e;this._importDER(e,t)||(Ji(e.r&&e.s,"Signature without r or s"),this.r=new St(e.r,16),this.s=new St(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}var $i=Xi;function Qi(){this.place=0}function en(e,t){var r=e[t.place++];if(!(128&r))return r;for(var i=15&r,n=0,f=0,o=t.place;f<i;f++,o++)n<<=8,n|=e[o];return t.place=o,n}function tn(e){for(var t=0,r=e.length-1;!e[t]&&!(128&e[t+1])&&t<r;)t++;return 0===t?e:e.slice(t)}function rn(e,t){if(t<128)e.push(t);else{var r=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|r);--r;)e.push(t>>>(r<<3)&255);e.push(t)}}Xi.prototype._importDER=function(e,t){e=qt.toArray(e,t);var r=new Qi;if(48!==e[r.place++])return!1;if(en(e,r)+r.place!==e.length)return!1;if(2!==e[r.place++])return!1;var i=en(e,r),n=e.slice(r.place,i+r.place);if(r.place+=i,2!==e[r.place++])return!1;var f=en(e,r);if(e.length!==f+r.place)return!1;var o=e.slice(r.place,f+r.place);return 0===n[0]&&128&n[1]&&(n=n.slice(1)),0===o[0]&&128&o[1]&&(o=o.slice(1)),this.r=new St(n),this.s=new St(o),this.recoveryParam=null,!0},Xi.prototype.toDER=function(e){var t=this.r.toArray(),r=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&r[0]&&(r=[0].concat(r)),t=tn(t),r=tn(r);!(r[0]||128&r[1]);)r=r.slice(1);var i=[2];rn(i,t.length),(i=i.concat(t)).push(2),rn(i,r.length);var n=i.concat(r),f=[48];return rn(f,n.length),f=f.concat(n),qt.encode(f,e)};var nn=qt.assert;function fn(e){if(!(this instanceof fn))return new fn(e);"string"==typeof e&&(nn(Yi.hasOwnProperty(e),"Unknown curve "+e),e=Yi[e]),e instanceof Yi.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}var on=fn;fn.prototype.keyPair=function(e){return new Zi(this,e)},fn.prototype.keyFromPrivate=function(e,t){return Zi.fromPrivate(this,e,t)},fn.prototype.keyFromPublic=function(e,t){return Zi.fromPublic(this,e,t)},fn.prototype.genKeyPair=function(e){e||(e={});for(var t=new Hi({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||Yt(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),r=this.n.byteLength(),i=this.n.sub(new St(2));;){var n=new St(t.generate(r));if(!(n.cmp(i)>0))return n.iaddn(1),this.keyFromPrivate(n)}},fn.prototype._truncateToN=function(e,t){var r=8*e.byteLength()-this.n.bitLength();return r>0&&(e=e.ushrn(r)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},fn.prototype.sign=function(e,t,r,i){"object"==typeof r&&(i=r,r=null),i||(i={}),t=this.keyFromPrivate(t,r),e=this._truncateToN(new St(e,16));for(var n=this.n.byteLength(),f=t.getPrivate().toArray("be",n),o=e.toArray("be",n),a=new Hi({hash:this.hash,entropy:f,nonce:o,pers:i.pers,persEnc:i.persEnc||"utf8"}),s=this.n.sub(new St(1)),c=0;;c++){var u=i.k?i.k(c):new St(a.generate(this.n.byteLength()));if(!((u=this._truncateToN(u,!0)).cmpn(1)<=0||u.cmp(s)>=0)){var d=this.g.mul(u);if(!d.isInfinity()){var h=d.getX(),l=h.umod(this.n);if(0!==l.cmpn(0)){var b=u.invm(this.n).mul(l.mul(t.getPrivate()).iadd(e));if(0!==(b=b.umod(this.n)).cmpn(0)){var p=(d.getY().isOdd()?1:0)|(0!==h.cmp(l)?2:0);return i.canonical&&b.cmp(this.nh)>0&&(b=this.n.sub(b),p^=1),new $i({r:l,s:b,recoveryParam:p})}}}}}},fn.prototype.verify=function(e,t,r,i){e=this._truncateToN(new St(e,16)),r=this.keyFromPublic(r,i);var n=(t=new $i(t,"hex")).r,f=t.s;if(n.cmpn(1)<0||n.cmp(this.n)>=0)return!1;if(f.cmpn(1)<0||f.cmp(this.n)>=0)return!1;var o,a=f.invm(this.n),s=a.mul(e).umod(this.n),c=a.mul(n).umod(this.n);return this.curve._maxwellTrick?!(o=this.g.jmulAdd(s,r.getPublic(),c)).isInfinity()&&o.eqXToP(n):!(o=this.g.mulAdd(s,r.getPublic(),c)).isInfinity()&&0===o.getX().umod(this.n).cmp(n)},fn.prototype.recoverPubKey=function(e,t,r,i){nn((3&r)===r,"The recovery param is more than two bits"),t=new $i(t,i);var n=this.n,f=new St(e),o=t.r,a=t.s,s=1&r,c=r>>1;if(o.cmp(this.curve.p.umod(this.curve.n))>=0&&c)throw new Error("Unable to find sencond key candinate");o=c?this.curve.pointFromX(o.add(this.curve.n),s):this.curve.pointFromX(o,s);var u=t.r.invm(n),d=n.sub(f).mul(u).umod(n),h=a.mul(u).umod(n);return this.g.mulAdd(d,o,h)},fn.prototype.getKeyRecoveryParam=function(e,t,r,i){if(null!==(t=new $i(t,i)).recoveryParam)return t.recoveryParam;for(var n=0;n<4;n++){var f;try{f=this.recoverPubKey(e,t,n)}catch(e){continue}if(f.eq(r))return n}throw new Error("Unable to find valid recovery factor")};var an=qt.assert,sn=qt.parseBytes,cn=qt.cachedProperty;function un(e,t){this.eddsa=e,this._secret=sn(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=sn(t.pub)}un.fromPublic=function(e,t){return t instanceof un?t:new un(e,{pub:t})},un.fromSecret=function(e,t){return t instanceof un?t:new un(e,{secret:t})},un.prototype.secret=function(){return this._secret},cn(un,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),cn(un,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),cn(un,"privBytes",(function(){var e=this.eddsa,t=this.hash(),r=e.encodingLength-1,i=t.slice(0,e.encodingLength);return i[0]&=248,i[r]&=127,i[r]|=64,i})),cn(un,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),cn(un,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),cn(un,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),un.prototype.sign=function(e){return an(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},un.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},un.prototype.getSecret=function(e){return an(this._secret,"KeyPair is public only"),qt.encode(this.secret(),e)},un.prototype.getPublic=function(e){return qt.encode(this.pubBytes(),e)};var dn=un,hn=qt.assert,ln=qt.cachedProperty,bn=qt.parseBytes;function pn(e,t){this.eddsa=e,"object"!=typeof t&&(t=bn(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),hn(t.R&&t.S,"Signature without R or S"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof St&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}ln(pn,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),ln(pn,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),ln(pn,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),ln(pn,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),pn.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},pn.prototype.toHex=function(){return qt.encode(this.toBytes(),"hex").toUpperCase()};var _n=pn,vn=qt.assert,mn=qt.parseBytes;function yn(e){if(vn("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof yn))return new yn(e);e=Yi[e].curve;this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=Ui.sha512}var gn=yn;yn.prototype.sign=function(e,t){e=mn(e);var r=this.keyFromSecret(t),i=this.hashInt(r.messagePrefix(),e),n=this.g.mul(i),f=this.encodePoint(n),o=this.hashInt(f,r.pubBytes(),e).mul(r.priv()),a=i.add(o).umod(this.curve.n);return this.makeSignature({R:n,S:a,Rencoded:f})},yn.prototype.verify=function(e,t,r){e=mn(e),t=this.makeSignature(t);var i=this.keyFromPublic(r),n=this.hashInt(t.Rencoded(),i.pubBytes(),e),f=this.g.mul(t.S());return t.R().add(i.pub().mul(n)).eq(f)},yn.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return qt.intFromLE(e.digest()).umod(this.curve.n)},yn.prototype.keyFromPublic=function(e){return dn.fromPublic(this,e)},yn.prototype.keyFromSecret=function(e){return dn.fromSecret(this,e)},yn.prototype.makeSignature=function(e){return e instanceof _n?e:new _n(this,e)},yn.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},yn.prototype.decodePoint=function(e){var t=(e=qt.parseBytes(e)).length-1,r=e.slice(0,t).concat(-129&e[t]),i=0!=(128&e[t]),n=qt.intFromLE(r);return this.curve.pointFromY(n,i)},yn.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},yn.prototype.decodeInt=function(e){return qt.intFromLE(e)},yn.prototype.isPoint=function(e){return e instanceof this.pointClass};var wn=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.h)(Dt),An=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=t;r.version=wn.version,r.utils=qt,r.rand=Yt,r.curve=hr,r.curves=Yi,r.ec=on,r.eddsa=gn})),En=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=u.Buffer,i=new(0,An.ec)("secp256k1"),n=i.curve;function f(e){var t=e[0];switch(t){case 2:case 3:return 33!==e.length?null:function(e,t){var r=new St(t);if(r.cmp(n.p)>=0)return null;var f=(r=r.toRed(n.red)).redSqr().redIMul(r).redIAdd(n.b).redSqrt();return 3===e!==f.isOdd()&&(f=f.redNeg()),i.keyPair({pub:{x:r,y:f}})}(t,e.slice(1,33));case 4:case 6:case 7:return 65!==e.length?null:function(e,t,r){var f=new St(t),o=new St(r);if(f.cmp(n.p)>=0||o.cmp(n.p)>=0)return null;if(f=f.toRed(n.red),o=o.toRed(n.red),(6===e||7===e)&&o.isOdd()!==(7===e))return null;var a=f.redSqr().redIMul(f);return o.redSqr().redISub(a.redIAdd(n.b)).isZero()?i.keyPair({pub:{x:f,y:o}}):null}(t,e.slice(1,33),e.slice(33,65));default:return null}}t.privateKeyVerify=function(e){var t=new St(e);return t.cmp(n.n)<0&&!t.isZero()},t.privateKeyExport=function(e,t){var f=new St(e);if(f.cmp(n.n)>=0||f.isZero())throw new Error(F.EC_PRIVATE_KEY_EXPORT_DER_FAIL);return r.from(i.keyFromPrivate(e).getPublic(t,!0))},t.privateKeyNegate=function(e){var t=new St(e);return t.isZero()?r.alloc(32):n.n.sub(t).umod(n.n).toArrayLike(r,"be",32)},t.privateKeyModInverse=function(e){var t=new St(e);if(t.cmp(n.n)>=0||t.isZero())throw new Error(F.EC_PRIVATE_KEY_RANGE_INVALID);return t.invm(n.n).toArrayLike(r,"be",32)},t.privateKeyTweakAdd=function(e,t){var i=new St(t);if(i.cmp(n.n)>=0)throw new Error(F.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);if(i.iadd(new St(e)),i.cmp(n.n)>=0&&i.isub(n.n),i.isZero())throw new Error(F.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);return i.toArrayLike(r,"be",32)},t.privateKeyTweakMul=function(e,t){var i=new St(t);if(i.cmp(n.n)>=0||i.isZero())throw new Error(F.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);return i.imul(new St(e)),i.cmp(n.n)&&(i=i.umod(n.n)),i.toArrayLike(r,"be",32)},t.publicKeyCreate=function(e,t){var f=new St(e);if(f.cmp(n.n)>=0||f.isZero())throw new Error(F.EC_PUBLIC_KEY_CREATE_FAIL);return r.from(i.keyFromPrivate(e).getPublic(t,!0))},t.publicKeyConvert=function(e,t){var i=f(e);if(null===i)throw new Error(F.EC_PUBLIC_KEY_PARSE_FAIL);return r.from(i.getPublic(t,!0))},t.publicKeyVerify=function(e){return null!==f(e)},t.publicKeyTweakAdd=function(e,t,i){var o=f(e);if(null===o)throw new Error(F.EC_PUBLIC_KEY_PARSE_FAIL);if((t=new St(t)).cmp(n.n)>=0)throw new Error(F.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);var a=n.g.mul(t).add(o.pub);if(a.isInfinity())throw new Error(F.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);return r.from(a.encode(!0,i))},t.publicKeyTweakMul=function(e,t,i){var o=f(e);if(null===o)throw new Error(F.EC_PUBLIC_KEY_PARSE_FAIL);if((t=new St(t)).cmp(n.n)>=0||t.isZero())throw new Error(F.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);return r.from(o.pub.mul(t).encode(!0,i))},t.publicKeyCombine=function(e,t){for(var i=new Array(e.length),n=0;n<e.length;++n)if(i[n]=f(e[n]),null===i[n])throw new Error(F.EC_PUBLIC_KEY_PARSE_FAIL);for(var o=i[0].pub,a=1;a<i.length;++a)o=o.add(i[a].pub);if(o.isInfinity())throw new Error(F.EC_PUBLIC_KEY_COMBINE_FAIL);return r.from(o.encode(!0,t))},t.signatureNormalize=function(e){var t=new St(e.slice(0,32)),f=new St(e.slice(32,64));if(t.cmp(n.n)>=0||f.cmp(n.n)>=0)throw new Error(F.ECDSA_SIGNATURE_PARSE_FAIL);var o=r.from(e);return 1===f.cmp(i.nh)&&n.n.sub(f).toArrayLike(r,"be",32).copy(o,32),o},t.signatureExport=function(e){var t=e.slice(0,32),r=e.slice(32,64);if(new St(t).cmp(n.n)>=0||new St(r).cmp(n.n)>=0)throw new Error(F.ECDSA_SIGNATURE_PARSE_FAIL);return{r:t,s:r}},t.signatureImport=function(e){var t=new St(e.r);t.cmp(n.n)>=0&&(t=new St(0));var i=new St(e.s);return i.cmp(n.n)>=0&&(i=new St(0)),r.concat([t.toArrayLike(r,"be",32),i.toArrayLike(r,"be",32)])},t.sign=function(e,t,f,o){if("function"==typeof f){var a=f;f=function(i){var n=a(e,t,null,o,i);if(!r.isBuffer(n)||32!==n.length)throw new Error(F.ECDSA_SIGN_FAIL);return new St(n)}}var s=new St(t);if(s.cmp(n.n)>=0||s.isZero())throw new Error(F.ECDSA_SIGN_FAIL);var c=i.sign(e,t,{canonical:!0,k:f,pers:o});return{signature:r.concat([c.r.toArrayLike(r,"be",32),c.s.toArrayLike(r,"be",32)]),recovery:c.recoveryParam}},t.verify=function(e,t,r){var o={r:t.slice(0,32),s:t.slice(32,64)},a=new St(o.r),s=new St(o.s);if(a.cmp(n.n)>=0||s.cmp(n.n)>=0)throw new Error(F.ECDSA_SIGNATURE_PARSE_FAIL);if(1===s.cmp(i.nh)||a.isZero()||s.isZero())return!1;var c=f(r);if(null===c)throw new Error(F.EC_PUBLIC_KEY_PARSE_FAIL);return i.verify(e,o,{x:c.pub.x,y:c.pub.y})},t.recover=function(e,t,f,o){var a={r:t.slice(0,32),s:t.slice(32,64)},s=new St(a.r),c=new St(a.s);if(s.cmp(n.n)>=0||c.cmp(n.n)>=0)throw new Error(F.ECDSA_SIGNATURE_PARSE_FAIL);try{if(s.isZero()||c.isZero())throw new Error;var u=i.recoverPubKey(e,a,f);return r.from(u.encode(!0,o))}catch(e){throw new Error(F.ECDSA_RECOVER_FAIL)}},t.ecdh=function(e,r){var i=t.ecdhUnsafe(e,r,!0);return Mt("sha256").update(i).digest()},t.ecdhUnsafe=function(e,t,i){var o=f(e);if(null===o)throw new Error(F.EC_PUBLIC_KEY_PARSE_FAIL);var a=new St(t);if(a.cmp(n.n)>=0||a.isZero())throw new Error(F.ECDH_FAIL);return r.from(o.pub.mul(a).encode(!0,i))}})),In=(En.privateKeyVerify,En.privateKeyExport,En.privateKeyNegate,En.privateKeyModInverse,En.privateKeyTweakAdd,En.privateKeyTweakMul,En.publicKeyCreate,En.publicKeyConvert,En.publicKeyVerify,En.publicKeyTweakAdd,En.publicKeyTweakMul,En.publicKeyCombine,En.signatureNormalize,En.signatureExport,En.signatureImport,En.sign,En.verify,En.recover,En.ecdh,En.ecdhUnsafe,function(e){return{privateKeyVerify:function(t){return I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),32===t.length&&e.privateKeyVerify(t)},privateKeyExport:function(t,r){I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),x(t,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),r=H(r,!0);var i=e.privateKeyExport(t,r);return j(t,i,r)},privateKeyImport:function(t){if(I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),(t=D(t))&&32===t.length&&e.privateKeyVerify(t))return t;throw new Error(F.EC_PRIVATE_KEY_IMPORT_DER_FAIL)},privateKeyNegate:function(t){return I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),x(t,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),e.privateKeyNegate(t)},privateKeyModInverse:function(t){return I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),x(t,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),e.privateKeyModInverse(t)},privateKeyTweakAdd:function(t,r){return I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),x(t,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),I(r,F.TWEAK_TYPE_INVALID),x(r,32,F.TWEAK_LENGTH_INVALID),e.privateKeyTweakAdd(t,r)},privateKeyTweakMul:function(t,r){return I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),x(t,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),I(r,F.TWEAK_TYPE_INVALID),x(r,32,F.TWEAK_LENGTH_INVALID),e.privateKeyTweakMul(t,r)},publicKeyCreate:function(t,r){return I(t,F.EC_PRIVATE_KEY_TYPE_INVALID),x(t,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),r=H(r,!0),e.publicKeyCreate(t,r)},publicKeyConvert:function(t,r){return I(t,F.EC_PUBLIC_KEY_TYPE_INVALID),k(t,33,65,F.EC_PUBLIC_KEY_LENGTH_INVALID),r=H(r,!0),e.publicKeyConvert(t,r)},publicKeyVerify:function(t){return I(t,F.EC_PUBLIC_KEY_TYPE_INVALID),e.publicKeyVerify(t)},publicKeyTweakAdd:function(t,r,i){return I(t,F.EC_PUBLIC_KEY_TYPE_INVALID),k(t,33,65,F.EC_PUBLIC_KEY_LENGTH_INVALID),I(r,F.TWEAK_TYPE_INVALID),x(r,32,F.TWEAK_LENGTH_INVALID),i=H(i,!0),e.publicKeyTweakAdd(t,r,i)},publicKeyTweakMul:function(t,r,i){return I(t,F.EC_PUBLIC_KEY_TYPE_INVALID),k(t,33,65,F.EC_PUBLIC_KEY_LENGTH_INVALID),I(r,F.TWEAK_TYPE_INVALID),x(r,32,F.TWEAK_LENGTH_INVALID),i=H(i,!0),e.publicKeyTweakMul(t,r,i)},publicKeyCombine:function(t,r){A(t,F.EC_PUBLIC_KEYS_TYPE_INVALID),B(t,F.EC_PUBLIC_KEYS_LENGTH_INVALID);for(var i=0;i<t.length;++i)I(t[i],F.EC_PUBLIC_KEY_TYPE_INVALID),k(t[i],33,65,F.EC_PUBLIC_KEY_LENGTH_INVALID);return r=H(r,!0),e.publicKeyCombine(t,r)},signatureNormalize:function(t){return I(t,F.ECDSA_SIGNATURE_TYPE_INVALID),x(t,64,F.ECDSA_SIGNATURE_LENGTH_INVALID),e.signatureNormalize(t)},signatureExport:function(t){I(t,F.ECDSA_SIGNATURE_TYPE_INVALID),x(t,64,F.ECDSA_SIGNATURE_LENGTH_INVALID);var r=e.signatureExport(t);return K(r)},signatureImport:function(t){I(t,F.ECDSA_SIGNATURE_TYPE_INVALID),B(t,F.ECDSA_SIGNATURE_LENGTH_INVALID);var r=O(t);if(r)return e.signatureImport(r);throw new Error(F.ECDSA_SIGNATURE_PARSE_DER_FAIL)},signatureImportLax:function(t){I(t,F.ECDSA_SIGNATURE_TYPE_INVALID),B(t,F.ECDSA_SIGNATURE_LENGTH_INVALID);var r=V(t);if(r)return e.signatureImport(r);throw new Error(F.ECDSA_SIGNATURE_PARSE_DER_FAIL)},sign:function(t,r,i){I(t,F.MSG32_TYPE_INVALID),x(t,32,F.MSG32_LENGTH_INVALID),I(r,F.EC_PRIVATE_KEY_TYPE_INVALID),x(r,32,F.EC_PRIVATE_KEY_LENGTH_INVALID);var n=null,f=null;return void 0!==i&&(L(i,F.OPTIONS_TYPE_INVALID),void 0!==i.data&&(I(i.data,F.OPTIONS_DATA_TYPE_INVALID),x(i.data,32,F.OPTIONS_DATA_LENGTH_INVALID),n=i.data),void 0!==i.noncefn&&(M(i.noncefn,F.OPTIONS_NONCEFN_TYPE_INVALID),f=i.noncefn)),e.sign(t,r,f,n)},verify:function(t,r,i){return I(t,F.MSG32_TYPE_INVALID),x(t,32,F.MSG32_LENGTH_INVALID),I(r,F.ECDSA_SIGNATURE_TYPE_INVALID),x(r,64,F.ECDSA_SIGNATURE_LENGTH_INVALID),I(i,F.EC_PUBLIC_KEY_TYPE_INVALID),k(i,33,65,F.EC_PUBLIC_KEY_LENGTH_INVALID),e.verify(t,r,i)},recover:function(t,r,i,n){return I(t,F.MSG32_TYPE_INVALID),x(t,32,F.MSG32_LENGTH_INVALID),I(r,F.ECDSA_SIGNATURE_TYPE_INVALID),x(r,64,F.ECDSA_SIGNATURE_LENGTH_INVALID),S(i,F.RECOVERY_ID_TYPE_INVALID),P(i,-1,4,F.RECOVERY_ID_VALUE_INVALID),n=H(n,!0),e.recover(t,r,i,n)},ecdh:function(t,r){return I(t,F.EC_PUBLIC_KEY_TYPE_INVALID),k(t,33,65,F.EC_PUBLIC_KEY_LENGTH_INVALID),I(r,F.EC_PRIVATE_KEY_TYPE_INVALID),x(r,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),e.ecdh(t,r)},ecdhUnsafe:function(t,r,i){return I(t,F.EC_PUBLIC_KEY_TYPE_INVALID),k(t,33,65,F.EC_PUBLIC_KEY_LENGTH_INVALID),I(r,F.EC_PRIVATE_KEY_TYPE_INVALID),x(r,32,F.EC_PRIVATE_KEY_LENGTH_INVALID),i=H(i,!0),e.ecdhUnsafe(t,r,i)}}}(En)),Mn=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){function r(e,t){if("00"===e.slice(0,2))throw new Error("invalid RLP: extra zeros");return parseInt(e,t)}function i(e,t){if(e<56)return Buffer.from([e+t]);var r=f(e),i=f(t+55+r.length/2);return Buffer.from(i+r,"hex")}function n(e){return"0x"===e.slice(0,2)}function f(e){if(e<0)throw new Error("Invalid integer as argument, must be unsigned!");var t=e.toString(16);return t.length%2?"0"+t:t}function o(e){if(!Buffer.isBuffer(e)){if("string"==typeof e)return n(e)?Buffer.from((r="string"!=typeof(i=e)?i:n(i)?i.slice(2):i).length%2?"0"+r:r,"hex"):Buffer.from(e);if("number"==typeof e)return e?(t=f(e),Buffer.from(t,"hex")):Buffer.from([]);if(null==e)return Buffer.from([]);if(e instanceof Uint8Array)return Buffer.from(e);if(St.isBN(e))return Buffer.from(e.toArray());throw new Error("invalid type")}var t,r,i;return e}Object.defineProperty(t,"__esModule",{value:!0}),t.encode=function e(t){if(Array.isArray(t)){for(var r=[],n=0;n<t.length;n++)r.push(e(t[n]));var f=Buffer.concat(r);return Buffer.concat([i(f.length,192),f])}var a=o(t);return 1===a.length&&a[0]<128?a:Buffer.concat([i(a.length,128),a])},t.decode=function(e,t){if(void 0===t&&(t=!1),!e||0===e.length)return Buffer.from([]);var i=function e(t){var i,n,f,o,a,s=[],c=t[0];if(c<=127)return{data:t.slice(0,1),remainder:t.slice(1)};if(c<=183){if(i=c-127,f=128===c?Buffer.from([]):t.slice(1,i),2===i&&f[0]<128)throw new Error("invalid rlp encoding: byte must be less 0x80");return{data:f,remainder:t.slice(i)}}if(c<=191){if(n=c-182,i=r(t.slice(1,n).toString("hex"),16),(f=t.slice(n,i+n)).length<i)throw new Error("invalid RLP");return{data:f,remainder:t.slice(i+n)}}if(c<=247){for(i=c-191,o=t.slice(1,i);o.length;)a=e(o),s.push(a.data),o=a.remainder;return{data:s,remainder:t.slice(i)}}n=c-246,i=r(t.slice(1,n).toString("hex"),16);var u=n+i;if(u>t.length)throw new Error("invalid rlp: total length is larger than the data");if(0===(o=t.slice(n,u)).length)throw new Error("invalid rlp, List has a invalid length");for(;o.length;)a=e(o),s.push(a.data),o=a.remainder;return{data:s,remainder:t.slice(u)}}(o(e));if(t)return i;if(0!==i.remainder.length)throw new Error("invalid remainder");return i.data},t.getLength=function(e){if(!e||0===e.length)return Buffer.from([]);var t=o(e),i=t[0];if(i<=127)return t.length;if(i<=183)return i-127;if(i<=191)return i-182;if(i<=247)return i-191;var n=i-246;return n+r(t.slice(1,n).toString("hex"),16)}}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Mn);Mn.encode,Mn.decode,Mn.getLength;var Sn=function(e){if("string"!=typeof e)throw new Error("[is-hex-prefixed] value must be type 'string', is currently type "+typeof e+", while checking isHexPrefixed.");return"0x"===e.slice(0,2)},Ln=function(e){return"string"!=typeof e?e:Sn(e)?e.slice(2):e};function xn(e){var t=e;if("string"!=typeof t)throw new Error("[ethjs-util] while padding to even, value must be string, is currently "+typeof t+", while padToEven.");return t.length%2&&(t="0"+t),t}function kn(e){return"0x"+e.toString(16)}var Bn={arrayContainsArray:function(e,t,r){if(!0!==Array.isArray(e))throw new Error("[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '"+typeof e+"'");if(!0!==Array.isArray(t))throw new Error("[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '"+typeof t+"'");return t[Boolean(r)?"some":"every"]((function(t){return e.indexOf(t)>=0}))},intToBuffer:function(e){var t=kn(e);return new Buffer(xn(t.slice(2)),"hex")},getBinarySize:function(e){if("string"!=typeof e)throw new Error("[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '"+typeof e+"'.");return Buffer.byteLength(e,"utf8")},isHexPrefixed:Sn,stripHexPrefix:Ln,padToEven:xn,intToHex:kn,fromAscii:function(e){for(var t="",r=0;r<e.length;r++){var i=e.charCodeAt(r).toString(16);t+=i.length<2?"0"+i:i}return"0x"+t},fromUtf8:function(e){return"0x"+xn(new Buffer(e,"utf8").toString("hex")).replace(/^0+|0+$/g,"")},toAscii:function(e){var t="",r=0,i=e.length;for("0x"===e.substring(0,2)&&(r=2);r<i;r+=2){var n=parseInt(e.substr(r,2),16);t+=String.fromCharCode(n)}return t},toUtf8:function(e){return new Buffer(xn(Ln(e).replace(/^0+|0+$/g,"")),"hex").toString("utf8")},getKeys:function(e,t,r){if(!Array.isArray(e))throw new Error("[ethjs-util] method getKeys expecting type Array as 'params' input, got '"+typeof e+"'");if("string"!=typeof t)throw new Error("[ethjs-util] method getKeys expecting type String for input 'key' got '"+typeof t+"'.");for(var i=[],n=0;n<e.length;n++){var f=e[n][t];if(r&&!f)f="";else if("string"!=typeof f)throw new Error("invalid abi");i.push(f)}return i},isHexString:function(e,t){return!("string"!=typeof e||!e.match(/^0x[0-9A-Fa-f]*$/))&&(!t||e.length===2+2*t)}},Pn=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=u.Buffer;Object.assign(t,Bn),t.MAX_INTEGER=new St("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",16),t.TWO_POW256=new St("10000000000000000000000000000000000000000000000000000000000000000",16),t.KECCAK256_NULL_S="c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",t.SHA3_NULL_S=t.KECCAK256_NULL_S,t.KECCAK256_NULL=i.from(t.KECCAK256_NULL_S,"hex"),t.SHA3_NULL=t.KECCAK256_NULL,t.KECCAK256_RLP_ARRAY_S="1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",t.SHA3_RLP_ARRAY_S=t.KECCAK256_RLP_ARRAY_S,t.KECCAK256_RLP_ARRAY=i.from(t.KECCAK256_RLP_ARRAY_S,"hex"),t.SHA3_RLP_ARRAY=t.KECCAK256_RLP_ARRAY,t.KECCAK256_RLP_S="56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",t.SHA3_RLP_S=t.KECCAK256_RLP_S,t.KECCAK256_RLP=i.from(t.KECCAK256_RLP_S,"hex"),t.SHA3_RLP=t.KECCAK256_RLP,t.BN=St,t.rlp=Mn,t.secp256k1=In,t.zeros=function(e){return i.allocUnsafe(e).fill(0)},t.zeroAddress=function(){var e=t.zeros(20);return t.bufferToHex(e)},t.setLengthLeft=t.setLength=function(e,r,i){var n=t.zeros(r);return e=t.toBuffer(e),i?e.length<r?(e.copy(n),n):e.slice(0,r):e.length<r?(e.copy(n,r-e.length),n):e.slice(-r)},t.setLengthRight=function(e,r){return t.setLength(e,r,!0)},t.unpad=t.stripZeros=function(e){for(var r=(e=t.stripHexPrefix(e))[0];e.length>0&&"0"===r.toString();)r=(e=e.slice(1))[0];return e},t.toBuffer=function(e){if(!i.isBuffer(e))if(Array.isArray(e))e=i.from(e);else if("string"==typeof e)e=t.isHexString(e)?i.from(t.padToEven(t.stripHexPrefix(e)),"hex"):i.from(e);else if("number"==typeof e)e=t.intToBuffer(e);else if(null==e)e=i.allocUnsafe(0);else if(St.isBN(e))e=e.toArrayLike(i);else{if(!e.toArray)throw new Error("invalid type");e=i.from(e.toArray())}return e},t.bufferToInt=function(e){return new St(t.toBuffer(e)).toNumber()},t.bufferToHex=function(e){return"0x"+(e=t.toBuffer(e)).toString("hex")},t.fromSigned=function(e){return new St(e).fromTwos(256)},t.toUnsigned=function(e){return i.from(e.toTwos(256).toArray())},t.keccak=function(e,r){return e=t.toBuffer(e),r||(r=256),g("keccak"+r).update(e).digest()},t.keccak256=function(e){return t.keccak(e)},t.sha3=t.keccak,t.sha256=function(e){return e=t.toBuffer(e),Mt("sha256").update(e).digest()},t.ripemd160=function(e,r){e=t.toBuffer(e);var i=Mt("rmd160").update(e).digest();return!0===r?t.setLength(i,32):i},t.rlphash=function(e){return t.keccak(Mn.encode(e))},t.isValidPrivate=function(e){return In.privateKeyVerify(e)},t.isValidPublic=function(e,t){return 64===e.length?In.publicKeyVerify(i.concat([i.from([4]),e])):!!t&&In.publicKeyVerify(e)},t.pubToAddress=t.publicToAddress=function(e,r){return e=t.toBuffer(e),r&&64!==e.length&&(e=In.publicKeyConvert(e,!1).slice(1)),(0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(64===e.length),t.keccak(e).slice(-20)};var n=t.privateToPublic=function(e){return e=t.toBuffer(e),In.publicKeyCreate(e,!1).slice(1)};t.importPublic=function(e){return 64!==(e=t.toBuffer(e)).length&&(e=In.publicKeyConvert(e,!1).slice(1)),e},t.ecsign=function(e,t){var r=In.sign(e,t),i={};return i.r=r.signature.slice(0,32),i.s=r.signature.slice(32,64),i.v=r.recovery+27,i},t.hashPersonalMessage=function(e){var r=t.toBuffer("Ethereum Signed Message:\n"+e.length.toString());return t.keccak(i.concat([r,e]))},t.ecrecover=function(e,r,n,f){var o=i.concat([t.setLength(n,32),t.setLength(f,32)],64),a=r-27;if(0!==a&&1!==a)throw new Error("Invalid signature v value");var s=In.recover(e,o,a);return In.publicKeyConvert(s,!1).slice(1)},t.toRpcSig=function(e,r,n){if(27!==e&&28!==e)throw new Error("Invalid recovery id");return t.bufferToHex(i.concat([t.setLengthLeft(r,32),t.setLengthLeft(n,32),t.toBuffer(e-27)]))},t.fromRpcSig=function(e){if(65!==(e=t.toBuffer(e)).length)throw new Error("Invalid signature length");var r=e[64];return r<27&&(r+=27),{v:r,r:e.slice(0,32),s:e.slice(32,64)}},t.privateToAddress=function(e){return t.publicToAddress(n(e))},t.isValidAddress=function(e){return/^0x[0-9a-fA-F]{40}$/.test(e)},t.isZeroAddress=function(e){return t.zeroAddress()===t.addHexPrefix(e)},t.toChecksumAddress=function(e){e=t.stripHexPrefix(e).toLowerCase();for(var r=t.keccak(e).toString("hex"),i="0x",n=0;n<e.length;n++)parseInt(r[n],16)>=8?i+=e[n].toUpperCase():i+=e[n];return i},t.isValidChecksumAddress=function(e){return t.isValidAddress(e)&&t.toChecksumAddress(e)===e},t.generateAddress=function(e,r){return e=t.toBuffer(e),r=(r=new St(r)).isZero()?null:i.from(r.toArray()),t.rlphash([e,r]).slice(-20)},t.isPrecompiled=function(e){var r=t.unpad(e);return 1===r.length&&r[0]>=1&&r[0]<=8},t.addHexPrefix=function(e){return"string"!=typeof e||t.isHexPrefixed(e)?e:"0x"+e},t.isValidSignature=function(e,t,r,i){var n=new St("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),f=new St("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",16);return 32===t.length&&32===r.length&&((27===e||28===e)&&(t=new St(t),r=new St(r),!(t.isZero()||t.gt(f)||r.isZero()||r.gt(f))&&(!1!==i||1!==new St(r).cmp(n))))},t.baToJSON=function(e){if(i.isBuffer(e))return"0x"+e.toString("hex");if(e instanceof Array){for(var r=[],n=0;n<e.length;n++)r.push(t.baToJSON(e[n]));return r}},t.defineProperties=function(e,n,f){if(e.raw=[],e._fields=[],e.toJSON=function(r){if(r){var i={};return e._fields.forEach((function(t){i[t]="0x"+e[t].toString("hex")})),i}return t.baToJSON(this.raw)},e.serialize=function(){return Mn.encode(e.raw)},n.forEach((function(r,n){function f(){return e.raw[n]}function o(f){"00"!==(f=t.toBuffer(f)).toString("hex")||r.allowZero||(f=i.allocUnsafe(0)),r.allowLess&&r.length?(f=t.stripZeros(f),(0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(r.length>=f.length,"The field "+r.name+" must not have more "+r.length+" bytes")):r.allowZero&&0===f.length||!r.length||(0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(r.length===f.length,"The field "+r.name+" must have byte length of "+r.length),e.raw[n]=f}e._fields.push(r.name),Object.defineProperty(e,r.name,{enumerable:!0,configurable:!0,get:f,set:o}),r.default&&(e[r.name]=r.default),r.alias&&Object.defineProperty(e,r.alias,{enumerable:!1,configurable:!0,set:o,get:f})})),f)if("string"==typeof f&&(f=i.from(t.stripHexPrefix(f),"hex")),i.isBuffer(f)&&(f=Mn.decode(f)),Array.isArray(f)){if(f.length>e._fields.length)throw new Error("wrong number of fields in data");f.forEach((function(r,i){e[e._fields[i]]=t.toBuffer(r)}))}else{if("object"!==(void 0===f?"undefined":r(f)))throw new Error("invalid data");var o=Object.keys(f);n.forEach((function(t){-1!==o.indexOf(t.name)&&(e[t.name]=f[t.name]),-1!==o.indexOf(t.alias)&&(e[t.alias]=f[t.alias])}))}}})),Tn=(Pn.MAX_INTEGER,Pn.TWO_POW256,Pn.KECCAK256_NULL_S,Pn.SHA3_NULL_S,Pn.KECCAK256_NULL,Pn.SHA3_NULL,Pn.KECCAK256_RLP_ARRAY_S,Pn.SHA3_RLP_ARRAY_S,Pn.KECCAK256_RLP_ARRAY,Pn.SHA3_RLP_ARRAY,Pn.KECCAK256_RLP_S,Pn.SHA3_RLP_S,Pn.KECCAK256_RLP,Pn.SHA3_RLP,Pn.BN,Pn.rlp,Pn.secp256k1,Pn.zeros,Pn.zeroAddress,Pn.setLengthLeft,Pn.setLength,Pn.setLengthRight,Pn.unpad,Pn.stripZeros,Pn.toBuffer,Pn.bufferToInt,Pn.bufferToHex,Pn.fromSigned,Pn.toUnsigned,Pn.keccak,Pn.keccak256,Pn.sha3,Pn.sha256,Pn.ripemd160,Pn.rlphash,Pn.isValidPrivate,Pn.isValidPublic,Pn.pubToAddress,Pn.publicToAddress,Pn.privateToPublic,Pn.importPublic,Pn.ecsign,Pn.hashPersonalMessage,Pn.ecrecover,Pn.toRpcSig,Pn.fromRpcSig,Pn.privateToAddress,Pn.isValidAddress),Rn=(Pn.isZeroAddress,Pn.toChecksumAddress,Pn.isValidChecksumAddress,Pn.generateAddress,Pn.isPrecompiled,Pn.addHexPrefix),Cn=(Pn.isValidSignature,Pn.baToJSON,Pn.defineProperties,function(){for(var e={},t=0;t<arguments.length;t++){var r=arguments[t];for(var i in r)Nn.call(r,i)&&(e[i]=r[i])}return e}),Nn=Object.prototype.hasOwnProperty;const zn=(e,t)=>function(){const r=t.promiseModule,i=new Array(arguments.length);for(let e=0;e<arguments.length;e++)i[e]=arguments[e];return new r((r,n)=>{t.errorFirst?i.push((function(e,i){if(t.multiArgs){const t=new Array(arguments.length-1);for(let e=1;e<arguments.length;e++)t[e-1]=arguments[e];e?(t.unshift(e),n(t)):r(t)}else e?n(e):r(i)})):i.push((function(e){if(t.multiArgs){const e=new Array(arguments.length-1);for(let t=0;t<arguments.length;t++)e[t]=arguments[t];r(e)}else r(e)})),e.apply(this,i)})};var jn=(e,t)=>{t=Object.assign({exclude:[/.+(Sync|Stream)$/],errorFirst:!0,promiseModule:Promise},t);const r=e=>{const r=t=>"string"==typeof t?e===t:t.test(e);return t.include?t.include.some(r):!t.exclude.some(r)};let i;i="function"==typeof e?function(){return t.excludeMain?e.apply(this,arguments):zn(e,t).apply(this,arguments)}:Object.create(Object.getPrototypeOf(e));for(const n in e){const f=e[n];i[n]="function"==typeof f&&r(n)?zn(f,t):f}return i};const Dn=function(e){var t=(e=e||{}).max||Number.MAX_SAFE_INTEGER,r=void 0!==e.start?e.start:Math.floor(Math.random()*t);return function(){return r%=t,r++}}();var Kn=On;function On(e){this.currentProvider=e}function Vn(e){return function(){const t=this;var r=[].slice.call(arguments),i=r.pop();t.sendAsync({method:e,params:r},i)}}function Un(e,t){return function(){const r=this;var i=[].slice.call(arguments),n=i.pop();i.length<e&&i.push("latest"),r.sendAsync({method:t,params:i},n)}}On.prototype.getBalance=Un(2,"eth_getBalance"),On.prototype.getCode=Un(2,"eth_getCode"),On.prototype.getTransactionCount=Un(2,"eth_getTransactionCount"),On.prototype.getStorageAt=Un(3,"eth_getStorageAt"),On.prototype.call=Un(2,"eth_call"),On.prototype.protocolVersion=Vn("eth_protocolVersion"),On.prototype.syncing=Vn("eth_syncing"),On.prototype.coinbase=Vn("eth_coinbase"),On.prototype.mining=Vn("eth_mining"),On.prototype.hashrate=Vn("eth_hashrate"),On.prototype.gasPrice=Vn("eth_gasPrice"),On.prototype.accounts=Vn("eth_accounts"),On.prototype.blockNumber=Vn("eth_blockNumber"),On.prototype.getBlockTransactionCountByHash=Vn("eth_getBlockTransactionCountByHash"),On.prototype.getBlockTransactionCountByNumber=Vn("eth_getBlockTransactionCountByNumber"),On.prototype.getUncleCountByBlockHash=Vn("eth_getUncleCountByBlockHash"),On.prototype.getUncleCountByBlockNumber=Vn("eth_getUncleCountByBlockNumber"),On.prototype.sign=Vn("eth_sign"),On.prototype.sendTransaction=Vn("eth_sendTransaction"),On.prototype.sendRawTransaction=Vn("eth_sendRawTransaction"),On.prototype.estimateGas=Vn("eth_estimateGas"),On.prototype.getBlockByHash=Vn("eth_getBlockByHash"),On.prototype.getBlockByNumber=Vn("eth_getBlockByNumber"),On.prototype.getTransactionByHash=Vn("eth_getTransactionByHash"),On.prototype.getTransactionByBlockHashAndIndex=Vn("eth_getTransactionByBlockHashAndIndex"),On.prototype.getTransactionByBlockNumberAndIndex=Vn("eth_getTransactionByBlockNumberAndIndex"),On.prototype.getTransactionReceipt=Vn("eth_getTransactionReceipt"),On.prototype.getUncleByBlockHashAndIndex=Vn("eth_getUncleByBlockHashAndIndex"),On.prototype.getUncleByBlockNumberAndIndex=Vn("eth_getUncleByBlockNumberAndIndex"),On.prototype.getCompilers=Vn("eth_getCompilers"),On.prototype.compileLLL=Vn("eth_compileLLL"),On.prototype.compileSolidity=Vn("eth_compileSolidity"),On.prototype.compileSerpent=Vn("eth_compileSerpent"),On.prototype.newFilter=Vn("eth_newFilter"),On.prototype.newBlockFilter=Vn("eth_newBlockFilter"),On.prototype.newPendingTransactionFilter=Vn("eth_newPendingTransactionFilter"),On.prototype.uninstallFilter=Vn("eth_uninstallFilter"),On.prototype.getFilterChanges=Vn("eth_getFilterChanges"),On.prototype.getFilterLogs=Vn("eth_getFilterLogs"),On.prototype.getLogs=Vn("eth_getLogs"),On.prototype.getWork=Vn("eth_getWork"),On.prototype.submitWork=Vn("eth_submitWork"),On.prototype.submitHashrate=Vn("eth_submitHashrate"),On.prototype.sendAsync=function(e,t){var r;this.currentProvider.sendAsync((r=e,Cn({id:Dn(),jsonrpc:"2.0",params:[]},r)),(function(e,r){if(!e&&r.error&&(e=new Error("EthQuery - RPC Error - "+r.error.message)),e)return t(e);t(null,r.result)}))};var qn,Yn="object"==typeof Reflect?Reflect:null,Fn=Yn&&"function"==typeof Yn.apply?Yn.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};qn=Yn&&"function"==typeof Yn.ownKeys?Yn.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var Hn=Number.isNaN||function(e){return e!=e};function Gn(){Gn.init.call(this)}var Wn=Gn;Gn.EventEmitter=Gn,Gn.prototype._events=void 0,Gn.prototype._eventsCount=0,Gn.prototype._maxListeners=void 0;var Zn=10;function Jn(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function Xn(e){return void 0===e._maxListeners?Gn.defaultMaxListeners:e._maxListeners}function $n(e,t,r,i){var n,f,o,a;if(Jn(r),void 0===(f=e._events)?(f=e._events=Object.create(null),e._eventsCount=0):(void 0!==f.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),f=e._events),o=f[t]),void 0===o)o=f[t]=r,++e._eventsCount;else if("function"==typeof o?o=f[t]=i?[r,o]:[o,r]:i?o.unshift(r):o.push(r),(n=Xn(e))>0&&o.length>n&&!o.warned){o.warned=!0;var s=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");s.name="MaxListenersExceededWarning",s.emitter=e,s.type=t,s.count=o.length,a=s,console&&console.warn&&console.warn(a)}return e}function Qn(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function ef(e,t,r){var i={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},n=Qn.bind(i);return n.listener=r,i.wrapFn=n,n}function tf(e,t,r){var i=e._events;if(void 0===i)return[];var n=i[t];return void 0===n?[]:"function"==typeof n?r?[n.listener||n]:[n]:r?function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(n):nf(n,n.length)}function rf(e){var t=this._events;if(void 0!==t){var r=t[e];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function nf(e,t){for(var r=new Array(t),i=0;i<t;++i)r[i]=e[i];return r}Object.defineProperty(Gn,"defaultMaxListeners",{enumerable:!0,get:function(){return Zn},set:function(e){if("number"!=typeof e||e<0||Hn(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");Zn=e}}),Gn.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},Gn.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||Hn(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},Gn.prototype.getMaxListeners=function(){return Xn(this)},Gn.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var i="error"===e,n=this._events;if(void 0!==n)i=i&&void 0===n.error;else if(!i)return!1;if(i){var f;if(t.length>0&&(f=t[0]),f instanceof Error)throw f;var o=new Error("Unhandled error."+(f?" ("+f.message+")":""));throw o.context=f,o}var a=n[e];if(void 0===a)return!1;if("function"==typeof a)Fn(a,this,t);else{var s=a.length,c=nf(a,s);for(r=0;r<s;++r)Fn(c[r],this,t)}return!0},Gn.prototype.addListener=function(e,t){return $n(this,e,t,!1)},Gn.prototype.on=Gn.prototype.addListener,Gn.prototype.prependListener=function(e,t){return $n(this,e,t,!0)},Gn.prototype.once=function(e,t){return Jn(t),this.on(e,ef(this,e,t)),this},Gn.prototype.prependOnceListener=function(e,t){return Jn(t),this.prependListener(e,ef(this,e,t)),this},Gn.prototype.removeListener=function(e,t){var r,i,n,f,o;if(Jn(t),void 0===(i=this._events))return this;if(void 0===(r=i[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete i[e],i.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(n=-1,f=r.length-1;f>=0;f--)if(r[f]===t||r[f].listener===t){o=r[f].listener,n=f;break}if(n<0)return this;0===n?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,n),1===r.length&&(i[e]=r[0]),void 0!==i.removeListener&&this.emit("removeListener",e,o||t)}return this},Gn.prototype.off=Gn.prototype.removeListener,Gn.prototype.removeAllListeners=function(e){var t,r,i;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var n,f=Object.keys(r);for(i=0;i<f.length;++i)"removeListener"!==(n=f[i])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(i=t.length-1;i>=0;i--)this.removeListener(e,t[i]);return this},Gn.prototype.listeners=function(e){return tf(this,e,!0)},Gn.prototype.rawListeners=function(e){return tf(this,e,!1)},Gn.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):rf.call(e,t)},Gn.prototype.listenerCount=rf,Gn.prototype.eventNames=function(){return this._eventsCount>0?qn(this._events):[]};var ff="object"==typeof Reflect?Reflect:null,of=ff&&"function"==typeof ff.apply?ff.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)},af=sf;function sf(){Wn.call(this)}function cf(e,t,r){try{of(e,t,r)}catch(e){setTimeout(()=>{throw e})}}function uf(e,t){for(var r=new Array(t),i=0;i<t;++i)r[i]=e[i];return r}_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.r.inherits(sf,Wn),sf.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var i="error"===e,n=this._events;if(void 0!==n)i=i&&void 0===n.error;else if(!i)return!1;if(i){var f;if(t.length>0&&(f=t[0]),f instanceof Error)throw f;var o=new Error("Unhandled error."+(f?" ("+f.message+")":""));throw o.context=f,o}var a=n[e];if(void 0===a)return!1;if("function"==typeof a)cf(a,this,t);else{var s=a.length,c=uf(a,s);for(r=0;r<s;++r)cf(c[r],this,t)}return!0};const df=(e,t)=>e+t,hf=["sync","latest"];var lf=class extends af{constructor(e={}){super(),this._blockResetDuration=e.blockResetDuration||2e4,this._blockResetTimeout,this._currentBlock=null,this._isRunning=!1,this._onNewListener=this._onNewListener.bind(this),this._onRemoveListener=this._onRemoveListener.bind(this),this._resetCurrentBlock=this._resetCurrentBlock.bind(this),this._setupInternalEvents()}isRunning(){return this._isRunning}getCurrentBlock(){return this._currentBlock}async getLatestBlock(){if(this._currentBlock)return this._currentBlock;return await new Promise(e=>this.once("latest",e))}removeAllListeners(e){e?super.removeAllListeners(e):super.removeAllListeners(),this._setupInternalEvents(),this._onRemoveListener()}_start(){}_end(){}_setupInternalEvents(){this.removeListener("newListener",this._onNewListener),this.removeListener("removeListener",this._onRemoveListener),this.on("newListener",this._onNewListener),this.on("removeListener",this._onRemoveListener)}_onNewListener(e,t){hf.includes(e)&&this._maybeStart()}_onRemoveListener(e,t){this._getBlockTrackerEventCount()>0||this._maybeEnd()}_maybeStart(){this._isRunning||(this._isRunning=!0,this._cancelBlockResetTimeout(),this._start())}_maybeEnd(){this._isRunning&&(this._isRunning=!1,this._setupBlockResetTimeout(),this._end())}_getBlockTrackerEventCount(){return hf.map(e=>this.listenerCount(e)).reduce(df)}_newPotentialLatest(e){const t=this._currentBlock;t&&bf(e)<=bf(t)||this._setCurrentBlock(e)}_setCurrentBlock(e){const t=this._currentBlock;this._currentBlock=e,this.emit("latest",e),this.emit("sync",{oldBlock:t,newBlock:e})}_setupBlockResetTimeout(){this._cancelBlockResetTimeout(),this._blockResetTimeout=setTimeout(this._resetCurrentBlock,this._blockResetDuration),this._blockResetTimeout.unref&&this._blockResetTimeout.unref()}_cancelBlockResetTimeout(){clearTimeout(this._blockResetTimeout)}_resetCurrentBlock(){this._currentBlock=null}};function bf(e){return Number.parseInt(e,16)}var pf=class extends lf{constructor(e={}){if(!e.provider)throw new Error("PollingBlockTracker - no provider specified.");const t=e.pollingInterval||2e4,r=e.retryTimeout||t/10,i=void 0===e.keepEventLoopActive||e.keepEventLoopActive,n=e.setSkipCacheFlag||!1;super(Object.assign({blockResetDuration:t},e)),this._provider=e.provider,this._pollingInterval=t,this._retryTimeout=r,this._keepEventLoopActive=i,this._setSkipCacheFlag=n}async checkForLatestBlock(){return await this._updateLatestBlock(),await this.getLatestBlock()}_start(){this._performSync().catch(e=>this.emit("error",e))}async _performSync(){for(;this._isRunning;)try{await this._updateLatestBlock(),await _f(this._pollingInterval,!this._keepEventLoopActive)}catch(e){const t=new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\n${e.stack}`);try{this.emit("error",t)}catch(e){console.error(t)}await _f(this._retryTimeout,!this._keepEventLoopActive)}}async _updateLatestBlock(){const e=await this._fetchLatestBlock();this._newPotentialLatest(e)}async _fetchLatestBlock(){const e={jsonrpc:"2.0",id:1,method:"eth_blockNumber",params:[]};this._setSkipCacheFlag&&(e.skipCache=!0);const t=await jn(t=>this._provider.sendAsync(e,t))();if(t.error)throw new Error(`PollingBlockTracker - encountered error fetching block:\n${t.error}`);return t.result}};function _f(e,t){return new Promise(r=>{const i=setTimeout(r,e);i.unref&&t&&i.unref()})}var vf="object"==typeof _index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f&&_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f&&_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f.Object===Object&&_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f,mf="object"==typeof self&&self&&self.Object===Object&&self,yf=vf||mf||Function("return this")(),gf=yf.Symbol,wf=Object.prototype,Af=wf.hasOwnProperty,Ef=wf.toString,If=gf?gf.toStringTag:void 0;var Mf=function(e){var t=Af.call(e,If),r=e[If];try{e[If]=void 0;var i=!0}catch(e){}var n=Ef.call(e);return i&&(t?e[If]=r:delete e[If]),n},Sf=Object.prototype.toString;var Lf=function(e){return Sf.call(e)},xf=gf?gf.toStringTag:void 0;var kf=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":xf&&xf in Object(e)?Mf(e):Lf(e)};var Bf=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)};var Pf=function(e){if(!Bf(e))return!1;var t=kf(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t};var Tf=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991};var Rf=function(e){return null!=e&&Tf(e.length)&&!Pf(e)},Cf=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default={},e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Cf);var Nf=function(){},zf=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(){if(null!==e){var t=e;e=null,t.apply(this,arguments)}}},e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(zf);var jf=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return r&&e[r]&&e[r]()};var r="function"==typeof Symbol&&Symbol.iterator;e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(jf);var Df=function(e,t){for(var r=-1,i=Array(e);++r<e;)i[r]=t(r);return i};var Kf=function(e){return null!=e&&"object"==typeof e};var Of=function(e){return Kf(e)&&"[object Arguments]"==kf(e)},Vf=Object.prototype,Uf=Vf.hasOwnProperty,qf=Vf.propertyIsEnumerable,Yf=Of(function(){return arguments}())?Of:function(e){return Kf(e)&&Uf.call(e,"callee")&&!qf.call(e,"callee")},Ff=Array.isArray;var Hf=function(){return!1},Gf=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=t&&!t.nodeType&&t,i=r&&e&&!e.nodeType&&e,n=i&&i.exports===r?yf.Buffer:void 0,f=(n?n.isBuffer:void 0)||Hf;e.exports=f})),Wf=/^(?:0|[1-9]\d*)$/;var Zf=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&Wf.test(e))&&e>-1&&e%1==0&&e<t},Jf={};Jf["[object Float32Array]"]=Jf["[object Float64Array]"]=Jf["[object Int8Array]"]=Jf["[object Int16Array]"]=Jf["[object Int32Array]"]=Jf["[object Uint8Array]"]=Jf["[object Uint8ClampedArray]"]=Jf["[object Uint16Array]"]=Jf["[object Uint32Array]"]=!0,Jf["[object Arguments]"]=Jf["[object Array]"]=Jf["[object ArrayBuffer]"]=Jf["[object Boolean]"]=Jf["[object DataView]"]=Jf["[object Date]"]=Jf["[object Error]"]=Jf["[object Function]"]=Jf["[object Map]"]=Jf["[object Number]"]=Jf["[object Object]"]=Jf["[object RegExp]"]=Jf["[object Set]"]=Jf["[object String]"]=Jf["[object WeakMap]"]=!1;var Xf=function(e){return Kf(e)&&Tf(e.length)&&!!Jf[kf(e)]};var $f=function(e){return function(t){return e(t)}},Qf=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r=t&&!t.nodeType&&t,i=r&&e&&!e.nodeType&&e,n=i&&i.exports===r&&vf.process,f=function(){try{var e=i&&i.require&&i.require("util").types;return e||n&&n.binding&&n.binding("util")}catch(e){}}();e.exports=f})),eo=Qf&&Qf.isTypedArray,to=eo?$f(eo):Xf,ro=Object.prototype.hasOwnProperty;var io=function(e,t){var r=Ff(e),i=!r&&Yf(e),n=!r&&!i&&Gf(e),f=!r&&!i&&!n&&to(e),o=r||i||n||f,a=o?Df(e.length,String):[],s=a.length;for(var c in e)!t&&!ro.call(e,c)||o&&("length"==c||n&&("offset"==c||"parent"==c)||f&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||Zf(c,s))||a.push(c);return a},no=Object.prototype;var fo=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||no)};var oo=function(e,t){return function(r){return e(t(r))}}(Object.keys,Object),ao=Object.prototype.hasOwnProperty;var so=function(e){if(!fo(e))return oo(e);var t=[];for(var r in Object(e))ao.call(e,r)&&"constructor"!=r&&t.push(r);return t};var co=function(e){return Rf(e)?io(e):so(e)},uo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((0,r.default)(e))return function(e){var t=-1,r=e.length;return function(){return++t<r?{value:e[t],key:t}:null}}(e);var t=(0,i.default)(e);return t?function(e){var t=-1;return function(){var r=e.next();return r.done?null:(t++,{value:r.value,key:t})}}(t):(f=e,o=(0,n.default)(f),a=-1,s=o.length,function(){var e=o[++a];return a<s?{value:f[e],key:e}:null});var f,o,a,s};var r=f(Rf),i=f(jf),n=f(co);function f(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(uo);var ho=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(){if(null===e)throw new Error("Callback was already called.");var t=e;e=null,t.apply(this,arguments)}},e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(ho);var lo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(t,a,s){if(s=(0,i.default)(s||r.default),e<=0||!t)return s(null);var c=(0,n.default)(t),u=!1,d=0,h=!1;function l(e,t){if(d-=1,e)u=!0,s(e);else{if(t===o.default||u&&d<=0)return u=!0,s(null);h||b()}}function b(){for(h=!0;d<e&&!u;){var t=c();if(null===t)return u=!0,void(d<=0&&s(null));d+=1,a(t.value,t.key,(0,f.default)(l))}h=!1}b()}};var r=a(Nf),i=a(zf),n=a(uo),f=a(ho),o=a(Cf);function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(lo);var bo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){t|=0;for(var r=Math.max(e.length-t,0),i=Array(r),n=0;n<r;n++)i[n]=e[t+n];return i},e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(bo);var po=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(){var t=(0,i.default)(arguments),r=t.pop();e.call(this,t,r)}};var r,i=(r=bo)&&r.__esModule?r:{default:r};e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(po);var _o=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hasNextTick=t.hasSetImmediate=void 0,t.fallback=a,t.wrap=s;var r,i=(r=bo)&&r.__esModule?r:{default:r};var n,f=t.hasSetImmediate="function"==typeof setImmediate&&setImmediate,o=t.hasNextTick="object"==typeof process&&"function"==typeof process.nextTick;function a(e){setTimeout(e,0)}function s(e){return function(t){var r=(0,i.default)(arguments,1);e((function(){t.apply(null,r)}))}}n=f?setImmediate:o?process.nextTick:a,t.default=s(n)}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(_o);_o.hasNextTick,_o.hasSetImmediate,_o.fallback,_o.wrap;var vo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,i.default)((function(t,i){var n;try{n=e.apply(this,t)}catch(e){return i(e)}(0,r.default)(n)&&"function"==typeof n.then?n.then((function(e){o(i,null,e)}),(function(e){o(i,e.message?e:new Error(e))})):i(null,n)}))};var r=f(Bf),i=f(po),n=f(_o);function f(e){return e&&e.__esModule?e:{default:e}}function o(e,t,r){try{e(t,r)}catch(e){(0,n.default)(a,e)}}function a(e){throw e}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(vo);var mo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isAsync=void 0;var r,i=(r=vo)&&r.__esModule?r:{default:r};var n="function"==typeof Symbol;function f(e){return n&&"AsyncFunction"===e[Symbol.toStringTag]}t.default=function(e){return f(e)?(0,i.default)(e):e},t.isAsync=f}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(mo);mo.isAsync;var yo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,f){(0,r.default)(t)(e,(0,i.default)(n),f)};var r=n(lo),i=n(mo);function n(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(yo);var go=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return function(r,i,n){return e(r,t,i,n)}},e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(go);var wo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i){((0,r.default)(e)?d:h)(e,(0,c.default)(t),i)};var r=u(Rf),i=u(Cf),n=u(yo),f=u(go),o=u(Nf),a=u(zf),s=u(ho),c=u(mo);function u(e){return e&&e.__esModule?e:{default:e}}function d(e,t,r){r=(0,a.default)(r||o.default);var n=0,f=0,c=e.length;function u(e,t){e?r(e):++f!==c&&t!==i.default||r(null)}for(0===c&&r(null);n<c;n++)t(e[n],n,(0,s.default)(u))}var h=(0,f.default)(n.default,1/0);e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(wo);var Ao=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(t,n,f){return e(r.default,t,(0,i.default)(n),f)}};var r=n(wo),i=n(mo);function n(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Ao);var Eo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,f){f=f||r.default,t=t||[];var o=[],a=0,s=(0,i.default)(n);e(t,(function(e,t,r){var i=a++;s(e,(function(e,t){o[i]=t,r(e)}))}),(function(e){f(e,o)}))};var r=n(Nf),i=n(mo);function n(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Eo);var Io=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var r=n(Ao),i=n(Eo);function n(e){return e&&e.__esModule?e:{default:e}}t.default=(0,r.default)(i.default),e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Io);var Mo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(t,r,i){return e(t,i)}},e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Mo);var So=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,f,o){(0,r.default)(t)(e,(0,i.default)((0,n.default)(f)),o)};var r=f(lo),i=f(Mo),n=f(mo);function f(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(So);var Lo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var r=n(So),i=n(go);function n(e){return e&&e.__esModule?e:{default:e}}t.default=(0,i.default)(r.default,1),e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Lo);var xo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(t=(0,n.default)(t||i.default),!(0,r.default)(e))return t(new Error("First argument to waterfall must be an array of functions"));if(!e.length)return t();var s=0;function c(t){var r=(0,a.default)(e[s++]);t.push((0,o.default)(u)),r.apply(null,t)}function u(r){if(r||s===e.length)return t.apply(null,arguments);c((0,f.default)(arguments,1))}c([])};var r=s(Ff),i=s(Nf),n=s(zf),f=s(bo),o=s(ho),a=s(mo);function s(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(xo);var ko=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){o=o||r.default;var a=(0,i.default)(t)?[]:{};e(t,(function(e,t,r){(0,f.default)(e)((function(e,i){arguments.length>2&&(i=(0,n.default)(arguments,1)),a[t]=i,r(e)}))}),(function(e){o(e,a)}))};var r=o(Nf),i=o(Rf),n=o(bo),f=o(mo);function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(ko);var Bo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,i.default)(r.default,e,t)};var r=n(wo),i=n(ko);function n(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Bo);var Po=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_INTEGER=new St("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",16),t.TWO_POW256=new St("10000000000000000000000000000000000000000000000000000000000000000",16),t.KECCAK256_NULL_S="c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",t.KECCAK256_NULL=Buffer.from(t.KECCAK256_NULL_S,"hex"),t.KECCAK256_RLP_ARRAY_S="1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",t.KECCAK256_RLP_ARRAY=Buffer.from(t.KECCAK256_RLP_ARRAY_S,"hex"),t.KECCAK256_RLP_S="56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",t.KECCAK256_RLP=Buffer.from(t.KECCAK256_RLP_S,"hex")}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Po);Po.MAX_INTEGER,Po.TWO_POW256,Po.KECCAK256_NULL_S,Po.KECCAK256_NULL,Po.KECCAK256_RLP_ARRAY_S,Po.KECCAK256_RLP_ARRAY,Po.KECCAK256_RLP_S,Po.KECCAK256_RLP;var To=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.zeros=function(e){return Buffer.allocUnsafe(e).fill(0)},t.setLengthLeft=function(e,r,i){void 0===i&&(i=!1);var n=t.zeros(r);return e=t.toBuffer(e),i?e.length<r?(e.copy(n),n):e.slice(0,r):e.length<r?(e.copy(n,r-e.length),n):e.slice(-r)},t.setLength=t.setLengthLeft,t.setLengthRight=function(e,r){return t.setLength(e,r,!0)},t.unpad=function(e){for(var t=(e=Bn.stripHexPrefix(e))[0];e.length>0&&"0"===t.toString();)t=(e=e.slice(1))[0];return e},t.stripZeros=t.unpad,t.toBuffer=function(e){if(!Buffer.isBuffer(e))if(Array.isArray(e))e=Buffer.from(e);else if("string"==typeof e){if(!Bn.isHexString(e))throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: "+e);e=Buffer.from(Bn.padToEven(Bn.stripHexPrefix(e)),"hex")}else if("number"==typeof e)e=Bn.intToBuffer(e);else if(null==e)e=Buffer.allocUnsafe(0);else if(St.isBN(e))e=e.toArrayLike(Buffer);else{if(!e.toArray)throw new Error("invalid type");e=Buffer.from(e.toArray())}return e},t.bufferToInt=function(e){return new St(t.toBuffer(e)).toNumber()},t.bufferToHex=function(e){return"0x"+(e=t.toBuffer(e)).toString("hex")},t.fromSigned=function(e){return new St(e).fromTwos(256)},t.toUnsigned=function(e){return Buffer.from(e.toTwos(256).toArray())},t.addHexPrefix=function(e){return"string"!=typeof e||Bn.isHexPrefixed(e)?e:"0x"+e},t.baToJSON=function(e){if(Buffer.isBuffer(e))return"0x"+e.toString("hex");if(e instanceof Array){for(var r=[],i=0;i<e.length;i++)r.push(t.baToJSON(e[i]));return r}}}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(To);To.zeros,To.setLengthLeft,To.setLength,To.setLengthRight,To.unpad,To.stripZeros,To.toBuffer,To.bufferToInt,To.bufferToHex,To.fromSigned,To.toUnsigned,To.addHexPrefix,To.baToJSON;const Ro=u.Buffer,Co=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.b.Transform;const No=u.Buffer,zo=_crypto_commonjs_external_1a228943_js__WEBPACK_IMPORTED_MODULE_7__.b.Transform;const jo=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648];var Do=function(e){for(let t=0;t<24;++t){const r=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],n=e[2]^e[12]^e[22]^e[32]^e[42],f=e[3]^e[13]^e[23]^e[33]^e[43],o=e[4]^e[14]^e[24]^e[34]^e[44],a=e[5]^e[15]^e[25]^e[35]^e[45],s=e[6]^e[16]^e[26]^e[36]^e[46],c=e[7]^e[17]^e[27]^e[37]^e[47],u=e[8]^e[18]^e[28]^e[38]^e[48],d=e[9]^e[19]^e[29]^e[39]^e[49];let h=u^(n<<1|f>>>31),l=d^(f<<1|n>>>31);const b=e[0]^h,p=e[1]^l,_=e[10]^h,v=e[11]^l,m=e[20]^h,y=e[21]^l,g=e[30]^h,w=e[31]^l,A=e[40]^h,E=e[41]^l;h=r^(o<<1|a>>>31),l=i^(a<<1|o>>>31);const I=e[2]^h,M=e[3]^l,S=e[12]^h,L=e[13]^l,x=e[22]^h,k=e[23]^l,B=e[32]^h,P=e[33]^l,T=e[42]^h,R=e[43]^l;h=n^(s<<1|c>>>31),l=f^(c<<1|s>>>31);const C=e[4]^h,N=e[5]^l,z=e[14]^h,j=e[15]^l,D=e[24]^h,K=e[25]^l,O=e[34]^h,V=e[35]^l,U=e[44]^h,q=e[45]^l;h=o^(u<<1|d>>>31),l=a^(d<<1|u>>>31);const Y=e[6]^h,F=e[7]^l,H=e[16]^h,G=e[17]^l,W=e[26]^h,Z=e[27]^l,J=e[36]^h,X=e[37]^l,$=e[46]^h,Q=e[47]^l;h=s^(r<<1|i>>>31),l=c^(i<<1|r>>>31);const ee=e[8]^h,te=e[9]^l,re=e[18]^h,ie=e[19]^l,ne=e[28]^h,fe=e[29]^l,oe=e[38]^h,ae=e[39]^l,se=e[48]^h,ce=e[49]^l,ue=b,de=p,he=v<<4|_>>>28,le=_<<4|v>>>28,be=m<<3|y>>>29,pe=y<<3|m>>>29,_e=w<<9|g>>>23,ve=g<<9|w>>>23,me=A<<18|E>>>14,ye=E<<18|A>>>14,ge=I<<1|M>>>31,we=M<<1|I>>>31,Ae=L<<12|S>>>20,Ee=S<<12|L>>>20,Ie=x<<10|k>>>22,Me=k<<10|x>>>22,Se=P<<13|B>>>19,Le=B<<13|P>>>19,xe=T<<2|R>>>30,ke=R<<2|T>>>30,Be=N<<30|C>>>2,Pe=C<<30|N>>>2,Te=z<<6|j>>>26,Re=j<<6|z>>>26,Ce=K<<11|D>>>21,Ne=D<<11|K>>>21,ze=O<<15|V>>>17,je=V<<15|O>>>17,De=q<<29|U>>>3,Ke=U<<29|q>>>3,Oe=Y<<28|F>>>4,Ve=F<<28|Y>>>4,Ue=G<<23|H>>>9,qe=H<<23|G>>>9,Ye=W<<25|Z>>>7,Fe=Z<<25|W>>>7,He=J<<21|X>>>11,Ge=X<<21|J>>>11,We=Q<<24|$>>>8,Ze=$<<24|Q>>>8,Je=ee<<27|te>>>5,Xe=te<<27|ee>>>5,$e=re<<20|ie>>>12,Qe=ie<<20|re>>>12,et=fe<<7|ne>>>25,tt=ne<<7|fe>>>25,rt=oe<<8|ae>>>24,it=ae<<8|oe>>>24,nt=se<<14|ce>>>18,ft=ce<<14|se>>>18;e[0]=ue^~Ae&Ce,e[1]=de^~Ee&Ne,e[10]=Oe^~$e&be,e[11]=Ve^~Qe&pe,e[20]=ge^~Te&Ye,e[21]=we^~Re&Fe,e[30]=Je^~he&Ie,e[31]=Xe^~le&Me,e[40]=Be^~Ue&et,e[41]=Pe^~qe&tt,e[2]=Ae^~Ce&He,e[3]=Ee^~Ne&Ge,e[12]=$e^~be&Se,e[13]=Qe^~pe&Le,e[22]=Te^~Ye&rt,e[23]=Re^~Fe&it,e[32]=he^~Ie&ze,e[33]=le^~Me&je,e[42]=Ue^~et&_e,e[43]=qe^~tt&ve,e[4]=Ce^~He&nt,e[5]=Ne^~Ge&ft,e[14]=be^~Se&De,e[15]=pe^~Le&Ke,e[24]=Ye^~rt&me,e[25]=Fe^~it&ye,e[34]=Ie^~ze&We,e[35]=Me^~je&Ze,e[44]=et^~_e&xe,e[45]=tt^~ve&ke,e[6]=He^~nt&ue,e[7]=Ge^~ft&de,e[16]=Se^~De&Oe,e[17]=Le^~Ke&Ve,e[26]=rt^~me&ge,e[27]=it^~ye&we,e[36]=ze^~We&Je,e[37]=je^~Ze&Xe,e[46]=_e^~xe&Be,e[47]=ve^~ke&Pe,e[8]=nt^~ue&Ae,e[9]=ft^~de&Ee,e[18]=De^~Oe&$e,e[19]=Ke^~Ve&Qe,e[28]=me^~ge&Te,e[29]=ye^~we&Re,e[38]=We^~Je&he,e[39]=Ze^~Xe&le,e[48]=xe^~Be&Ue,e[49]=ke^~Pe&qe,e[0]^=jo[2*t],e[1]^=jo[2*t+1]}};const Ko=u.Buffer;function Oo(){this.state=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.blockSize=null,this.count=0,this.squeezing=!1}Oo.prototype.initialize=function(e,t){for(let e=0;e<50;++e)this.state[e]=0;this.blockSize=e/8,this.count=0,this.squeezing=!1},Oo.prototype.absorb=function(e){for(let t=0;t<e.length;++t)this.state[~~(this.count/4)]^=e[t]<<this.count%4*8,this.count+=1,this.count===this.blockSize&&(Do(this.state),this.count=0)},Oo.prototype.absorbLastFewBits=function(e){this.state[~~(this.count/4)]^=e<<this.count%4*8,0!=(128&e)&&this.count===this.blockSize-1&&Do(this.state),this.state[~~((this.blockSize-1)/4)]^=128<<(this.blockSize-1)%4*8,Do(this.state),this.count=0,this.squeezing=!0},Oo.prototype.squeeze=function(e){this.squeezing||this.absorbLastFewBits(1);const t=Ko.alloc(e);for(var r=0;r<e;++r)t[r]=this.state[~~(this.count/4)]>>>this.count%4*8&255,this.count+=1,this.count===this.blockSize&&(Do(this.state),this.count=0);return t},Oo.prototype.copy=function(e){for(let t=0;t<50;++t)e.state[t]=this.state[t];e.blockSize=this.blockSize,e.count=this.count,e.squeezing=this.squeezing};var Vo=function(e){const t=function(e){function t(t,r,i,n,f){Co.call(this,f),this._rate=t,this._capacity=r,this._delimitedSuffix=i,this._hashBitLength=n,this._options=f,this._state=new e,this._state.initialize(t,r),this._finalized=!1}return d(t,Co),t.prototype._transform=function(e,t,r){let i=null;try{this.update(e,t)}catch(e){i=e}r(i)},t.prototype._flush=function(e){let t=null;try{this.push(this.digest())}catch(e){t=e}e(t)},t.prototype.update=function(e,t){if(!Ro.isBuffer(e)&&"string"!=typeof e)throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Digest already called");return Ro.isBuffer(e)||(e=Ro.from(e,t)),this._state.absorb(e),this},t.prototype.digest=function(e){if(this._finalized)throw new Error("Digest already called");this._finalized=!0,this._delimitedSuffix&&this._state.absorbLastFewBits(this._delimitedSuffix);let t=this._state.squeeze(this._hashBitLength/8);return void 0!==e&&(t=t.toString(e)),this._resetState(),t},t.prototype._resetState=function(){return this._state.initialize(this._rate,this._capacity),this},t.prototype._clone=function(){const e=new t(this._rate,this._capacity,this._delimitedSuffix,this._hashBitLength,this._options);return this._state.copy(e._state),e._finalized=this._finalized,e},t}(e),r=function(e){function t(t,r,i,n){zo.call(this,n),this._rate=t,this._capacity=r,this._delimitedSuffix=i,this._options=n,this._state=new e,this._state.initialize(t,r),this._finalized=!1}return d(t,zo),t.prototype._transform=function(e,t,r){let i=null;try{this.update(e,t)}catch(e){i=e}r(i)},t.prototype._flush=function(){},t.prototype._read=function(e){this.push(this.squeeze(e))},t.prototype.update=function(e,t){if(!No.isBuffer(e)&&"string"!=typeof e)throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Squeeze already called");return No.isBuffer(e)||(e=No.from(e,t)),this._state.absorb(e),this},t.prototype.squeeze=function(e,t){this._finalized||(this._finalized=!0,this._state.absorbLastFewBits(this._delimitedSuffix));let r=this._state.squeeze(e);return void 0!==t&&(r=r.toString(t)),r},t.prototype._resetState=function(){return this._state.initialize(this._rate,this._capacity),this},t.prototype._clone=function(){const e=new t(this._rate,this._capacity,this._delimitedSuffix,this._options);return this._state.copy(e._state),e._finalized=this._finalized,e},t}(e);return function(e,i){switch("string"==typeof e?e.toLowerCase():e){case"keccak224":return new t(1152,448,null,224,i);case"keccak256":return new t(1088,512,null,256,i);case"keccak384":return new t(832,768,null,384,i);case"keccak512":return new t(576,1024,null,512,i);case"sha3-224":return new t(1152,448,6,224,i);case"sha3-256":return new t(1088,512,6,256,i);case"sha3-384":return new t(832,768,6,384,i);case"sha3-512":return new t(576,1024,6,512,i);case"shake128":return new r(1344,256,31,i);case"shake256":return new r(1088,512,31,i);default:throw new Error("Invald algorithm: "+e)}}}(Oo),Uo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.keccak=function(e,t){return void 0===t&&(t=256),e="string"!=typeof e||Bn.isHexString(e)?To.toBuffer(e):Buffer.from(e,"utf8"),t||(t=256),Vo("keccak"+t).update(e).digest()},t.keccak256=function(e){return t.keccak(e)},t.sha256=function(e){return e=To.toBuffer(e),Mt("sha256").update(e).digest()},t.ripemd160=function(e,t){e=To.toBuffer(e);var r=Mt("rmd160").update(e).digest();return!0===t?To.setLength(r,32):r},t.rlphash=function(e){return t.keccak(Mn.encode(e))}}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Uo);Uo.keccak,Uo.keccak256,Uo.sha256,Uo.ripemd160,Uo.rlphash;var qo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.zeroAddress=function(){var e=To.zeros(20);return To.bufferToHex(e)},t.isValidAddress=function(e){return/^0x[0-9a-fA-F]{40}$/.test(e)},t.isZeroAddress=function(e){return t.zeroAddress()===To.addHexPrefix(e)},t.toChecksumAddress=function(e,t){e=Bn.stripHexPrefix(e).toLowerCase();for(var r=void 0!==t?t.toString()+"0x":"",i=Uo.keccak(r+e).toString("hex"),n="0x",f=0;f<e.length;f++)parseInt(i[f],16)>=8?n+=e[f].toUpperCase():n+=e[f];return n},t.isValidChecksumAddress=function(e,r){return t.isValidAddress(e)&&t.toChecksumAddress(e,r)===e},t.generateAddress=function(e,t){e=To.toBuffer(e);var r=new St(t);return r.isZero()?Uo.rlphash([e,null]).slice(-20):Uo.rlphash([e,Buffer.from(r.toArray())]).slice(-20)},t.generateAddress2=function(e,t,r){var i=To.toBuffer(e),n=To.toBuffer(t),f=To.toBuffer(r);return (0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(20===i.length),(0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(32===n.length),Uo.keccak256(Buffer.concat([Buffer.from("ff","hex"),i,n,Uo.keccak256(f)])).slice(-20)},t.isPrecompiled=function(e){var t=To.unpad(e);return 1===t.length&&t[0]>=1&&t[0]<=8},t.isValidPrivate=function(e){return In.privateKeyVerify(e)},t.isValidPublic=function(e,t){return void 0===t&&(t=!1),64===e.length?In.publicKeyVerify(Buffer.concat([Buffer.from([4]),e])):!!t&&In.publicKeyVerify(e)},t.pubToAddress=function(e,t){return void 0===t&&(t=!1),e=To.toBuffer(e),t&&64!==e.length&&(e=In.publicKeyConvert(e,!1).slice(1)),(0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(64===e.length),Uo.keccak(e).slice(-20)},t.publicToAddress=t.pubToAddress,t.privateToAddress=function(e){return t.publicToAddress(t.privateToPublic(e))},t.privateToPublic=function(e){return e=To.toBuffer(e),In.publicKeyCreate(e,!1).slice(1)},t.importPublic=function(e){return 64!==(e=To.toBuffer(e)).length&&(e=In.publicKeyConvert(e,!1).slice(1)),e}}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(qo);qo.zeroAddress,qo.isValidAddress,qo.isZeroAddress,qo.toChecksumAddress,qo.isValidChecksumAddress,qo.generateAddress,qo.generateAddress2,qo.isPrecompiled,qo.isValidPrivate,qo.isValidPublic,qo.pubToAddress,qo.publicToAddress,qo.privateToAddress,qo.privateToPublic,qo.importPublic;var Yo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){function r(e,t){return t?e-(2*t+35):e-27}function i(e){return 0===e||1===e}Object.defineProperty(t,"__esModule",{value:!0}),t.ecsign=function(e,t,r){var i=In.sign(e,t),n=i.recovery;return{r:i.signature.slice(0,32),s:i.signature.slice(32,64),v:r?n+(2*r+35):n+27}},t.ecrecover=function(e,t,n,f,o){var a=Buffer.concat([To.setLength(n,32),To.setLength(f,32)],64),s=r(t,o);if(!i(s))throw new Error("Invalid signature v value");var c=In.recover(e,a,s);return In.publicKeyConvert(c,!1).slice(1)},t.toRpcSig=function(e,t,n,f){if(!i(r(e,f)))throw new Error("Invalid signature v value");return To.bufferToHex(Buffer.concat([To.setLengthLeft(t,32),To.setLengthLeft(n,32),To.toBuffer(e)]))},t.fromRpcSig=function(e){var t=To.toBuffer(e);if(65!==t.length)throw new Error("Invalid signature length");var r=t[64];return r<27&&(r+=27),{v:r,r:t.slice(0,32),s:t.slice(32,64)}},t.isValidSignature=function(e,t,n,f,o){void 0===f&&(f=!0);var a=new St("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),s=new St("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",16);if(32!==t.length||32!==n.length)return!1;if(!i(r(e,o)))return!1;var c=new St(t),u=new St(n);return!(c.isZero()||c.gt(s)||u.isZero()||u.gt(s))&&(!f||1!==u.cmp(a))},t.hashPersonalMessage=function(e){var t=Buffer.from("Ethereum Signed Message:\n"+e.length.toString(),"utf-8");return Uo.keccak(Buffer.concat([t,e]))}}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Yo);Yo.ecsign,Yo.ecrecover,Yo.toRpcSig,Yo.fromRpcSig,Yo.isValidSignature,Yo.hashPersonalMessage;var Fo=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.defineProperties=function(e,t,r){if(e.raw=[],e._fields=[],e.toJSON=function(t){if(void 0===t&&(t=!1),t){var r={};return e._fields.forEach((function(t){r[t]="0x"+e[t].toString("hex")})),r}return To.baToJSON(e.raw)},e.serialize=function(){return Mn.encode(e.raw)},t.forEach((function(t,r){function i(){return e.raw[r]}function n(i){"00"!==(i=To.toBuffer(i)).toString("hex")||t.allowZero||(i=Buffer.allocUnsafe(0)),t.allowLess&&t.length?(i=To.stripZeros(i),(0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(t.length>=i.length,"The field "+t.name+" must not have more "+t.length+" bytes")):t.allowZero&&0===i.length||!t.length||(0,_util_commonjs_external_6c254708_js__WEBPACK_IMPORTED_MODULE_8__.b)(t.length===i.length,"The field "+t.name+" must have byte length of "+t.length),e.raw[r]=i}e._fields.push(t.name),Object.defineProperty(e,t.name,{enumerable:!0,configurable:!0,get:i,set:n}),t.default&&(e[t.name]=t.default),t.alias&&Object.defineProperty(e,t.alias,{enumerable:!1,configurable:!0,set:n,get:i})})),r)if("string"==typeof r&&(r=Buffer.from(Bn.stripHexPrefix(r),"hex")),Buffer.isBuffer(r)&&(r=Mn.decode(r)),Array.isArray(r)){if(r.length>e._fields.length)throw new Error("wrong number of fields in data");r.forEach((function(t,r){e[e._fields[r]]=To.toBuffer(t)}))}else{if("object"!=typeof r)throw new Error("invalid data");var i=Object.keys(r);t.forEach((function(t){-1!==i.indexOf(t.name)&&(e[t.name]=r[t.name]),-1!==i.indexOf(t.alias)&&(e[t.alias]=r[t.alias])}))}}}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Fo);Fo.defineProperties;var Ho=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){function r(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1=In,t.BN=St,t.rlp=Mn,Object.assign(t,Bn),r(Po),r(qo),r(Uo),r(Yo),r(To),r(Fo)}));(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.e)(Ho);Ho.secp256k1,Ho.BN,Ho.rlp;var Go=function(){};function Wo(e){return e.startsWith("int[")?"int256"+e.slice(3):"int"===e?"int256":e.startsWith("uint[")?"uint256"+e.slice(4):"uint"===e?"uint256":e.startsWith("fixed[")?"fixed128x128"+e.slice(5):"fixed"===e?"fixed128x128":e.startsWith("ufixed[")?"ufixed128x128"+e.slice(6):"ufixed"===e?"ufixed128x128":e}function Zo(e){return parseInt(/^\D+(\d+)$/.exec(e)[1],10)}function Jo(e){var t=/^\D+(\d+)x(\d+)$/.exec(e);return[parseInt(t[1],10),parseInt(t[2],10)]}function Xo(e){var t=e.match(/(.*)\[(.*?)\]$/);return t?""===t[2]?"dynamic":parseInt(t[2],10):null}function $o(e){var t=typeof e;if("string"===t)return Ho.isHexPrefixed(e)?new St(Ho.stripHexPrefix(e),16):new St(e,10);if("number"===t)return new St(e);if(e.toArray)return e;throw new Error("Argument is not a number")}function Qo(e){var t=/^(\w+)\((.*)\)$/.exec(e);if(3!==t.length)throw new Error("Invalid method signature");var r=/^(.+)\):\((.+)$/.exec(t[2]);if(null!==r&&3===r.length)return{method:t[1],args:r[1].split(","),retargs:r[2].split(",")};var i=t[2].split(",");return 1===i.length&&""===i[0]&&(i=[]),{method:t[1],args:i}}function ea(e,t){var r,i,n,f;if("address"===e)return ea("uint160",$o(t));if("bool"===e)return ea("uint8",t?1:0);if("string"===e)return ea("bytes",Buffer.from(t,"utf8"));if(na(e)){if(void 0===t.length)throw new Error("Not an array?");if("dynamic"!==(r=Xo(e))&&0!==r&&t.length>r)throw new Error("Elements exceed array size: "+r);for(f in n=[],e=e.slice(0,e.lastIndexOf("[")),"string"==typeof t&&(t=JSON.parse(t)),t)n.push(ea(e,t[f]));if("dynamic"===r){var o=ea("uint256",t.length);n.unshift(o)}return Buffer.concat(n)}if("bytes"===e)return t=Buffer.from(t),n=Buffer.concat([ea("uint256",t.length),t]),t.length%32!=0&&(n=Buffer.concat([n,Ho.zeros(32-t.length%32)])),n;if(e.startsWith("bytes")){if((r=Zo(e))<1||r>32)throw new Error("Invalid bytes<N> width: "+r);return Ho.setLengthRight(t,32)}if(e.startsWith("uint")){if((r=Zo(e))%8||r<8||r>256)throw new Error("Invalid uint<N> width: "+r);if((i=$o(t)).bitLength()>r)throw new Error("Supplied uint exceeds width: "+r+" vs "+i.bitLength());if(i<0)throw new Error("Supplied uint is negative");return i.toArrayLike(Buffer,"be",32)}if(e.startsWith("int")){if((r=Zo(e))%8||r<8||r>256)throw new Error("Invalid int<N> width: "+r);if((i=$o(t)).bitLength()>r)throw new Error("Supplied int exceeds width: "+r+" vs "+i.bitLength());return i.toTwos(256).toArrayLike(Buffer,"be",32)}if(e.startsWith("ufixed")){if(r=Jo(e),(i=$o(t))<0)throw new Error("Supplied ufixed is negative");return ea("uint256",i.mul(new St(2).pow(new St(r[1]))))}if(e.startsWith("fixed"))return r=Jo(e),ea("int256",$o(t).mul(new St(2).pow(new St(r[1]))));throw new Error("Unsupported or invalid type: "+e)}function ta(e,t,r){var i,n,f,o;if("string"==typeof e&&(e=ra(e)),"address"===e.name)return ta(e.rawType,t,r).toArrayLike(Buffer,"be",20).toString("hex");if("bool"===e.name)return ta(e.rawType,t,r).toString()===new St(1).toString();if("string"===e.name){var a=ta(e.rawType,t,r);return Buffer.from(a,"utf8").toString()}if(e.isArray){for(f=[],i=e.size,"dynamic"===e.size&&(r=ta("uint256",t,r).toNumber(),i=ta("uint256",t,r).toNumber(),r+=32),o=0;o<i;o++){var s=ta(e.subArray,t,r);f.push(s),r+=e.subArray.memoryUsage}return f}if("bytes"===e.name)return r=ta("uint256",t,r).toNumber(),i=ta("uint256",t,r).toNumber(),t.slice(r+32,r+32+i);if(e.name.startsWith("bytes"))return t.slice(r,r+e.size);if(e.name.startsWith("uint")){if((n=new St(t.slice(r,r+32),16,"be")).bitLength()>e.size)throw new Error("Decoded int exceeds width: "+e.size+" vs "+n.bitLength());return n}if(e.name.startsWith("int")){if((n=new St(t.slice(r,r+32),16,"be").fromTwos(256)).bitLength()>e.size)throw new Error("Decoded uint exceeds width: "+e.size+" vs "+n.bitLength());return n}if(e.name.startsWith("ufixed")){if(i=new St(2).pow(new St(e.size[1])),!(n=ta("uint256",t,r)).mod(i).isZero())throw new Error("Decimals not supported yet");return n.div(i)}if(e.name.startsWith("fixed")){if(i=new St(2).pow(new St(e.size[1])),!(n=ta("int256",t,r)).mod(i).isZero())throw new Error("Decimals not supported yet");return n.div(i)}throw new Error("Unsupported or invalid type: "+e.name)}function ra(e){var t,r,i;if(na(e)){t=Xo(e);var n=e.slice(0,e.lastIndexOf("["));return n=ra(n),r={isArray:!0,name:e,size:t,memoryUsage:"dynamic"===t?32:n.memoryUsage*t,subArray:n}}switch(e){case"address":i="uint160";break;case"bool":i="uint8";break;case"string":i="bytes"}if(r={rawType:i,name:e,memoryUsage:32},e.startsWith("bytes")&&"bytes"!==e||e.startsWith("uint")||e.startsWith("int")?r.size=Zo(e):(e.startsWith("ufixed")||e.startsWith("fixed"))&&(r.size=Jo(e)),e.startsWith("bytes")&&"bytes"!==e&&(r.size<1||r.size>32))throw new Error("Invalid bytes<N> width: "+r.size);if((e.startsWith("uint")||e.startsWith("int"))&&(r.size%8||r.size<8||r.size>256))throw new Error("Invalid int/uint<N> width: "+r.size);return r}function ia(e){return"string"===e||"bytes"===e||"dynamic"===Xo(e)}function na(e){return e.lastIndexOf("]")===e.length-1}function fa(e,t){return e.startsWith("address")||e.startsWith("bytes")?"0x"+t.toString("hex"):t.toString()}Go.eventID=function(e,t){var r=e+"("+t.map(Wo).join(",")+")";return Ho.keccak256(Buffer.from(r))},Go.methodID=function(e,t){return Go.eventID(e,t).slice(0,4)},Go.rawEncode=function(e,t){var r=[],i=[],n=0;e.forEach((function(e){if(na(e)){var t=Xo(e);n+="dynamic"!==t?32*t:32}else n+=32}));for(var f=0;f<e.length;f++){var o=Wo(e[f]),a=ea(o,t[f]);ia(o)?(r.push(ea("uint256",n)),i.push(a),n+=a.length):r.push(a)}return Buffer.concat(r.concat(i))},Go.rawDecode=function(e,t){var r=[];t=Buffer.from(t);for(var i=0,n=0;n<e.length;n++){var f=ra(Wo(e[n])),o=ta(f,t,i);i+=f.memoryUsage,r.push(o)}return r},Go.simpleEncode=function(e){var t=Array.prototype.slice.call(arguments).slice(1),r=Qo(e);if(t.length!==r.args.length)throw new Error("Argument count mismatch");return Buffer.concat([Go.methodID(r.method,r.args),Go.rawEncode(r.args,t)])},Go.simpleDecode=function(e,t){var r=Qo(e);if(!r.retargs)throw new Error("No return values in method");return Go.rawDecode(r.retargs,t)},Go.stringify=function(e,t){var r=[];for(var i in e){var n=e[i],f=t[i];f=/^[^\[]+\[.*\]$/.test(n)?f.map((function(e){return fa(n,e)})).join(", "):fa(n,f),r.push(f)}return r},Go.solidityHexValue=function(e,t,r){var i,n;if(na(e)){var f=e.replace(/\[.*?\]/,"");if(!na(f)){var o=Xo(e);if("dynamic"!==o&&0!==o&&t.length>o)throw new Error("Elements exceed array size: "+o)}var a=t.map((function(e){return Go.solidityHexValue(f,e,256)}));return Buffer.concat(a)}if("bytes"===e)return t;if("string"===e)return Buffer.from(t,"utf8");if("bool"===e){r=r||8;var s=Array(r/4).join("0");return Buffer.from(t?s+"1":s+"0","hex")}if("address"===e){var c=20;return r&&(c=r/8),Ho.setLengthLeft(t,c)}if(e.startsWith("bytes")){if((i=Zo(e))<1||i>32)throw new Error("Invalid bytes<N> width: "+i);return Ho.setLengthRight(t,i)}if(e.startsWith("uint")){if((i=Zo(e))%8||i<8||i>256)throw new Error("Invalid uint<N> width: "+i);if((n=$o(t)).bitLength()>i)throw new Error("Supplied uint exceeds width: "+i+" vs "+n.bitLength());return r=r||i,n.toArrayLike(Buffer,"be",r/8)}if(e.startsWith("int")){if((i=Zo(e))%8||i<8||i>256)throw new Error("Invalid int<N> width: "+i);if((n=$o(t)).bitLength()>i)throw new Error("Supplied int exceeds width: "+i+" vs "+n.bitLength());return r=r||i,n.toTwos(i).toArrayLike(Buffer,"be",r/8)}throw new Error("Unsupported or invalid type: "+e)},Go.solidityPack=function(e,t){if(e.length!==t.length)throw new Error("Number of types are not matching the values");for(var r=[],i=0;i<e.length;i++){var n=Wo(e[i]),f=t[i];r.push(Go.solidityHexValue(n,f,null))}return Buffer.concat(r)},Go.soliditySHA3=function(e,t){return Ho.keccak256(Go.solidityPack(e,t))},Go.soliditySHA256=function(e,t){return Ho.sha256(Go.solidityPack(e,t))},Go.solidityRIPEMD160=function(e,t){return Ho.ripemd160(Go.solidityPack(e,t),!0)},Go.fromSerpent=function(e){for(var t,r=[],i=0;i<e.length;i++){var n=e[i];if("s"===n)r.push("bytes");else if("b"===n){for(var f="bytes",o=i+1;o<e.length&&((t=e[o])>="0"&&t<="9");)f+=e[o]-"0",o++;i=o-1,r.push(f)}else if("i"===n)r.push("int256");else{if("a"!==n)throw new Error("Unsupported or invalid type: "+n);r.push("int256[]")}}return r},Go.toSerpent=function(e){for(var t=[],r=0;r<e.length;r++){var i=e[r];if("bytes"===i)t.push("s");else if(i.startsWith("bytes"))t.push("b"+Zo(i));else if("int256"===i)t.push("i");else{if("int256[]"!==i)throw new Error("Unsupported or invalid type: "+i);t.push("a")}}return t.join("")};var oa=Go,aa={concatSig:function(e,t,r){const i=Pn.fromSigned(t),n=Pn.fromSigned(r),f=Pn.bufferToInt(e),o=da(Pn.toUnsigned(i).toString("hex"),64),a=da(Pn.toUnsigned(n).toString("hex"),64),s=Pn.stripHexPrefix(Pn.intToHex(f));return Pn.addHexPrefix(o.concat(a,s)).toString("hex")},normalize:function(e){if(e){if("number"==typeof e){const t=Pn.toBuffer(e);e=Pn.bufferToHex(t)}if("string"!=typeof e){var t="eth-sig-util.normalize() requires hex string or integer input.";throw new Error(t+=" received "+typeof e+": "+e)}return Pn.addHexPrefix(e.toLowerCase())}},personalSign:function(e,t){var r=Pn.toBuffer(t.data),i=Pn.hashPersonalMessage(r),n=Pn.ecsign(i,e);return Pn.bufferToHex(this.concatSig(n.v,n.r,n.s))},recoverPersonalSignature:function(e){const t=ua(e),r=Pn.publicToAddress(t);return Pn.bufferToHex(r)},extractPublicKey:function(e){return"0x"+ua(e).toString("hex")},typedSignatureHash:function(e){const t=sa(e);return Pn.bufferToHex(t)},signTypedData:function(e,t){const r=sa(t.data),i=Pn.ecsign(r,e);return Pn.bufferToHex(this.concatSig(i.v,i.r,i.s))},recoverTypedSignature:function(e){const t=ca(sa(e.data),e.sig),r=Pn.publicToAddress(t);return Pn.bufferToHex(r)}};function sa(e){const t=new Error("Expect argument to be non-empty array");if("object"!=typeof e||!e.length)throw t;const r=e.map((function(e){return"bytes"===e.type?Pn.toBuffer(e.value):e.value})),i=e.map((function(e){return e.type})),n=e.map((function(e){if(!e.name)throw t;return e.type+" "+e.name}));return oa.soliditySHA3(["bytes32","bytes32"],[oa.soliditySHA3(new Array(e.length).fill("string"),n),oa.soliditySHA3(i,r)])}function ca(e,t){const r=Pn.toBuffer(t),i=Pn.fromRpcSig(r);return Pn.ecrecover(e,i.v,i.r,i.s)}function ua(e){const t=Pn.toBuffer(e.data);return ca(Pn.hashPersonalMessage(t),e.sig)}function da(e,t){for(var r=""+e;r.length<t;)r="0"+r;return r}var ha=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var r;r=function(e){setTimeout(e,0)},"undefined"!=typeof process&&process&&"function"==typeof process.nextTick&&(r=process.nextTick),e.exports=function(e){var t={capacity:e||1,current:0,queue:[],firstHere:!1,take:function(){if(!1===t.firstHere){t.current++,t.firstHere=!0;var e=1}else e=0;var r={n:1};"function"==typeof arguments[0]?r.task=arguments[0]:r.n=arguments[0],arguments.length>=2&&("function"==typeof arguments[1]?r.task=arguments[1]:r.n=arguments[1]);var i=r.task;if(r.task=function(){i(t.leave)},t.current+r.n-e>t.capacity)return 1===e&&(t.current--,t.firstHere=!1),t.queue.push(r);t.current+=r.n-e,r.task(t.leave),1===e&&(t.firstHere=!1)},leave:function(e){if(e=e||1,t.current-=e,t.queue.length){var i=t.queue[0];i.n+t.current>t.capacity||(t.queue.shift(),t.current+=i.n,r(i.task))}else if(t.current<0)throw new Error("leave called too many times.")},available:function(e){return e=e||1,t.current+e<=t.capacity}};return t}}));var la=function(e){return(t,r,i,n)=>{const f=e[t.method];return void 0===f?i():"function"==typeof f?f(t,r,i,n):(r.result=f,void n())}},ba=Object.prototype.toString,pa="function"==typeof setImmediate?setImmediate:function(){var e=[].slice.apply(arguments);e.splice(1,0,0),setTimeout.apply(null,e)},_a=function(e){if(t=e.then,"[object Function]"!==ba.call(t))throw new TypeError("Expected a promise");var t;return function(t){e.then((function(e){pa(t,null,e)}),(function(e){pa(t,e)}))}},va=function(e){return(t,r,i,n)=>{let f=null;const o=e(t,r,(async function(){return f=function(){return new Promise(e=>{i(t=>e(t))})}(),void await f}));_a(o)(e=>{f?_a(f)((t,r)=>{if(t)return console.error(t),n(t);r(e)}):n(e)})}};class ma{constructor(e){this.tasks=[],this.count=e}sched(){if(this.count>0&&this.tasks.length>0){this.count--;let e=this.tasks.shift();if(void 0===e)throw"Unexpected undefined value in tasks list";e()}}acquire(){return new Promise((e,t)=>{this.tasks.push(()=>{var t=!1;e(()=>{t||(t=!0,this.count++,this.sched())})}),process&&process.nextTick?process.nextTick(this.sched.bind(this)):setImmediate(this.sched.bind(this))})}use(e){return this.acquire().then(t=>e().then(e=>(t(),e)).catch(e=>{throw t(),e}))}}var ya={Semaphore:ma,Mutex:class extends ma{constructor(){super(1)}}};var ga=class extends af{constructor(){super(),this.updates=[]}async initialize(){}async update(){throw new Error("BaseFilter - no update method specified")}addResults(e){this.updates=this.updates.concat(e),e.forEach(e=>this.emit("update",e))}addInitialResults(e){}getChangesAndClear(){const e=this.updates;return this.updates=[],e}};var wa=class extends ga{constructor(){super(),this.allResults=[]}async update(){throw new Error("BaseFilterWithHistory - no update method specified")}addResults(e){this.allResults=this.allResults.concat(e),super.addResults(e)}addInitialResults(e){this.allResults=this.allResults.concat(e),super.addInitialResults(e)}getAllResults(){return this.allResults}},Aa={minBlockRef:function(...e){return Ea(e)[0]},maxBlockRef:function(...e){const t=Ea(e);return t[t.length-1]},sortBlockRefs:Ea,bnToHex:function(e){return"0x"+e.toString(16)},blockRefIsNumber:function(e){return e&&!["earliest","latest","pending"].includes(e)},hexToInt:Ia,incrementHexInt:function(e){if(null==e)return e;return Ma(Ia(e)+1)},intToHex:Ma,unsafeRandomBytes:function(e){let t="0x";for(let r=0;r<e;r++)t+=Sa(),t+=Sa();return t}};function Ea(e){return e.sort((e,t)=>"latest"===e||"earliest"===t?1:"latest"===t||"earliest"===e?-1:Ia(e)-Ia(t))}function Ia(e){return null==e?e:Number.parseInt(e,16)}function Ma(e){if(null==e)return e;let t=e.toString(16);return t.length%2&&(t="0"+t),"0x"+t}function Sa(){return Math.floor(16*Math.random()).toString(16)}const{bnToHex:La,hexToInt:xa,incrementHexInt:ka,minBlockRef:Ba,blockRefIsNumber:Pa}=Aa;var Ta=class extends wa{constructor({provider:e,params:t}){super(),this.type="log",this.ethQuery=new Kn(e),this.params=Object.assign({fromBlock:"latest",toBlock:"latest",address:void 0,topics:[]},t),this.params.address&&(Array.isArray(this.params.address)||(this.params.address=[this.params.address]),this.params.address=this.params.address.map(e=>e.toLowerCase()))}async initialize({currentBlock:e}){let t=this.params.fromBlock;["latest","pending"].includes(t)&&(t=e),"earliest"===t&&(t="0x0"),this.params.fromBlock=t;const r=Ba(this.params.toBlock,e),i=Object.assign({},this.params,{toBlock:r}),n=await this._fetchLogs(i);this.addInitialResults(n)}async update({oldBlock:e,newBlock:t}){const r=t;let i;i=e?ka(e):t;const n=Object.assign({},this.params,{fromBlock:i,toBlock:r}),f=(await this._fetchLogs(n)).filter(e=>this.matchLog(e));this.addResults(f)}async _fetchLogs(e){return await jn(t=>this.ethQuery.getLogs(e,t))()}matchLog(e){if(xa(this.params.fromBlock)>=xa(e.blockNumber))return!1;if(Pa(this.params.toBlock)&&xa(this.params.toBlock)<=xa(e.blockNumber))return!1;const t=e.address&&e.address.toLowerCase();return!(this.params.address&&t&&!this.params.address.includes(t))&&this.params.topics.every((t,r)=>{let i=e.topics[r];if(!i)return!1;i=i.toLowerCase();let n=Array.isArray(t)?t:[t];return!!n.includes(null)||(n=n.map(e=>e.toLowerCase()),n.includes(i))})}},Ra=async function({provider:e,fromBlock:t,toBlock:r}){t||(t=r);const i=Ca(t),n=Ca(r),f=Array(n-i+1).fill().map((e,t)=>i+t).map(Na);return await Promise.all(f.map(t=>function(e,t,r){return new Promise((i,n)=>{e.sendAsync({id:1,jsonrpc:"2.0",method:t,params:r},(e,t)=>{if(e)return n(e);i(t.result)})})}(e,"eth_getBlockByNumber",[t,!1])))};function Ca(e){return null==e?e:Number.parseInt(e,16)}function Na(e){if(null==e)return e;return"0x"+e.toString(16)}const{incrementHexInt:za}=Aa;var ja=class extends ga{constructor({provider:e,params:t}){super(),this.type="block",this.provider=e}async update({oldBlock:e,newBlock:t}){const r=t,i=za(e),n=(await Ra({provider:this.provider,fromBlock:i,toBlock:r})).map(e=>e.hash);this.addResults(n)}},Da=(0,_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.d)((function(e,t){var i="[object Arguments]",n="[object Map]",f="[object Object]",o="[object Set]",a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,s=/^\w*$/,c=/^\./,u=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,d=/\\(\\)?/g,h=/^\[object .+?Constructor\]$/,l=/^(?:0|[1-9]\d*)$/,b={};b["[object Float32Array]"]=b["[object Float64Array]"]=b["[object Int8Array]"]=b["[object Int16Array]"]=b["[object Int32Array]"]=b["[object Uint8Array]"]=b["[object Uint8ClampedArray]"]=b["[object Uint16Array]"]=b["[object Uint32Array]"]=!0,b[i]=b["[object Array]"]=b["[object ArrayBuffer]"]=b["[object Boolean]"]=b["[object DataView]"]=b["[object Date]"]=b["[object Error]"]=b["[object Function]"]=b[n]=b["[object Number]"]=b[f]=b["[object RegExp]"]=b[o]=b["[object String]"]=b["[object WeakMap]"]=!1;var p="object"==typeof _index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f&&_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f&&_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f.Object===Object&&_index_d3bd4678_js__WEBPACK_IMPORTED_MODULE_6__.f,_="object"==typeof self&&self&&self.Object===Object&&self,v=p||_||Function("return this")(),m=t&&!t.nodeType&&t,y=m&&e&&!e.nodeType&&e,g=y&&y.exports===m&&p.process,w=function(){try{return g&&g.binding("util")}catch(e){}}(),A=w&&w.isTypedArray;function E(e,t){for(var r=-1,i=e?e.length:0,n=Array(i);++r<i;)n[r]=t(e[r],r,e);return n}function I(e,t){for(var r=-1,i=t.length,n=e.length;++r<i;)e[n+r]=t[r];return e}function M(e,t){for(var r=-1,i=e?e.length:0;++r<i;)if(t(e[r],r,e))return!0;return!1}function S(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function L(e){var t=-1,r=Array(e.size);return e.forEach((function(e,i){r[++t]=[i,e]})),r}function x(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e})),r}var k,B,P,T=Array.prototype,R=Function.prototype,C=Object.prototype,N=v["__core-js_shared__"],z=(k=/[^.]+$/.exec(N&&N.keys&&N.keys.IE_PROTO||""))?"Symbol(src)_1."+k:"",j=R.toString,D=C.hasOwnProperty,K=C.toString,O=RegExp("^"+j.call(D).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),V=v.Symbol,U=v.Uint8Array,q=C.propertyIsEnumerable,Y=T.splice,F=V?V.isConcatSpreadable:void 0,H=(B=Object.keys,P=Object,function(e){return B(P(e))}),G=xe(v,"DataView"),W=xe(v,"Map"),Z=xe(v,"Promise"),J=xe(v,"Set"),X=xe(v,"WeakMap"),$=xe(Object,"create"),Q=je(G),ee=je(W),te=je(Z),re=je(J),ie=je(X),ne=V?V.prototype:void 0,fe=ne?ne.valueOf:void 0,oe=ne?ne.toString:void 0;function ae(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var i=e[t];this.set(i[0],i[1])}}function se(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var i=e[t];this.set(i[0],i[1])}}function ce(e){var t=-1,r=e?e.length:0;for(this.clear();++t<r;){var i=e[t];this.set(i[0],i[1])}}function ue(e){var t=-1,r=e?e.length:0;for(this.__data__=new ce;++t<r;)this.add(e[t])}function de(e){this.__data__=new se(e)}function he(e,t){var r=Ve(e)||Oe(e)?function(e,t){for(var r=-1,i=Array(e);++r<e;)i[r]=t(r);return i}(e.length,String):[],i=r.length,n=!!i;for(var f in e)!t&&!D.call(e,f)||n&&("length"==f||Pe(f,i))||r.push(f);return r}function le(e,t){for(var r=e.length;r--;)if(Ke(e[r][0],t))return r;return-1}ae.prototype.clear=function(){this.__data__=$?$(null):{}},ae.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},ae.prototype.get=function(e){var t=this.__data__;if($){var r=t[e];return"__lodash_hash_undefined__"===r?void 0:r}return D.call(t,e)?t[e]:void 0},ae.prototype.has=function(e){var t=this.__data__;return $?void 0!==t[e]:D.call(t,e)},ae.prototype.set=function(e,t){return this.__data__[e]=$&&void 0===t?"__lodash_hash_undefined__":t,this},se.prototype.clear=function(){this.__data__=[]},se.prototype.delete=function(e){var t=this.__data__,r=le(t,e);return!(r<0)&&(r==t.length-1?t.pop():Y.call(t,r,1),!0)},se.prototype.get=function(e){var t=this.__data__,r=le(t,e);return r<0?void 0:t[r][1]},se.prototype.has=function(e){return le(this.__data__,e)>-1},se.prototype.set=function(e,t){var r=this.__data__,i=le(r,e);return i<0?r.push([e,t]):r[i][1]=t,this},ce.prototype.clear=function(){this.__data__={hash:new ae,map:new(W||se),string:new ae}},ce.prototype.delete=function(e){return Le(this,e).delete(e)},ce.prototype.get=function(e){return Le(this,e).get(e)},ce.prototype.has=function(e){return Le(this,e).has(e)},ce.prototype.set=function(e,t){return Le(this,e).set(e,t),this},ue.prototype.add=ue.prototype.push=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this},ue.prototype.has=function(e){return this.__data__.has(e)},de.prototype.clear=function(){this.__data__=new se},de.prototype.delete=function(e){return this.__data__.delete(e)},de.prototype.get=function(e){return this.__data__.get(e)},de.prototype.has=function(e){return this.__data__.has(e)},de.prototype.set=function(e,t){var r=this.__data__;if(r instanceof se){var i=r.__data__;if(!W||i.length<199)return i.push([e,t]),this;r=this.__data__=new ce(i)}return r.set(e,t),this};var be,pe,_e=(be=function(e,t){return e&&ve(e,t,Ze)},function(e,t){if(null==e)return e;if(!Ue(e))return be(e,t);for(var r=e.length,i=pe?r:-1,n=Object(e);(pe?i--:++i<r)&&!1!==t(n[i],i,n););return e});var ve=function(e){return function(t,r,i){for(var n=-1,f=Object(t),o=i(t),a=o.length;a--;){var s=o[e?a:++n];if(!1===r(f[s],s,f))break}return t}}();function me(e,t){for(var r=0,i=(t=Te(t,e)?[t]:Me(t)).length;null!=e&&r<i;)e=e[ze(t[r++])];return r&&r==i?e:void 0}function ye(e,t){return null!=e&&t in Object(e)}function ge(e,t,r,a,s){return e===t||(null==e||null==t||!Fe(e)&&!He(t)?e!=e&&t!=t:function(e,t,r,a,s,c){var u=Ve(e),d=Ve(t),h="[object Array]",l="[object Array]";u||(h=(h=ke(e))==i?f:h);d||(l=(l=ke(t))==i?f:l);var b=h==f&&!S(e),p=l==f&&!S(t),_=h==l;if(_&&!b)return c||(c=new de),u||We(e)?Se(e,t,r,a,s,c):function(e,t,r,i,f,a,s){switch(r){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!i(new U(e),new U(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return Ke(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case n:var c=L;case o:var u=2&a;if(c||(c=x),e.size!=t.size&&!u)return!1;var d=s.get(e);if(d)return d==t;a|=1,s.set(e,t);var h=Se(c(e),c(t),i,f,a,s);return s.delete(e),h;case"[object Symbol]":if(fe)return fe.call(e)==fe.call(t)}return!1}(e,t,h,r,a,s,c);if(!(2&s)){var v=b&&D.call(e,"__wrapped__"),m=p&&D.call(t,"__wrapped__");if(v||m){var y=v?e.value():e,g=m?t.value():t;return c||(c=new de),r(y,g,a,s,c)}}if(!_)return!1;return c||(c=new de),function(e,t,r,i,n,f){var o=2&n,a=Ze(e),s=a.length,c=Ze(t).length;if(s!=c&&!o)return!1;var u=s;for(;u--;){var d=a[u];if(!(o?d in t:D.call(t,d)))return!1}var h=f.get(e);if(h&&f.get(t))return h==t;var l=!0;f.set(e,t),f.set(t,e);var b=o;for(;++u<s;){d=a[u];var p=e[d],_=t[d];if(i)var v=o?i(_,p,d,t,e,f):i(p,_,d,e,t,f);if(!(void 0===v?p===_||r(p,_,i,n,f):v)){l=!1;break}b||(b="constructor"==d)}if(l&&!b){var m=e.constructor,y=t.constructor;m==y||!("constructor"in e)||!("constructor"in t)||"function"==typeof m&&m instanceof m&&"function"==typeof y&&y instanceof y||(l=!1)}return f.delete(e),f.delete(t),l}(e,t,r,a,s,c)}(e,t,ge,r,a,s))}function we(e){return!(!Fe(e)||function(e){return!!z&&z in e}(e))&&(qe(e)||S(e)?O:h).test(je(e))}function Ae(e){return"function"==typeof e?e:null==e?Je:"object"==typeof e?Ve(e)?function(e,t){if(Te(e)&&Re(t))return Ce(ze(e),t);return function(r){var i=function(e,t,r){var i=null==e?void 0:me(e,t);return void 0===i?r:i}(r,e);return void 0===i&&i===t?function(e,t){return null!=e&&function(e,t,r){t=Te(t,e)?[t]:Me(t);var i,n=-1,f=t.length;for(;++n<f;){var o=ze(t[n]);if(!(i=null!=e&&r(e,o)))break;e=e[o]}if(i)return i;return!!(f=e?e.length:0)&&Ye(f)&&Pe(o,f)&&(Ve(e)||Oe(e))}(e,t,ye)}(r,e):ge(t,i,void 0,3)}}(e[0],e[1]):function(e){var t=function(e){var t=Ze(e),r=t.length;for(;r--;){var i=t[r],n=e[i];t[r]=[i,n,Re(n)]}return t}(e);if(1==t.length&&t[0][2])return Ce(t[0][0],t[0][1]);return function(r){return r===e||function(e,t,r,i){var n=r.length,f=n,o=!i;if(null==e)return!f;for(e=Object(e);n--;){var a=r[n];if(o&&a[2]?a[1]!==e[a[0]]:!(a[0]in e))return!1}for(;++n<f;){var s=(a=r[n])[0],c=e[s],u=a[1];if(o&&a[2]){if(void 0===c&&!(s in e))return!1}else{var d=new de;if(i)var h=i(c,u,s,e,t,d);if(!(void 0===h?ge(u,c,i,3,d):h))return!1}}return!0}(r,e,t)}}(e):Te(t=e)?function(e){return function(t){return null==t?void 0:t[e]}}(ze(t)):function(e){return function(t){return me(t,e)}}(t);var t}function Ee(e){if(r=(t=e)&&t.constructor,i="function"==typeof r&&r.prototype||C,t!==i)return H(e);var t,r,i,n=[];for(var f in Object(e))D.call(e,f)&&"constructor"!=f&&n.push(f);return n}function Ie(e,t){var r=-1,i=Ue(e)?Array(e.length):[];return _e(e,(function(e,n,f){i[++r]=t(e,n,f)})),i}function Me(e){return Ve(e)?e:Ne(e)}function Se(e,t,r,i,n,f){var o=2&n,a=e.length,s=t.length;if(a!=s&&!(o&&s>a))return!1;var c=f.get(e);if(c&&f.get(t))return c==t;var u=-1,d=!0,h=1&n?new ue:void 0;for(f.set(e,t),f.set(t,e);++u<a;){var l=e[u],b=t[u];if(i)var p=o?i(b,l,u,t,e,f):i(l,b,u,e,t,f);if(void 0!==p){if(p)continue;d=!1;break}if(h){if(!M(t,(function(e,t){if(!h.has(t)&&(l===e||r(l,e,i,n,f)))return h.add(t)}))){d=!1;break}}else if(l!==b&&!r(l,b,i,n,f)){d=!1;break}}return f.delete(e),f.delete(t),d}function Le(e,t){var r,i,n=e.__data__;return("string"==(i=typeof(r=t))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==r:null===r)?n["string"==typeof t?"string":"hash"]:n.map}function xe(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return we(r)?r:void 0}var ke=function(e){return K.call(e)};function Be(e){return Ve(e)||Oe(e)||!!(F&&e&&e[F])}function Pe(e,t){return!!(t=null==t?9007199254740991:t)&&("number"==typeof e||l.test(e))&&e>-1&&e%1==0&&e<t}function Te(e,t){if(Ve(e))return!1;var r=typeof e;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=e&&!Ge(e))||(s.test(e)||!a.test(e)||null!=t&&e in Object(t))}function Re(e){return e==e&&!Fe(e)}function Ce(e,t){return function(r){return null!=r&&(r[e]===t&&(void 0!==t||e in Object(r)))}}(G&&"[object DataView]"!=ke(new G(new ArrayBuffer(1)))||W&&ke(new W)!=n||Z&&"[object Promise]"!=ke(Z.resolve())||J&&ke(new J)!=o||X&&"[object WeakMap]"!=ke(new X))&&(ke=function(e){var t=K.call(e),r=t==f?e.constructor:void 0,i=r?je(r):void 0;if(i)switch(i){case Q:return"[object DataView]";case ee:return n;case te:return"[object Promise]";case re:return o;case ie:return"[object WeakMap]"}return t});var Ne=De((function(e){var t;e=null==(t=e)?"":function(e){if("string"==typeof e)return e;if(Ge(e))return oe?oe.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}(t);var r=[];return c.test(e)&&r.push(""),e.replace(u,(function(e,t,i,n){r.push(i?n.replace(d,"$1"):t||e)})),r}));function ze(e){if("string"==typeof e||Ge(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function je(e){if(null!=e){try{return j.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function De(e,t){if("function"!=typeof e||t&&"function"!=typeof t)throw new TypeError("Expected a function");var r=function(){var i=arguments,n=t?t.apply(this,i):i[0],f=r.cache;if(f.has(n))return f.get(n);var o=e.apply(this,i);return r.cache=f.set(n,o),o};return r.cache=new(De.Cache||ce),r}function Ke(e,t){return e===t||e!=e&&t!=t}function Oe(e){return function(e){return He(e)&&Ue(e)}(e)&&D.call(e,"callee")&&(!q.call(e,"callee")||K.call(e)==i)}De.Cache=ce;var Ve=Array.isArray;function Ue(e){return null!=e&&Ye(e.length)&&!qe(e)}function qe(e){var t=Fe(e)?K.call(e):"";return"[object Function]"==t||"[object GeneratorFunction]"==t}function Ye(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}function Fe(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function He(e){return!!e&&"object"==typeof e}function Ge(e){return"symbol"==typeof e||He(e)&&"[object Symbol]"==K.call(e)}var We=A?function(e){return function(t){return e(t)}}(A):function(e){return He(e)&&Ye(e.length)&&!!b[K.call(e)]};function Ze(e){return Ue(e)?he(e):Ee(e)}function Je(e){return e}e.exports=function(e,t){return function e(t,r,i,n,f){var o=-1,a=t.length;for(i||(i=Be),f||(f=[]);++o<a;){var s=t[o];r>0&&i(s)?r>1?e(s,r-1,i,n,f):I(f,s):n||(f[f.length]=s)}return f}(function(e,t){return(Ve(e)?E:Ie)(e,Ae(t))}(e,t),1)}}));const{incrementHexInt:Ka}=Aa;var Oa=class extends ga{constructor({provider:e}){super(),this.type="tx",this.provider=e}async update({oldBlock:e}){const t=e,r=Ka(e),i=await Ra({provider:this.provider,fromBlock:r,toBlock:t}),n=Da(i,e=>e.transactions);this.addResults(n)}};const Va=ya.Mutex,{intToHex:Ua,hexToInt:qa}=Aa;var Ya=function({blockTracker:e,provider:t}){let r=0,i={};const n=new Va,f=function({mutex:e}){return t=>async(r,i,n,f)=>{(await e.acquire())(),t(r,i,n,f)}}({mutex:n}),o=la({eth_newFilter:f(Fa(s)),eth_newBlockFilter:f(Fa(c)),eth_newPendingTransactionFilter:f(Fa(u)),eth_uninstallFilter:f(Ha(l)),eth_getFilterChanges:f(Ha(d)),eth_getFilterLogs:f(Ha(h))}),a=async({oldBlock:e,newBlock:t})=>{if(0===i.length)return;const r=await n.acquire();try{await Promise.all(Ga(i).map(async r=>{try{await r.update({oldBlock:e,newBlock:t})}catch(e){console.error(e)}}))}catch(e){console.error(e)}r()};return o.newLogFilter=s,o.newBlockFilter=c,o.newPendingTransactionFilter=u,o.uninstallFilter=l,o.getFilterChanges=d,o.getFilterLogs=h,o.destroy=()=>{!async function(){const e=Ga(i).length;i={},p({prevFilterCount:e,newFilterCount:0})}()},o;async function s(e){const r=new Ta({provider:t,params:e});await b(r);return r}async function c(){const e=new ja({provider:t});await b(e);return e}async function u(){const e=new Oa({provider:t});await b(e);return e}async function d(e){const t=qa(e),r=i[t];if(!r)throw new Error(`No filter for index "${t}"`);return r.getChangesAndClear()}async function h(e){const t=qa(e),r=i[t];if(!r)throw new Error(`No filter for index "${t}"`);return"log"===r.type?results=r.getAllResults():results=[],results}async function l(e){const t=qa(e),r=i[t],n=Boolean(r);return n&&await async function(e){const t=Ga(i).length;delete i[e];const r=Ga(i).length;p({prevFilterCount:t,newFilterCount:r})}(t),n}async function b(t){const n=Ga(i).length,f=await e.getLatestBlock();return await t.initialize({currentBlock:f}),r++,i[r]=t,t.id=r,t.idHex=Ua(r),p({prevFilterCount:n,newFilterCount:Ga(i).length}),r}function p({prevFilterCount:t,newFilterCount:r}){0===t&&r>0?e.on("sync",a):t>0&&0===r&&e.removeListener("sync",a)}};function Fa(e){return Ha(async(...t)=>{const r=await e(...t);return Ua(r.id)})}function Ha(e){return va(async(t,r)=>{const i=await e.apply(null,t.params);r.result=i})}function Ga(e,t){const r=[];for(let t in e)r.push(e[t]);return r}const{unsafeRandomBytes:Wa,incrementHexInt:Za}=Aa;var Ja=function({blockTracker:e,provider:t}){const r={},i=Ya({blockTracker:e,provider:t});let n=!1;const f=new af,o=la({eth_subscribe:va((async function(f,o){if(n)throw new Error("SubscriptionManager - attempting to use after destroying");const s=f.params[0],c=Wa(16);let u;switch(s){case"newHeads":u=function({subId:r}){const i={type:s,destroy:async()=>{e.removeListener("sync",i.update)},update:async({oldBlock:e,newBlock:i})=>{const n=i,f=Za(e);(await Ra({provider:t,fromBlock:f,toBlock:n})).map(Xa).forEach(e=>{a(r,e)})}};return e.on("sync",i.update),i}({subId:c});break;case"logs":const r=f.params[1],n=await i.newLogFilter(r);u=function({subId:e,filter:t}){return t.on("update",t=>a(e,t)),{type:s,destroy:async()=>await i.uninstallFilter(t.idHex)}}({subId:c,filter:n});break;default:throw new Error(`SubscriptionManager - unsupported subscription type "${s}"`)}return r[c]=u,void(o.result=c)})),eth_unsubscribe:va((async function(e,t){if(n)throw new Error("SubscriptionManager - attempting to use after destroying");const i=e.params[0],f=r[i];if(!f)return void(t.result=!1);delete r[i],await f.destroy(),t.result=!0}))});return o.destroy=s,{events:f,middleware:o};function a(e,t){f.emit("notification",{jsonrpc:"2.0",method:"eth_subscription",params:{subscription:e,result:t}})}function s(){f.removeAllListeners();for(const e in r)r[e].destroy(),delete r[e];n=!0}};function Xa(e){return{hash:e.hash,parentHash:e.parentHash,sha3Uncles:e.sha3Uncles,miner:e.miner,stateRoot:e.stateRoot,transactionsRoot:e.transactionsRoot,receiptsRoot:e.receiptsRoot,logsBloom:e.logsBloom,difficulty:e.difficulty,number:e.number,gasLimit:e.gasLimit,gasUsed:e.gasUsed,nonce:e.nonce,mixHash:e.mixHash,timestamp:e.timestamp,extraData:e.extraData}}
//# sourceMappingURL=subscriptionManager-0493518a.js.map


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,